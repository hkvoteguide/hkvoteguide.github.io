{"version":3,"sources":["utils/helper.js","queries/gql.js","components/atoms/Columns.js","constants/dcregion.js","components/atoms/Link.js","components/atoms/Avatar.js","components/atoms/Tooltip.js","components/atoms/Tag.js","components/atoms/Rows.js","components/atoms/Loading.js","components/containers/CandidatesContainer.js","components/organisms/ConstituencyCard.js","components/pages/district/list.js"],"names":["__webpack_require__","d","__webpack_exports__","getDistrictListUriFromTag","getDistrictOverviewUriFromTag","getConstituencyUriFromTag","getCodeFromDistrictName","getCouncillorMeta","getColorFromCamp","getColorFromPoliticalAffiliation","getProfilePath","formatNumber","getParameterByName","getCurrentUrl","getConstituencyTagsByCandidateCamps","withLanguage","getCurrentLanguage","geti18nFromCamp","constants_dcregion__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","n","i18n__WEBPACK_IMPORTED_MODULE_2__","tag","currentLanguage","concat","code","name","Object","keys","DCREGION","forEach","k","zh_hk","councillor","result","participatedOrdinary","participatedByElection","lastParticipated","year","type","votesDiff","votes","isWon","participatedElections","person","candidates","filter","c","election_type","length","e","electionYear","myVotes","constituency","find","id","highestVotes","map","reduce","v","Math","max","is_won","camp","泛民","民主","建制","本土","傘兵","自決","其他","不明","pa","mapping","democracy","establishment","localist","other","_arr","_i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","party","value","includes","err","return","name_en","name_zh","uuid","num","toString","replace","url","window","location","href","results","RegExp","exec","decodeURIComponent","tags","filteredCandidates","nominate_status","findIndex","push","groupedCamps","_","groupBy","lang","pathname","match","i18n","language","localStorage","i18nextLng","isShortForm","arguments","suffix","CONSTITUENCIES_DATA","DISTRICT_DATA","QUERY_CONSTITUENCIES","gql","_templateObject","QUERY_GET_CANDIDATES_BY_IDS","_templateObject2","QUERY_GET_CONSTITUENCIES_BY_DISTRICT_CODES","_templateObject3","QUERY_GET_CONSTITUENCIES_BY_TAG","_templateObject4","QUERY_CONSTITUENCY_STATS","_templateObject5","QUERY_GET_DISTRICT","_templateObject6","QUERY_GET_ALL_DISTRICTS","_templateObject7","QUERY_GET_AREA","_templateObject8","QUERY_GET_PERSON_ELECTIONS","_templateObject9","QUERY_GET_PERSON_MEETING_ATTENDANCES","_templateObject10","QUERY_GET_COUNCILLOR","_templateObject11","QUERY_GET_CANDIDATES","_templateObject12","QUERY_GET_NOMINATION_SUMMARY","_templateObject13","_templateObject14","_templateObject15","styled","Box","SeperatedColumns","A","en_us","unelected_dc_seat","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R","S","T","UnstyledLink","Link","UnstyledNavLink","NavLink","DefaultLink","COLORS","main","primary","PeopleAvatar","Avatar","props","opacity","dimension","borderwidth","background","InfoIconSvg","InfoIcon","size","ErrorIconSvg","ErrorIcon","HtmlTooltip","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_3__","assign","className","classes","popper","tooltip","title","Fragment","dangerouslySetInnerHTML","__html","text","onClick","evt","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","StyledChip","Chip","fontsize","backgroundcolor","textcolor","bordercolor","SecondaryStyledChip","Tag","react__WEBPACK_IMPORTED_MODULE_3___default","fontSize","label","handleClick","icon","SecondaryTag","Placeholder","div","CentredCircularProgress","CircularProgress","Loading","react__WEBPACK_IMPORTED_MODULE_1___default","thickness","color","CandidateList","Grid","CandidateGrid","DCCAStatusTagsContainer","StyledTag","StyledSecondaryTag","Candidate","CandidateNumber","ControversialAlert","CandidateName","Typography","CandidatesContainer","election_forum","t","useTranslation","_useState","useState","_useState2","_home_travis_build_cswbrian_district_councils_dashboard_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","imageLoadError","setImageLoadError","react_apollo__WEBPACK_IMPORTED_MODULE_3__","query","variables","_ref","loading","error","data","dcd_candidates","components_atoms_Rows__WEBPACK_IMPORTED_MODULE_8__","index","key","forum","_material_ui_icons_OndemandVideo__WEBPACK_IMPORTED_MODULE_19___default","fireEvent","ca","ac","lb","open","components_atoms_Columns__WEBPACK_IMPORTED_MODULE_9__","container","direction","candidate","item","xs","sm","md","components_atoms_Link__WEBPACK_IMPORTED_MODULE_6__","to","components_atoms_Avatar__WEBPACK_IMPORTED_MODULE_5__","src","process","imgProps","onError","target","IMAGE_HOST_URI","candidate_number","components_atoms_Tooltip__WEBPACK_IMPORTED_MODULE_10__","disableFocusListener","disableTouchListener","placement","variant","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","political_affiliation_en","political_affiliation_zh","propsType","StyledCard","Card","TagContainer","withRouter","sortedTags","sort","b","react_default","history","gutterBottom","Columns","Container","Paper","list_templateObject","DistrictListPage","_props$match$params","params","react_apollo_esm","dcd_constituencies","organisms_ConstituencyCard"],"mappings":"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","file":"static/js/23.eae56b1d.chunk.js","sourcesContent":["import { DCREGION } from 'constants/dcregion'\nimport _ from 'lodash'\nimport i18n from 'i18n'\n\nexport const getDistrictListUriFromTag = tag => {\n  const currentLanguage = getCurrentLanguage()\n  return `/${currentLanguage}/district/2019/tags/${tag}`\n}\n\nexport const getDistrictOverviewUriFromTag = code => {\n  const currentLanguage = getCurrentLanguage()\n  return `/${currentLanguage}/district/2019/${code}`\n}\n\nexport const getConstituencyUriFromTag = code => {\n  const currentLanguage = getCurrentLanguage()\n  return `/${currentLanguage}/district/2019/${code}`\n}\n\nexport const getCodeFromDistrictName = name => {\n  let code = 'A'\n  Object.keys(DCREGION).forEach(k => {\n    if (DCREGION[k].zh_hk === name) {\n      code = k\n    }\n  })\n  return code\n}\n\n/**\n * Passing a councillor object and get the meta data for it\n * (By QUERY_GET_COUNCILLOR_AND_CANDIDATES query)\n */\nexport const getCouncillorMeta = councillor => {\n  const result = {\n    participatedOrdinary: 0,\n    participatedByElection: 0,\n    lastParticipated: {\n      year: 2019,\n      type: 'ordinary',\n      votesDiff: 0,\n      votes: 0,\n      isWon: false,\n    },\n  }\n\n  // should already sorted from query\n  const participatedElections = councillor.person.candidates || []\n  result.participatedByElection = participatedElections.filter(\n    c => c.election_type === 'by-election'\n  ).length\n  result.participatedOrdinary = participatedElections.filter(\n    c => c.election_type === 'ordinary'\n  ).length\n\n  if (participatedElections.length > 0) {\n    // Filter out 2019 result\n    const e = participatedElections.filter(\n      e => !(e.year === 2019 && e.election_type === 'ordinary')\n    )[0]\n    const electionYear = e.year\n\n    const myVotes = e.constituency.candidates.find(\n      c => c.person.id === councillor.person.id && c.year === electionYear\n    ).votes\n    const highestVotes = e.constituency.candidates\n      .filter(\n        c => c.person.id !== councillor.person.id && c.year === electionYear\n      )\n      .map(c => c.votes)\n      .reduce((c, v) => Math.max(c, v), 0)\n    result.lastParticipated = {\n      year: e.year,\n      isWon: e.is_won,\n      votesDiff: myVotes - highestVotes,\n      votes: myVotes,\n      type: e.election_type,\n    }\n  }\n  return result\n}\n\nexport const getColorFromCamp = camp => {\n  if (!camp) return 'uncertain'\n  const mapping = {\n    泛民: 'democracy',\n    民主: 'democracy',\n    建制: 'establishment',\n    本土: 'localist',\n    傘兵: 'localist',\n    自決: 'localist',\n    其他: 'other',\n    不明: 'uncertain',\n  }\n\n  return mapping[camp] || 'uncertain'\n}\n\nexport const getColorFromPoliticalAffiliation = pa => {\n  if (!pa) return 'uncertain'\n\n  const mapping = {\n    democracy: [\n      '民主黨',\n      '公民黨',\n      '香港民主民生協進會',\n      '民協',\n      '社會民主連線',\n      '支聯會',\n      '民主動力',\n      '街坊工友服務處',\n      '街工',\n      '工黨',\n      '職工盟',\n      '新民主同盟',\n      '香港本土',\n      '獨立民主派',\n    ],\n    establishment: [\n      '民主建港協進聯盟',\n      '民建聯',\n      '新界社團聯會',\n      '新社聯',\n      '香港工會聯合會',\n      '工聯會',\n      '港九勞工社團聯會',\n      '香港經濟民生聯盟',\n      '西九新動力',\n      '自由黨',\n      '新民黨',\n      '新世紀論壇',\n    ],\n    localist: [\n      '香港眾志',\n      '青年新政',\n      '本土民主前線',\n      '東九龍社區關注組',\n      '天水圍民生關注平台',\n      '慈雲山建設力量',\n      '屯門社區關注組',\n      '長沙灣社區發展力量',\n      '社區網絡聯盟',\n      '沙田社區網絡',\n      '荃灣社區網絡',\n      '天水圍社區發展網絡',\n      '屯門社區網絡',\n      '葵青連結動力',\n      '藍田社區網絡',\n      '埔向晴天',\n      '荃灣民生動力',\n      '北區動源',\n      '維多利亞社區協會',\n    ],\n    other: ['民主思路', '新思維'],\n  }\n\n  for (let camp of Object.keys(mapping)) {\n    for (let party of mapping[camp]) {\n      if (pa.includes(party)) {\n        return camp\n      }\n    }\n  }\n\n  return 'uncertain'\n}\n\nexport const getProfilePath = person => {\n  const { name_en, name_zh, uuid } = person\n  const currentLanguage = getCurrentLanguage()\n  return `/${currentLanguage}/profile/${name_zh || name_en}/${uuid}`\n}\n\nexport const formatNumber = num =>\n  num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n\nexport const getParameterByName = (name, url) => {\n  if (!url) url = window.location.href\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url)\n  if (!results) return null\n  if (!results[2]) return ''\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport const getCurrentUrl = () => {\n  return window.location.href\n}\n\nexport const getConstituencyTagsByCandidateCamps = candidates => {\n  const tags = []\n  const filteredCandidates = candidates.filter(\n    c =>\n      c.election_type === 'ordinary' &&\n      c.nominate_status === 'confirmed' &&\n      c.tags.findIndex(\n        tag => tag.type === 'demo_status' && tag.tag === 'planb'\n      ) === -1\n  )\n\n  if (filteredCandidates.length >= 3) {\n    tags.push('多人混戰')\n  }\n\n  const groupedCamps = _.groupBy(filteredCandidates, c => c.camp)\n  if (groupedCamps['民主'] && groupedCamps['民主'].length > 1) {\n    tags.push('民主撞區')\n  }\n\n  if (groupedCamps['建制'] && groupedCamps['建制'].length > 1) {\n    tags.push('建制撞區')\n  }\n\n  return tags\n}\n\nexport const withLanguage = (name_en, name_zh) => {\n  var lang = window.location.pathname.match(/^\\/([\\w]{2})\\//)\n  lang = lang ? lang[1] : 'zh'\n  return lang === 'en' && name_en ? name_en : name_zh\n}\n\nexport const getCurrentLanguage = () => {\n  return i18n.language || window.localStorage.i18nextLng || 'zh'\n}\n\nexport const geti18nFromCamp = (camp, isShortForm = false) => {\n  if (!camp) return camp\n\n  const suffix = isShortForm ? '_short_form' : ''\n  const mapping = {\n    民主: `camp.democracy${suffix}`,\n    建制: `camp.establishment${suffix}`,\n    其他: `camp.others${suffix}`,\n  }\n\n  if (!mapping[camp]) return camp\n  return mapping[camp]\n}\n","// TODO: split this\nimport gql from 'graphql-tag'\n\nconst CONSTITUENCIES_DATA = `\nid\nname_zh\nname_en\ndistrict {\n  dc_code\n  dc_name_en\n  dc_name_zh\n  area_name_en\n  area_name_zh\n}\ncode\ndeviation_percentage\nexpected_population\nmain_areas\ndescription_zh\ndescription_en\nvote_stats {\n  count\n  type\n  subtype\n  category_1\n  category_2\n}\nstations {\n  station_code\n  name_en\n  name_zh\n  location\n}\ntags {\n  tag\n  type\n}\nmeta\n`\n\nconst DISTRICT_DATA = `\narea_code\narea_name_zh\narea_name_en\ndc_code\ndc_name_zh\ndc_name_en\ndc_description_zh\nconstituencies( where: { year: { _eq: $year } }, order_by: {code: asc} ) {\n  id\n  name_zh\n  name_en\n  code\n  candidates( where: { year: { _eq: $year } }, order_by: {candidate_number: asc} ) {\n    candidate_number\n    is_won\n    political_affiliation\n    political_affiliation_zh\n    political_affiliation_en\n    election_type\n    camp\n    person {\n      id\n      uuid\n      name_zh\n      name_en\n      related_organization_en\n      related_organization_zh\n    }\n    nominate_status\n    tags {\n      tag\n      type\n    }\n  }\n}\n`\n\nexport const QUERY_CONSTITUENCIES = gql`\nquery($year: Int!, $code: String!) {\n  dcd_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\n    ${CONSTITUENCIES_DATA}\n    predecessors {\n      intersect_area\n      predecessor {\n        ${CONSTITUENCIES_DATA}\n      }\n    }\n  }  \n}\n`\n\nexport const QUERY_GET_CANDIDATES_BY_IDS = gql`\n  query($year: Int!, $person_id: [Int!]) {\n    dcd_constituencies(\n      where: {\n        year: { _eq: $year }\n        candidates: { person: { id: { _in: $person_id } } }\n      }\n      order_by: { code: asc }\n    ) {\n      id\n      name_zh\n      name_en\n      code\n      candidates(\n        where: { year: { _eq: $year }, person: { id: { _in: $person_id } } }\n        order_by: { candidate_number: asc }\n      ) {\n        candidate_number\n        is_won\n        political_affiliation\n        political_affiliation_zh\n        political_affiliation_en\n        election_type\n        camp\n        person {\n          id\n          uuid\n          name_zh\n          name_en\n          related_organization\n        }\n        nominate_status\n        tags {\n          tag\n          type\n        }\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_CONSTITUENCIES_BY_DISTRICT_CODES = gql`\n  query($year: Int!, $dc: [String!]) {\n    dcd_constituencies(\n      where: { year: { _eq: $year }, code: { _in: $dc } }\n      order_by: { code: asc }\n    ) {\n      id\n      name_zh\n      name_en\n      code\n      candidates(\n        where: { year: { _eq: $year } }\n        order_by: { candidate_number: asc }\n      ) {\n        candidate_number\n        is_won\n        political_affiliation\n        political_affiliation_zh\n        political_affiliation_en\n        election_type\n        camp\n        person {\n          id\n          uuid\n          name_zh\n          name_en\n          related_organization\n        }\n        nominate_status\n        tags {\n          tag\n          type\n        }\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_CONSTITUENCIES_BY_TAG = gql`\nquery($year: Int!, $tag: String!) {\n  dcd_constituencies(\n    where: { year: { _eq: $year }, tags: { tag: {_eq: $tag} } }\n    order_by: {code: asc }\n  ) {\n    ${CONSTITUENCIES_DATA}\n  }  \n}\n`\n\nexport const QUERY_CONSTITUENCY_STATS = gql`\n  query($year: Int!, $code: String!) {\n    dcd_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\n      vote_stats {\n        count\n        type\n        subtype\n        category_1\n        category_2\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_DISTRICT = gql`\n  query($year: Int!, $code: String!) {\n    dcd_districts( where: { dc_code: { _eq: $code} } ) {\n      ${DISTRICT_DATA}\n    }\n  }\n`\n\nexport const QUERY_GET_ALL_DISTRICTS = gql`\n  query($year: Int!) {\n    dcd_districts(order_by: {dc_code: asc}) {\n      ${DISTRICT_DATA}\n    }\n  }\n`\n\nexport const QUERY_GET_AREA = gql`\n  query {\n    dcd_districts {\n      area_code\n      area_name_en\n      area_name_zh\n      dc_code\n      dc_name_en\n      dc_name_zh\n      constituencies(where: { year: { _eq: 2019 } }) {\n        code\n        name_zh\n        name_en\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_PERSON_ELECTIONS = gql`\n  query get_person_elections($person_id: Int!) {\n    dcd_people_by_pk(id: $person_id) {\n      candidates(order_by: { year: desc }) {\n        year\n        constituency {\n          name_zh\n          name_en\n          code\n        }\n        election_type\n        camp\n        political_affiliation\n        political_affiliation_zh\n        political_affiliation_en\n        votes\n        is_won\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_PERSON_MEETING_ATTENDANCES = gql`\n  query get_meeting_attendance($person_id: Int!) {\n    dcd_councillors(where: { person: { id: { _eq: $person_id } } }) {\n      year\n      cacode\n      term_from\n      term_to\n      career\n      district {\n        dc_name_zh\n      }\n      political_affiliation\n      post\n      constituency {\n        id\n        name_zh\n      }\n      meeting_attendances(\n        order_by: { meeting: { meet_year: desc }, total: desc }\n      ) {\n        meeting {\n          meet_name\n          meet_type\n          meet_year\n        }\n        attended\n        total\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_COUNCILLOR = gql`\n  query fetch_councillors($year: Int!, $code: String!) {\n    dcd_councillors(\n      where: { cacode: { _eq: $code }, year: { _eq: $year } }\n      order_by: { term_to: desc }\n    ) {\n      year\n      term_to\n      term_from\n      political_affiliation\n      constituency {\n        name_zh\n        name_en\n        code\n      }\n      person {\n        id\n        name_en\n        name_zh\n        uuid\n        candidates(order_by: { year: desc }) {\n          votes\n          is_won\n          year\n          cacode\n          election_type\n          constituency {\n            year\n            name_en\n            name_zh\n            candidates {\n              person {\n                id\n                name_en\n                name_zh\n              }\n              year\n              election_type\n              votes\n              political_affiliation\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_CANDIDATES = gql`\n  query fetch_candidates($year: Int!, $code: String!) {\n    dcd_candidates(\n      where: { cacode: { _eq: $code }, year: { _eq: $year } }\n      order_by: { candidate_number: asc }\n    ) {\n      candidate_number\n      is_won\n      political_affiliation\n      political_affiliation_en\n      political_affiliation_zh\n      election_type\n      camp\n      nominate_status\n      tags {\n        tag\n        type\n      }\n      person {\n        id\n        uuid\n        name_zh\n        name_en\n        related_organization\n        description\n      }\n    }\n  }\n`\n\n// This is a dangerous query.. the data size is huge (for 2019 it is 19MB)\nexport const QUERY_GET_CONSTITUENCY_CAMP_DATA = gql`\n  query fetch_camp_data($year: Int!) {\n    dcd_constituencies(where: { year: { _eq: $year } }) {\n      code\n      predecessors(limit: 1, order_by: { intersect_area: desc }) {\n        predecessor {\n          code\n          candidates {\n            camp\n            votes\n            is_won\n          }\n          vote_stats(where: { subtype: { _eq: \"NEW_VOTERS\" } }) {\n            type\n            subtype\n            category_1\n            category_2\n            count\n          }\n        }\n      }\n      vote_stats {\n        type\n        subtype\n        category_1\n        category_2\n        count\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_NOMINATION_SUMMARY = gql`\n  query {\n    c2019: dcd_constituencies(where: { year: { _eq: 2019 } }) {\n      code\n      name_en\n      name_zh\n      district {\n        dc_code\n        dc_name_en\n        dc_name_zh\n      }\n      candidates {\n        camp\n        nominated_at\n        nominate_status\n        election_type\n        tags {\n          tag\n          type\n        }\n      }\n      tags {\n        tag\n      }\n    }\n\n    c2015: dcd_constituencies(where: { year: { _eq: 2015 } }) {\n      code\n      name_en\n      name_zh\n      candidates {\n        votes\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_CONFIG = gql`\n  query fetch_config($key: String!) {\n    dcd_config(where: { key: { _eq: $key } }) {\n      value\n    }\n  }\n`\n","import styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\n\nexport default styled(Box)`\n  && {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    width: 100%;\n    margin: auto;\n  }\n`\n\nexport const SeperatedColumns = styled(Box)`\n  && {\n    margin-top: 8px;\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n`\n","// deprecated. should use the data from server\nexport const DCREGION = {\n  A: {\n    zh_hk: '中西區',\n    en_us: 'Central and Western',\n    unelected_dc_seat: 0,\n  },\n  B: {\n    zh_hk: '灣仔',\n    en_us: 'Wan Chai',\n    unelected_dc_seat: 0,\n  },\n  C: {\n    zh_hk: '東區',\n    en_us: 'Eastern',\n    unelected_dc_seat: 0,\n  },\n  D: {\n    zh_hk: '南區',\n    en_us: 'Southern',\n    unelected_dc_seat: 0,\n  },\n  E: {\n    zh_hk: '油尖旺',\n    en_us: 'Yau Tsim Mong',\n    unelected_dc_seat: 0,\n  },\n  F: {\n    zh_hk: '深水埗',\n    en_us: 'Sham Shui Po',\n    unelected_dc_seat: 0,\n  },\n  G: {\n    zh_hk: '九龍城',\n    en_us: 'Kowloon City',\n    unelected_dc_seat: 0,\n  },\n  H: {\n    zh_hk: '黃大仙',\n    en_us: 'Wong Tai Sin',\n    unelected_dc_seat: 0,\n  },\n  J: {\n    zh_hk: '觀塘',\n    en_us: 'Kwun Tong',\n    unelected_dc_seat: 0,\n  },\n  K: {\n    zh_hk: '荃灣',\n    en_us: 'Tsuen Wan',\n    unelected_dc_seat: 2,\n  },\n  L: {\n    zh_hk: '屯門',\n    en_us: 'Tuen Mun',\n    unelected_dc_seat: 1,\n  },\n  M: {\n    zh_hk: '元朗',\n    en_us: 'Yuen Long',\n    unelected_dc_seat: 6,\n  },\n  N: {\n    zh_hk: '北區',\n    en_us: 'North',\n    unelected_dc_seat: 4,\n  },\n  P: {\n    zh_hk: '大埔',\n    en_us: 'Tai Po',\n    unelected_dc_seat: 2,\n  },\n  Q: {\n    zh_hk: '西貢',\n    en_us: 'Sai Kung',\n    unelected_dc_seat: 2,\n  },\n  R: {\n    zh_hk: '沙田',\n    en_us: 'Sha Tin',\n    unelected_dc_seat: 1,\n  },\n  S: {\n    zh_hk: '葵青',\n    en_us: 'Kwai Tsing',\n    unelected_dc_seat: 1,\n  },\n  T: {\n    zh_hk: '離島',\n    en_us: 'Islands',\n    unelected_dc_seat: 8,\n  },\n}\n","import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { COLORS } from 'ui/theme'\n\nexport const UnstyledLink = styled(Link)`\n  text-decoration: unset;\n  color: black;\n  font-style: unset;\n  cursor: pointer;\n`\n\nexport const UnstyledNavLink = styled(NavLink)`\n  text-decoration: unset;\n  color: unset;\n  font-style: unset;\n  cursor: pointer;\n`\nexport const DefaultLink = styled(UnstyledLink)`\n  color: ${COLORS.main.primary};\n  font-weight: 500;\n`\n","import styled from 'styled-components'\nimport Avatar from '@material-ui/core/Avatar'\nimport { COLORS } from 'ui/theme'\n\nexport const PeopleAvatar = styled(Avatar)`\n  && {\n    opacity: ${props => props.opacity};\n    width: ${props => props.dimension};\n    height: ${props => props.dimension};\n    border: ${props => props.borderwidth}px\n      ${props => props.camp && COLORS.camp[props.camp].background} solid;\n  }\n`\n","import styled from 'styled-components'\nimport React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport ErrorIcon from '@material-ui/icons/ErrorOutline'\nconst InfoIconSvg = styled(InfoIcon)`\n  && {\n    font-size: ${props => props.size || 16}px;\n    vertical-align: bottom;\n  }\n`\n\nconst ErrorIconSvg = styled(ErrorIcon)`\n  && {\n    font-size: ${props => props.size || 16}px;\n    vertical-align: bottom;\n  }\n`\n\nexport const HtmlTooltip = styled(props => (\n  <Tooltip\n    className={props.className}\n    classes={{ popper: props.className, tooltip: 'tooltip' }}\n    title={\n      <>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: props.text,\n          }}\n        />\n      </>\n    }\n    {...props}\n    onClick={evt => {\n      evt.preventDefault()\n      evt.stopPropagation()\n      evt.nativeEvent.stopPropagation()\n      evt.nativeEvent.stopImmediatePropagation()\n    }}\n  >\n    {props.type === 'error' ? (\n      <ErrorIconSvg size={props.size || 16} />\n    ) : (\n      <InfoIconSvg size={props.size || 16} />\n    )}\n  </Tooltip>\n))`\n  & .tooltip {\n    border: 1px solid #000;\n    background-color: #fff;\n    color: #000;\n  }\n  & .MuiTooltip-tooltipPlacementBottom {\n    margin: 5px 0px 0px;\n  }\n`\n","import styled from 'styled-components'\nimport Chip from '@material-ui/core/Chip'\nimport React from 'react'\nimport { COLORS } from 'ui/theme'\n\nconst StyledChip = styled(Chip)`\n  && {\n    font-size: ${props => props.fontsize || 12}px;\n    background: ${props => props.backgroundcolor || COLORS.main.primary};\n    color: ${props => props.textcolor || COLORS.main.background};\n    border: ${props => props.borderwidth || 0}px\n      ${props => props.bordercolor || 'rgba(0, 0, 0, 0.5)'} solid;\n    padding: 0 6px 0;\n    svg {\n      fill: ${props => props.textcolor || COLORS.main.background};\n    }\n  }\n`\nconst SecondaryStyledChip = styled(Chip)`\n  && {\n    font-size: ${props => props.fontsize || 12}px;\n    background: ${props => props.textcolor || COLORS.main.background};\n    color: ${props => props.backgroundcolor || COLORS.main.primary};\n    border: ${props => props.borderwidth || 1}px\n      ${props => props.backgroundcolor || COLORS.main.primary} solid;\n  }\n`\n\nexport const Tag = props => {\n  return (\n    <StyledChip\n      fontSize={props.fontsize}\n      textcolor={props.textcolor}\n      backgroundcolor={props.backgroundcolor}\n      bordercolor={props.bordercolor}\n      borderwidth={props.borderwidth}\n      label={props.value}\n      size=\"small\"\n      onClick={props.handleClick}\n      className={props.className}\n      icon={props.icon}\n    />\n  )\n}\n\nexport const SecondaryTag = props => {\n  return (\n    <SecondaryStyledChip\n      fontSize={props.fontsize}\n      textcolor={props.textcolor}\n      backgroundcolor={props.backgroundcolor}\n      bordercolor={props.bordercolor}\n      borderwidth={props.borderwidth}\n      label={props.value}\n      size=\"small\"\n      onClick={props.handleClick}\n      className={props.className}\n    />\n  )\n}\n","import styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\n\nexport default styled(Box)`\n  && {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-items: flex-start;\n    width: 100%;\n    margin: auto;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst Placeholder = styled.div`\n  && {\n    width: 100%;\n    height: calc(100vh - 56px);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`\n\nconst CentredCircularProgress = styled(CircularProgress)`\n  && {\n    max-width: 50%;\n  }\n`\n\nexport const Loading = props => {\n  return (\n    <Placeholder className={props.className}>\n      <CentredCircularProgress thickness={3} size={64} color=\"secondary\" />\n    </Placeholder>\n  )\n}\n","import React, { useState } from 'react'\nimport { Query } from 'react-apollo'\nimport { QUERY_GET_CANDIDATES } from 'queries/gql'\nimport { PeopleAvatar } from 'components/atoms/Avatar'\nimport { UnstyledNavLink } from 'components/atoms/Link'\nimport { Tag, SecondaryTag } from 'components/atoms/Tag'\nimport Rows from 'components/atoms/Rows'\nimport { SeperatedColumns } from 'components/atoms/Columns'\nimport { HtmlTooltip } from 'components/atoms/Tooltip'\nimport { Box, Typography, Grid } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { fireEvent } from 'utils/ga_fireevent'\nimport { useTranslation } from 'react-i18next'\nimport {\n  getColorFromCamp,\n  getConstituencyTagsByCandidateCamps,\n  withLanguage,\n  getCurrentLanguage,\n} from 'utils/helper'\nimport { COLORS } from 'ui/theme'\nimport OndemandVideoIcon from '@material-ui/icons/OndemandVideo'\n\nconst IMAGE_HOST_URI =\n  process.env.REACT_APP_HOST_URI || 'https://hkvoteguide.github.io'\n\nconst CandidateList = styled(Grid)`\n  && {\n  }\n`\n\nconst CandidateGrid = styled(Grid)`\n  && {\n    margin-bottom: 8px;\n  }\n`\n\nconst DCCAStatusTagsContainer = styled(SeperatedColumns)`\n  && {\n    justify-content: flex-end;\n  }\n`\n\nconst StyledTag = styled(Tag)`\n  && {\n    margin-left: 8px;\n  }\n`\n\nconst StyledSecondaryTag = styled(SecondaryTag)`\n  && {\n    margin-left: 8px;\n  }\n`\n\nconst Candidate = styled(Box)`\n  && {\n    position: relative;\n    width: auto;\n    text-align: center;\n    & > div {\n      margin: 0 auto;\n    }\n  }\n`\n\nconst CandidateNumber = styled(Box)`\n  && {\n    position: relative;\n    margin-bottom: -18px !important;\n    top: -19px;\n    left: -28px;\n    border-radius: 50%;\n    font-weight: 700;\n    width: ${props => props.dimension};\n    height: ${props => props.dimension};\n    background-color: ${props => COLORS.camp[props.camp].background};\n    color: ${props => COLORS.camp[props.camp].text};\n    text-align: center;\n  }\n`\n\nconst ControversialAlert = styled.div`\n  && {\n    position: relative;\n    margin-bottom: -21px !important;\n    top: -21px;import { Tag } from 'components/atoms/Tag';\n\n    left: 30px;\n  }\n`\nconst CandidateName = styled(Typography)`\n  && {\n    margin-top: 5px;\n    font-weight: 700;\n  }\n`\n\nconst CandidatesContainer = props => {\n  const { code, year, election_forum } = props\n  const { t } = useTranslation()\n  const [imageLoadError, setImageLoadError] = useState(true)\n\n  return (\n    <Query\n      query={QUERY_GET_CANDIDATES}\n      variables={{ code, year }} // variables={{ code, year }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return null\n        if (error) return `Error! ${error}`\n\n        const candidates =\n          data.dcd_candidates &&\n          data.dcd_candidates.filter(c => c.election_type === 'ordinary')\n\n        const currentLanguage = getCurrentLanguage()\n\n        const tags = getConstituencyTagsByCandidateCamps(candidates)\n        return (\n          <>\n            {candidates.length > 0 && (\n              <>\n                <Rows>\n                  <DCCAStatusTagsContainer>\n                    {tags.length > 0 &&\n                      tags.map((tag, index) => (\n                        <StyledSecondaryTag value={tag} key={index} />\n                      ))}\n                    {election_forum &&\n                      election_forum.map((forum, index) => (\n                        <StyledTag\n                          icon={<OndemandVideoIcon />}\n                          value={t('candidateContainer.election_forum', {\n                            n: election_forum.length > 1 ? index + 1 : '',\n                          })}\n                          handleClick={() => {\n                            fireEvent({\n                              ca: 'battleground',\n                              ac: 'click',\n                              lb: 'watch_election_forum',\n                            })\n                            window.open(forum, '_blank')\n                          }}\n                        />\n                      ))}\n                  </DCCAStatusTagsContainer>\n                </Rows>\n                <Rows>\n                  <SeperatedColumns>\n                    <CandidateList container direction=\"row\">\n                      {/* Max 3 columns and always centered */}\n                      {candidates.map(candidate => (\n                        <CandidateGrid\n                          key={candidate.person.id}\n                          item\n                          xs={\n                            candidates.length < 3 ? 12 / candidates.length : 4\n                          }\n                          sm={\n                            candidates.length < 4 ? 12 / candidates.length : 3\n                          }\n                          md={\n                            candidates.length < 6 ? 12 / candidates.length : 2\n                          }\n                        >\n                          <UnstyledNavLink\n                            to={`/${currentLanguage}/profile/${candidate.person\n                              .name_zh || candidate.person.name_en}/${\n                              candidate.person.uuid\n                            }`}\n                          >\n                            <Candidate>\n                              <PeopleAvatar\n                                dimension=\"84px\"\n                                borderwidth={'4'}\n                                camp={getColorFromCamp(candidate.camp)}\n                                src={`${IMAGE_HOST_URI}/static/images/avatar/100x100/${candidate.person.uuid}.jpg`}\n                                imgProps={{\n                                  onError: e => {\n                                    // wingkwong: avoid infinite callbacks if fallback image fails\n                                    if (imageLoadError) {\n                                      setImageLoadError(false)\n                                      e.target.src =\n                                        IMAGE_HOST_URI +\n                                        '/static/images/avatar/default.png'\n                                    }\n                                  },\n                                }}\n                                opacity={\n                                  candidate.nominate_status === 'disqualified'\n                                }\n                              />\n                              {candidate.candidate_number > 0 && (\n                                <CandidateNumber\n                                  dimension=\"18px\"\n                                  camp={getColorFromCamp(candidate.camp)}\n                                >\n                                  {candidate.candidate_number}\n                                </CandidateNumber>\n                              )}\n                              {candidate.tags.findIndex(\n                                tag =>\n                                  tag.type === 'camp' && tag.tag === '有爭議'\n                              ) > -1 && (\n                                <ControversialAlert>\n                                  <HtmlTooltip\n                                    disableFocusListener\n                                    disableTouchListener\n                                    // text=\"侯選人政治立場未明\"\n                                    text={t('candidate.noPoliticalAffiliation')}\n                                    placement=\"bottom\"\n                                    size={21}\n                                  />\n                                </ControversialAlert>\n                              )}\n                              <CandidateName variant=\"h5\">\n                                {withLanguage(\n                                  candidate.person.name_en,\n                                  candidate.person.name_zh ||\n                                    candidate.person.name_en\n                                )}\n                              </CandidateName>\n\n                              <Typography variant=\"body2\">\n                                {withLanguage(\n                                  candidate.political_affiliation_en,\n                                  candidate.political_affiliation_zh\n                                ) || t('candidate.noPoliticalAffiliation')}\n                              </Typography>\n\n                              {candidate.nominate_status === 'disqualified' && (\n                                <Typography variant=\"body2\">\n                                  {/* 取消資格 */}\n                                  {t(\n                                    'candidate.nominateStatus.disqualified_bracket'\n                                  )}\n                                </Typography>\n                              )}\n                              {candidate.nominate_status === 'suspended' && (\n                                <Typography variant=\"body2\">\n                                  {t(\n                                    'candidate.nominateStatus.suspended_bracket'\n                                  )}\n                                </Typography>\n                              )}\n                              {candidate.tags.findIndex(\n                                tag =>\n                                  tag.type === 'demo_status' &&\n                                  tag.tag === 'planb'\n                              ) > -1 && (\n                                <Typography variant=\"body2\">\n                                  {t(\n                                    'candidate.nominateStatus.demo_planb_bracket'\n                                  )}\n                                </Typography>\n                              )}\n                            </Candidate>\n                          </UnstyledNavLink>\n                        </CandidateGrid>\n                      ))}\n                    </CandidateList>\n                  </SeperatedColumns>\n                </Rows>\n              </>\n            )}\n          </>\n        )\n      }}\n    </Query>\n  )\n}\n\nCandidatesContainer.propsType = {\n  // cacode: PropTypes.string,\n  // year: PropTypes.number,\n}\nexport default CandidatesContainer\n","import React from 'react'\nimport { Card, Typography } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { withRouter } from 'react-router-dom'\nimport { SecondaryTag } from 'components/atoms/Tag'\nimport Box from '@material-ui/core/Box'\nimport Columns from 'components/atoms/Columns'\nimport {\n  getDistrictListUriFromTag,\n  getCurrentLanguage,\n  withLanguage,\n} from 'utils/helper'\nimport CandidatesContainer from 'components/containers/CandidatesContainer'\n\nconst StyledCard = styled(Card)`\n  && {\n    margin: 0 0 16px;\n    padding: 16px;\n    height: auto;\n  }\n`\n\nconst TagContainer = styled(Box)`\n  && {\n    margin-top: 6px;\n    margin-right: 8px;\n  }\n`\n\nconst ConstituencyCard = props => {\n  const { year, constituency } = props\n  const { tags } = constituency\n  const sortedTags = tags.sort((a, b) =>\n    a.type === 'boundary' ? -1 : a.type === b.type ? 0 : 1\n  )\n  const currentLanguage = getCurrentLanguage()\n\n  return (\n    <StyledCard\n      onClick={() => {\n        props.history.push(\n          `/${currentLanguage}/district/2019/${constituency.code}`\n        )\n      }}\n    >\n      <Typography variant=\"h6\" gutterBottom>\n        {withLanguage(constituency.name_en, constituency.name_zh)}（\n        {constituency.code}）\n      </Typography>\n      <Columns>\n        {sortedTags.map((tag, index) => (\n          <TagContainer>\n            <SecondaryTag\n              key={index}\n              value={tag.tag}\n              handleClick={evt => {\n                evt.stopPropagation()\n                props.history.push(getDistrictListUriFromTag(tag.tag))\n              }}\n            />\n          </TagContainer>\n        ))}\n      </Columns>\n      <CandidatesContainer year={year} code={constituency.code} />\n    </StyledCard>\n  )\n}\n\nexport default withRouter(ConstituencyCard)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Query } from 'react-apollo'\nimport { QUERY_GET_CONSTITUENCIES_BY_TAG } from 'queries/gql'\nimport ConstituencyCard from 'components/organisms/ConstituencyCard'\nimport { Typography } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport { Loading } from 'components/atoms/Loading'\n\nconst Container = styled(Paper)`\n  && {\n    width: 100%;\n    padding: 16px;\n    box-shadow: none;\n  }\n`\n\nconst DistrictListPage = props => {\n  const {\n    match: {\n      params: { year, tag },\n    },\n  } = props\n\n  return (\n    <Query\n      query={QUERY_GET_CONSTITUENCIES_BY_TAG}\n      variables={{ tag, year: 2019 }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <Loading />\n        if (error) return `Error! ${error}`\n\n        return (\n          <>\n            <Container>\n              <Typography variant=\"h4\">{`${tag}：${data.dcd_constituencies.length}個選區`}</Typography>\n            </Container>\n            <Container>\n              {data.dcd_constituencies.map(c => (\n                <ConstituencyCard key={c.id} year={year} constituency={c} />\n              ))}\n            </Container>\n          </>\n        )\n      }}\n    </Query>\n  )\n}\n\nexport default DistrictListPage\n"],"sourceRoot":""}