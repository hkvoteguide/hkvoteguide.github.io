{"version":3,"sources":["utils/helper.js","queries/gql.js","components/atoms/Columns.js","constants/dcregion.js","components/district/MainAreas.js","components/OLMap.js","ui/responsive.js","components/district/DistrictCard.js","components/atoms/charts/WaffleChart.js","components/district/Metrics.js","components/pages/district/index.js"],"names":["getDistrictListUriFromTag","tag","currentLanguage","getCurrentLanguage","concat","getDistrictOverviewUriFromTag","code","getConstituencyUriFromTag","getCodeFromDistrictName","name","Object","keys","DCREGION","forEach","k","zh_hk","getCouncillorMeta","councillor","result","participatedOrdinary","participatedByElection","lastParticipated","year","type","votesDiff","votes","isWon","participatedElections","person","candidates","filter","c","election_type","length","e","electionYear","myVotes","constituency","find","id","highestVotes","map","reduce","v","Math","max","is_won","getColorFromCamp","camp","泛民","民主","建制","本土","傘兵","自決","其他","不明","getColorFromPoliticalAffiliation","pa","mapping","democracy","establishment","localist","other","_arr","_i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","party","value","includes","err","return","getProfilePath","name_en","name_zh","uuid","formatNumber","num","toString","replace","getParameterByName","url","window","location","href","results","RegExp","exec","decodeURIComponent","getCurrentUrl","getConstituencyTagsByCandidateCamps","tags","filteredCandidates","nominate_status","findIndex","push","withLanguage","groupedCamps","_","groupBy","lang","pathname","match","i18n","language","localStorage","i18nextLng","geti18nFromCamp","isShortForm","arguments","suffix","groupVoteStat","voteStats","data","stat","subtype","aggregations","all_voters","VOTERS","count","new_voters","NEW_VOTERS","computeTurnouts","constituencies","turnouts","govData","isEmpty","constituencyTurnouts","get","turnoutIndex","findLastIndex","t","now","Date","_home_travis_build_cswbrian_district_councils_dashboard_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","total","vote_stats","current","updateTime","setHours","districtTurnouts","district","dc_code","dt","districtTotalFromGov","maxBy","d","totalTurnout","totalFromGov","turnout","percentage","toLocaleTimeString","navigator","hour","minute","sort","a","b","getDistrictTurnouts","getConstituencyTurnouts","districtCode","customVoteStationMapping","station_code","M3901","CONSTITUENCIES_DATA","DISTRICT_DATA","QUERY_CONSTITUENCIES","gql","_templateObject","QUERY_GET_CANDIDATES_BY_IDS","_templateObject2","QUERY_GET_CONSTITUENCIES_BY_DISTRICT_CODES","_templateObject3","QUERY_GET_CONSTITUENCIES_BY_TAG","_templateObject4","QUERY_CONSTITUENCY_STATS","_templateObject5","QUERY_GET_ALL_DISTRICTS","_templateObject6","_templateObject7","QUERY_GET_AREA","_templateObject8","QUERY_GET_PERSON_ELECTIONS","_templateObject9","QUERY_GET_PERSON_MEETING_ATTENDANCES","_templateObject10","QUERY_GET_COUNCILLOR","_templateObject11","QUERY_GET_CANDIDATES","_templateObject12","QUERY_GET_NOMINATION_SUMMARY","_templateObject13","_templateObject14","_templateObject15","styled","Box","SeperatedColumns","__webpack_require__","__webpack_exports__","A","en_us","unelected_dc_seat","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R","S","T","Container","div","MainAreas","_this$props","this","props","areas","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_7__","variant","gutterBottom","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_9__","display","flexWrap","alignContent","area","index","mr","key","Component","withTranslation","MapContainer","regionStyle","Style","fill","Fill","color","stroke","Stroke","width","text","Text","font","highlightStyle","OLMap","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMapClick","changeDistrict","selectedFeature","target","getFeatures","item","highlightFeature","state","getView","fit","getGeometry","getExtent","duration","featuresLayer","_this$props2","dc","dc2003","dc2007","dc2011","dc2015","dc2019","isDCDataExist","featureSource","VectorSource","features","GeoJSON","readFeatures","VectorLayer","source","style","feature","getText","setText","getProperties","CNAME","layers","TileLayer","XYZ","Map","refs","mapContainer","view","View","projection","center","zoom","featureOverlay","i","CACODE","extent","size","getSize","padding","setState","select","Select","addInteraction","on","highlightedFeature","getSource","removeFeature","addFeature","react_default","ref","bps","createBreakpoints","createMuiTheme","Paper","DistrictCard_templateObject","down","InnerContainer","YearText","Typography","RegionText","CodeText","StyledDivier","Divider","DistrictCard","IconButton","aria-label","onClick","onPrevElection","ArrowBack_default","height","getFullYear","onNextElection","ArrowForward_default","councillors","stations","useTranslation","border","Columns","renderPrevElectionButton","renderNextElectionButton","dc_name_zh","political_affiliation","station","WaffleChart","squareValue","theData","d3","population","units","round","floor","Array","join","split","groupIndex","append","attr","squareSize","selectAll","enter","row","col","legend","drawChart","Fragment","QUERY_FETCH_VOTES","Metrics_templateObject","Metrics_templateObject2","react_apollo_esm","query","variables","parseInt","_ref2","loading","error","_data$dc_constituenci","dc_constituencies","vote_stat","voteStat","total_votes","total_voters","total_voted_voters","population_excluded_foreign_worker","population_excluded_foreign_worker_lte_age_15","_ref","_ref$person","getDataForWaffleChart","stats","station_stats","barVote","acc","cur","age","gender","Metrics_Container","charts_WaffleChart","FullWidthBox","district_templateObject","LowerBackgroundContainer","district_templateObject2","FlexRowContainer","district_templateObject3","up","DistrictCardContainer","district_templateObject4","DistrictPage","handleCandidateSelected","history","handleChangeDistrict","nextProps","nextState","_this$props$match$par","params","_this$props$match$par2","_this2","_this$props$match$par3","sm","md","components_OLMap","dcd_constituencies","district_DistrictCard","assign","bind","district_MainAreas","main_areas","Metrics"],"mappings":"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","file":"static/js/26.a2331087.chunk.js","sourcesContent":["import { DCREGION } from 'constants/dcregion'\nimport _ from 'lodash'\nimport i18n from 'i18n'\n\nexport const getDistrictListUriFromTag = tag => {\n  const currentLanguage = getCurrentLanguage()\n  return `/${currentLanguage}/district/2019/tags/${tag}`\n}\n\nexport const getDistrictOverviewUriFromTag = code => {\n  const currentLanguage = getCurrentLanguage()\n  return `/${currentLanguage}/district/2019/${code}`\n}\n\nexport const getConstituencyUriFromTag = code => {\n  const currentLanguage = getCurrentLanguage()\n  return `/${currentLanguage}/district/2019/${code}`\n}\n\nexport const getCodeFromDistrictName = name => {\n  let code = 'A'\n  Object.keys(DCREGION).forEach(k => {\n    if (DCREGION[k].zh_hk === name) {\n      code = k\n    }\n  })\n  return code\n}\n\n/**\n * Passing a councillor object and get the meta data for it\n * (By QUERY_GET_COUNCILLOR_AND_CANDIDATES query)\n */\nexport const getCouncillorMeta = councillor => {\n  const result = {\n    participatedOrdinary: 0,\n    participatedByElection: 0,\n    lastParticipated: {\n      year: 2019,\n      type: 'ordinary',\n      votesDiff: 0,\n      votes: 0,\n      isWon: false,\n    },\n  }\n\n  // should already sorted from query\n  const participatedElections = councillor.person.candidates || []\n  result.participatedByElection = participatedElections.filter(\n    c => c.election_type === 'by-election'\n  ).length\n  result.participatedOrdinary = participatedElections.filter(\n    c => c.election_type === 'ordinary'\n  ).length\n\n  if (participatedElections.length > 0) {\n    // Filter out 2019 result\n    const e = participatedElections.filter(\n      e => !(e.year === 2019 && e.election_type === 'ordinary')\n    )[0]\n    const electionYear = e.year\n\n    const myVotes = e.constituency.candidates.find(\n      c => c.person.id === councillor.person.id && c.year === electionYear\n    ).votes\n    const highestVotes = e.constituency.candidates\n      .filter(\n        c => c.person.id !== councillor.person.id && c.year === electionYear\n      )\n      .map(c => c.votes)\n      .reduce((c, v) => Math.max(c, v), 0)\n    result.lastParticipated = {\n      year: e.year,\n      isWon: e.is_won,\n      votesDiff: myVotes - highestVotes,\n      votes: myVotes,\n      type: e.election_type,\n    }\n  }\n  return result\n}\n\nexport const getColorFromCamp = camp => {\n  if (!camp) return 'uncertain'\n  const mapping = {\n    泛民: 'democracy',\n    民主: 'democracy',\n    建制: 'establishment',\n    本土: 'localist',\n    傘兵: 'localist',\n    自決: 'localist',\n    其他: 'other',\n    不明: 'uncertain',\n  }\n\n  return mapping[camp] || 'uncertain'\n}\n\nexport const getColorFromPoliticalAffiliation = pa => {\n  if (!pa) return 'uncertain'\n\n  const mapping = {\n    democracy: [\n      '民主黨',\n      '公民黨',\n      '香港民主民生協進會',\n      '民協',\n      '社會民主連線',\n      '支聯會',\n      '民主動力',\n      '街坊工友服務處',\n      '街工',\n      '工黨',\n      '職工盟',\n      '新民主同盟',\n      '香港本土',\n      '獨立民主派',\n    ],\n    establishment: [\n      '民主建港協進聯盟',\n      '民建聯',\n      '新界社團聯會',\n      '新社聯',\n      '香港工會聯合會',\n      '工聯會',\n      '港九勞工社團聯會',\n      '香港經濟民生聯盟',\n      '西九新動力',\n      '自由黨',\n      '新民黨',\n      '新世紀論壇',\n    ],\n    localist: [\n      '香港眾志',\n      '青年新政',\n      '本土民主前線',\n      '東九龍社區關注組',\n      '天水圍民生關注平台',\n      '慈雲山建設力量',\n      '屯門社區關注組',\n      '長沙灣社區發展力量',\n      '社區網絡聯盟',\n      '沙田社區網絡',\n      '荃灣社區網絡',\n      '天水圍社區發展網絡',\n      '屯門社區網絡',\n      '葵青連結動力',\n      '藍田社區網絡',\n      '埔向晴天',\n      '荃灣民生動力',\n      '北區動源',\n      '維多利亞社區協會',\n    ],\n    other: ['民主思路', '新思維'],\n  }\n\n  for (let camp of Object.keys(mapping)) {\n    for (let party of mapping[camp]) {\n      if (pa.includes(party)) {\n        return camp\n      }\n    }\n  }\n\n  return 'uncertain'\n}\n\nexport const getProfilePath = person => {\n  const { name_en, name_zh, uuid } = person\n  const currentLanguage = getCurrentLanguage()\n  return `/${currentLanguage}/profile/${name_zh || name_en}/${uuid}`\n}\n\nexport const formatNumber = num =>\n  num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n\nexport const getParameterByName = (name, url) => {\n  if (!url) url = window.location.href\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url)\n  if (!results) return null\n  if (!results[2]) return ''\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport const getCurrentUrl = () => {\n  return window.location.href\n}\n\nexport const getConstituencyTagsByCandidateCamps = candidates => {\n  const tags = []\n  const filteredCandidates = candidates.filter(\n    c =>\n      c.election_type === 'ordinary' &&\n      c.nominate_status === 'confirmed' &&\n      c.tags.findIndex(\n        tag => tag.type === 'demo_status' && tag.tag === 'planb'\n      ) === -1\n  )\n\n  if (filteredCandidates.length >= 3) {\n    tags.push(withLanguage('Multiple candidates', '多人混戰'))\n  }\n\n  const groupedCamps = _.groupBy(filteredCandidates, c => c.camp)\n  if (groupedCamps['民主'] && groupedCamps['民主'].length > 1) {\n    tags.push(withLanguage('Multiple Pan-dem. candidates', '民主撞區'))\n  }\n\n  if (groupedCamps['建制'] && groupedCamps['建制'].length > 1) {\n    tags.push(withLanguage('Multiple Pro-Est. candidates', '建制撞區'))\n  }\n\n  return tags\n}\n\nexport const withLanguage = (name_en, name_zh) => {\n  var lang = window.location.pathname.match(/^\\/([\\w]{2})\\//)\n  lang = lang ? lang[1] : 'zh'\n  return lang === 'en' && name_en ? name_en : name_zh\n}\n\nexport const getCurrentLanguage = () => {\n  return i18n.language || window.localStorage.i18nextLng || 'zh'\n}\n\nexport const geti18nFromCamp = (camp, isShortForm = false) => {\n  if (!camp) return camp\n\n  const suffix = isShortForm ? '_short_form' : ''\n  const mapping = {\n    民主: `camp.democracy${suffix}`,\n    建制: `camp.establishment${suffix}`,\n    其他: `camp.others${suffix}`,\n  }\n\n  if (!mapping[camp]) return camp\n  return mapping[camp]\n}\n\nexport const groupVoteStat = voteStats => {\n  const data = _.groupBy(voteStats, stat => stat.subtype)\n  data.aggregations = {\n    all_voters: data.VOTERS.map(v => v.count).reduce((c, v) => c + v, 0),\n    new_voters: data.NEW_VOTERS.map(v => v.count).reduce((c, v) => c + v, 0),\n  }\n  return data\n}\n\nexport const computeTurnouts = (constituencies, turnouts, govData) => {\n  if (_.isEmpty(constituencies) || _.isEmpty(turnouts)) {\n    return []\n  }\n\n  const constituencyTurnouts = constituencies.map(constituency => {\n    const constituencyTurnouts = _.get(\n      turnouts,\n      `${constituency.code}.cumulativeTurnout`,\n      []\n    )\n    const turnoutIndex = _.findLastIndex(constituencyTurnouts, t => t !== null)\n    const now = new Date()\n\n    return {\n      ...constituency,\n      total: _.get(\n        groupVoteStat(constituency.vote_stats),\n        'aggregations.all_voters',\n        0\n      ),\n      type: 'constituency',\n      current: turnoutIndex >= 0 ? constituencyTurnouts[turnoutIndex] : 0,\n      // hourly from 07:30\n      updateTime: new Date(now.setHours(8 + (turnoutIndex || 0), 30)),\n      url: `district/2019/${constituency.code}`,\n    }\n  })\n\n  const districtTurnouts = _.map(\n    _.groupBy(constituencyTurnouts, 'district.dc_code'),\n    value => {\n      return value.reduce((c, v) => {\n        return c === null\n          ? v\n          : {\n              ...v.district,\n              current: c.current + v.current,\n              total: c.total + v.total,\n              updateTime:\n                c.updateTime > v.updateTime ? c.updateTime : v.updateTime,\n              type: 'district',\n              url: `district/2019/${v.district.dc_code}`,\n            }\n      }, null)\n    }\n  )\n\n  // overwrite data from gov\n  districtTurnouts.forEach(dt => {\n    const districtTotalFromGov = _.maxBy(\n      _.get(govData, `${dt.dc_code}`, []),\n      d => d || 0\n    )\n    if (dt.current < districtTotalFromGov) {\n      dt.current = districtTotalFromGov\n    }\n  })\n\n  const totalTurnout = districtTurnouts.reduce((c, v) => {\n    return c === null\n      ? v\n      : {\n          current: c.current + v.current,\n          total: c.total + v.total,\n          updateTime: c.updateTime > v.updateTime ? c.updateTime : v.updateTime,\n          type: 'all',\n          url: null,\n        }\n  }, null)\n  const totalFromGov = _.maxBy(_.get(govData, 'total', []), d => d || 0)\n  if (totalTurnout.current < totalFromGov) {\n    totalTurnout.current = totalFromGov\n  }\n\n  return constituencyTurnouts\n    .concat(districtTurnouts)\n    .concat([totalTurnout])\n    .map(turnout => {\n      return {\n        ...turnout,\n        percentage:\n          (turnout.current > 0 ? turnout.current / turnout.total : 0) * 100,\n        updateTime: turnout.updateTime.toLocaleTimeString(navigator.language, {\n          hour: '2-digit',\n          minute: '2-digit',\n        }),\n      }\n    })\n    .sort((a, b) => a.percentage - b.percentage)\n}\n\nexport const getDistrictTurnouts = (constituencies, turnouts, govData) => {\n  return computeTurnouts(constituencies, turnouts, govData).filter(\n    t => t.type === 'district' || t.type === 'all'\n  )\n}\n\nexport const getConstituencyTurnouts = (\n  constituencies,\n  turnouts,\n  govData,\n  districtCode\n) => {\n  return computeTurnouts(constituencies, turnouts, govData).filter(\n    t =>\n      (t.type === 'constituency' && t.district.dc_code === districtCode) ||\n      (t.type === 'district' && t.dc_code === districtCode) ||\n      t.type === 'all'\n  )\n}\n\nexport const customVoteStationMapping = station_code => {\n  const mapping = {\n    M3901: '22.427643,114.071966',\n  }\n  if (mapping[station_code]) return mapping[station_code]\n  return null\n}\n","// TODO: split this\nimport gql from 'graphql-tag'\n\nconst CONSTITUENCIES_DATA = `\nid\nname_zh\nname_en\ndistrict {\n  dc_code\n  dc_name_en\n  dc_name_zh\n  area_name_en\n  area_name_zh\n}\ncode\ndeviation_percentage\nexpected_population\nmain_areas\ndescription_zh\ndescription_en\nvote_stats {\n  count\n  type\n  subtype\n  category_1\n  category_2\n}\nstations {\n  station_code\n  name_en\n  name_zh\n  location\n}\ntags {\n  tag\n  type\n}\nmeta\ncandidates_aggregate {\n  aggregate {\n    count(columns: is_won, distinct: true)\n  }\n}\n`\n\nexport const DISTRICT_DATA = `\narea_code\narea_name_zh\narea_name_en\ndc_code\ndc_name_zh\ndc_name_en\ndc_description_zh\nconstituencies( where: { year: { _eq: $year } }, order_by: {code: asc} ) {\n  id\n  name_zh\n  name_en\n  code\n  candidates( where: { year: { _eq: $year } }, order_by: {candidate_number: asc} ) {\n    candidate_number\n    is_won\n    votes\n    political_affiliation\n    political_affiliation_zh\n    political_affiliation_en\n    election_type\n    camp\n    person {\n      id\n      uuid\n      name_zh\n      name_en\n      related_organization_en\n      related_organization_zh\n    }\n    nominate_status\n    tags {\n      tag\n      type\n    }\n  }\n}\n`\n\nexport const QUERY_CONSTITUENCIES = gql`\nquery($year: Int!, $code: String!, $stationPattern: String) {\n  dcd_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\n    ${CONSTITUENCIES_DATA}\n    predecessors {\n      intersect_area\n      predecessor {\n        ${CONSTITUENCIES_DATA}\n      }\n    }\n  }\n  dcd_constituency_vote_stations (\n    where: {\n      station_code: {_like:$stationPattern}, \n      year:{_eq:$year}},    \n  ){\n    station_code\n    name_en\n    name_zh\n    address_en\n    address_zh\n    location\n    }  \n}\n`\n\nexport const QUERY_GET_CANDIDATES_BY_IDS = gql`\n  query($year: Int!, $person_id: [Int!]) {\n    dcd_constituencies(\n      where: {\n        year: { _eq: $year }\n        candidates: { person: { id: { _in: $person_id } } }\n      }\n      order_by: { code: asc }\n    ) {\n      id\n      name_zh\n      name_en\n      code\n      candidates(\n        where: { year: { _eq: $year }, person: { id: { _in: $person_id } } }\n        order_by: { candidate_number: asc }\n      ) {\n        candidate_number\n        is_won\n        votes\n        political_affiliation\n        political_affiliation_zh\n        political_affiliation_en\n        election_type\n        camp\n        person {\n          id\n          uuid\n          name_zh\n          name_en\n          related_organization\n        }\n        nominate_status\n        tags {\n          tag\n          type\n        }\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_CONSTITUENCIES_BY_DISTRICT_CODES = gql`\n  query($year: Int!, $dc: [String!]) {\n    dcd_constituencies(\n      where: { year: { _eq: $year }, code: { _in: $dc } }\n      order_by: { code: asc }\n    ) {\n      id\n      name_zh\n      name_en\n      code\n      candidates(\n        where: { year: { _eq: $year } }\n        order_by: { candidate_number: asc }\n      ) {\n        candidate_number\n        is_won\n        votes\n        political_affiliation\n        political_affiliation_zh\n        political_affiliation_en\n        election_type\n        camp\n        person {\n          id\n          uuid\n          name_zh\n          name_en\n          related_organization\n        }\n        nominate_status\n        tags {\n          tag\n          type\n        }\n      }\n      candidates_aggregate {\n        aggregate {\n          count(columns: is_won, distinct: true)\n        }\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_CONSTITUENCIES_BY_TAG = gql`\nquery($year: Int!, $tag: String!) {\n  dcd_constituencies(\n    where: { year: { _eq: $year }, tags: { tag: {_eq: $tag} } }\n    order_by: {code: asc }\n  ) {\n    ${CONSTITUENCIES_DATA}\n  }  \n}\n`\n\nexport const QUERY_CONSTITUENCY_STATS = gql`\n  query($year: Int!, $code: String!) {\n    dcd_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\n      vote_stats {\n        count\n        type\n        subtype\n        category_1\n        category_2\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_DISTRICT = gql`\n  query($year: Int!, $code: String!) {\n    dcd_districts( where: { dc_code: { _eq: $code} } ) {\n      ${DISTRICT_DATA}\n    }\n  }\n`\n\nexport const QUERY_GET_ALL_DISTRICTS = gql`\n  query($year: Int!) {\n    dcd_districts(order_by: {dc_code: asc}) {\n      ${DISTRICT_DATA}\n    }\n  }\n`\n\nexport const QUERY_GET_AREA = gql`\n  query {\n    dcd_districts {\n      area_code\n      area_name_en\n      area_name_zh\n      dc_code\n      dc_name_en\n      dc_name_zh\n      constituencies(where: { year: { _eq: 2019 } }) {\n        code\n        name_zh\n        name_en\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_PERSON_ELECTIONS = gql`\n  query get_person_elections($person_id: Int!) {\n    dcd_people_by_pk(id: $person_id) {\n      candidates(order_by: { year: desc }) {\n        year\n        constituency {\n          name_zh\n          name_en\n          code\n        }\n        election_type\n        camp\n        political_affiliation\n        political_affiliation_zh\n        political_affiliation_en\n        votes\n        is_won\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_PERSON_MEETING_ATTENDANCES = gql`\n  query get_meeting_attendance($person_id: Int!) {\n    dcd_councillors(where: { person: { id: { _eq: $person_id } } }) {\n      year\n      cacode\n      term_from\n      term_to\n      career\n      district {\n        dc_name_zh\n      }\n      political_affiliation\n      post\n      constituency {\n        id\n        name_zh\n      }\n      meeting_attendances(\n        order_by: { meeting: { meet_year: desc }, total: desc }\n      ) {\n        meeting {\n          meet_name\n          meet_type\n          meet_year\n        }\n        attended\n        total\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_COUNCILLOR = gql`\n  query fetch_councillors($year: Int!, $code: String!) {\n    dcd_councillors(\n      where: { cacode: { _eq: $code }, year: { _eq: $year } }\n      order_by: { term_to: desc }\n    ) {\n      year\n      term_to\n      term_from\n      political_affiliation\n      constituency {\n        name_zh\n        name_en\n        code\n      }\n      person {\n        id\n        name_en\n        name_zh\n        uuid\n        candidates(order_by: { year: desc }) {\n          votes\n          is_won\n          year\n          cacode\n          election_type\n          constituency {\n            year\n            name_en\n            name_zh\n            candidates {\n              person {\n                id\n                name_en\n                name_zh\n              }\n              year\n              election_type\n              votes\n              political_affiliation\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_CANDIDATES = gql`\n  query fetch_candidates($year: Int!, $code: String!) {\n    dcd_candidates(\n      where: { cacode: { _eq: $code }, year: { _eq: $year } }\n      order_by: { candidate_number: asc }\n    ) {\n      candidate_number\n      is_won\n      votes\n      political_affiliation\n      political_affiliation_en\n      political_affiliation_zh\n      election_type\n      camp\n      nominate_status\n      tags {\n        tag\n        type\n      }\n      person {\n        id\n        uuid\n        name_zh\n        name_en\n        related_organization\n        description\n      }\n    }\n  }\n`\n\n// This is a dangerous query.. the data size is huge (for 2019 it is 19MB)\nexport const QUERY_GET_CONSTITUENCY_CAMP_DATA = gql`\n  query fetch_camp_data($year: Int!) {\n    dcd_constituencies(where: { year: { _eq: $year } }) {\n      code\n      predecessors(limit: 1, order_by: { intersect_area: desc }) {\n        predecessor {\n          code\n          candidates {\n            camp\n            votes\n            is_won\n          }\n          vote_stats(where: { subtype: { _eq: \"NEW_VOTERS\" } }) {\n            type\n            subtype\n            category_1\n            category_2\n            count\n          }\n        }\n      }\n      vote_stats {\n        type\n        subtype\n        category_1\n        category_2\n        count\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_NOMINATION_SUMMARY = gql`\n  query {\n    c2019: dcd_constituencies(where: { year: { _eq: 2019 } }) {\n      code\n      name_en\n      name_zh\n      district {\n        dc_code\n        dc_name_en\n        dc_name_zh\n      }\n      candidates {\n        camp\n        nominated_at\n        nominate_status\n        election_type\n        tags {\n          tag\n          type\n        }\n      }\n      tags {\n        tag\n      }\n    }\n\n    c2015: dcd_constituencies(where: { year: { _eq: 2015 } }) {\n      code\n      name_en\n      name_zh\n      candidates {\n        votes\n      }\n      tags {\n        tag\n      }\n    }\n\n    c2015: dcd_constituencies(where: { year: { _eq: 2015 } }) {\n      code\n      name_zh\n      candidates {\n        votes\n      }\n    }\n  }\n`\n\nexport const QUERY_GET_CONFIG = gql`\n  query fetch_config($key: String!) {\n    dcd_config(where: { key: { _eq: $key } }) {\n      value\n    }\n  }\n`\n","import styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\n\nexport default styled(Box)`\n  && {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    width: 100%;\n    margin: auto;\n  }\n`\n\nexport const SeperatedColumns = styled(Box)`\n  && {\n    margin-top: 8px;\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n`\n","// deprecated. should use the data from server\nexport const DCREGION = {\n  A: {\n    zh_hk: '中西區',\n    en_us: 'Central and Western',\n    unelected_dc_seat: 0,\n  },\n  B: {\n    zh_hk: '灣仔',\n    en_us: 'Wan Chai',\n    unelected_dc_seat: 0,\n  },\n  C: {\n    zh_hk: '東區',\n    en_us: 'Eastern',\n    unelected_dc_seat: 0,\n  },\n  D: {\n    zh_hk: '南區',\n    en_us: 'Southern',\n    unelected_dc_seat: 0,\n  },\n  E: {\n    zh_hk: '油尖旺',\n    en_us: 'Yau Tsim Mong',\n    unelected_dc_seat: 0,\n  },\n  F: {\n    zh_hk: '深水埗',\n    en_us: 'Sham Shui Po',\n    unelected_dc_seat: 0,\n  },\n  G: {\n    zh_hk: '九龍城',\n    en_us: 'Kowloon City',\n    unelected_dc_seat: 0,\n  },\n  H: {\n    zh_hk: '黃大仙',\n    en_us: 'Wong Tai Sin',\n    unelected_dc_seat: 0,\n  },\n  J: {\n    zh_hk: '觀塘',\n    en_us: 'Kwun Tong',\n    unelected_dc_seat: 0,\n  },\n  K: {\n    zh_hk: '荃灣',\n    en_us: 'Tsuen Wan',\n    unelected_dc_seat: 2,\n  },\n  L: {\n    zh_hk: '屯門',\n    en_us: 'Tuen Mun',\n    unelected_dc_seat: 1,\n  },\n  M: {\n    zh_hk: '元朗',\n    en_us: 'Yuen Long',\n    unelected_dc_seat: 6,\n  },\n  N: {\n    zh_hk: '北區',\n    en_us: 'North',\n    unelected_dc_seat: 4,\n  },\n  P: {\n    zh_hk: '大埔',\n    en_us: 'Tai Po',\n    unelected_dc_seat: 2,\n  },\n  Q: {\n    zh_hk: '西貢',\n    en_us: 'Sai Kung',\n    unelected_dc_seat: 2,\n  },\n  R: {\n    zh_hk: '沙田',\n    en_us: 'Sha Tin',\n    unelected_dc_seat: 1,\n  },\n  S: {\n    zh_hk: '葵青',\n    en_us: 'Kwai Tsing',\n    unelected_dc_seat: 1,\n  },\n  T: {\n    zh_hk: '離島',\n    en_us: 'Islands',\n    unelected_dc_seat: 8,\n  },\n}\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\nimport { withTranslation } from 'react-i18next'\n\nconst Container = styled.div`\n   {\n    padding: 16px;\n  }\n`\n\nclass MainAreas extends Component {\n  static propTypes = {\n    areas: PropTypes.array.isRequired,\n  }\n\n  render() {\n    const { areas, t } = this.props\n    return (\n      <Container>\n        <Typography variant=\"h6\" gutterBottom>\n          {/* 主要屋邨 / 地區 */}\n          {t('mainAreas.text1')}\n        </Typography>\n        <Box display=\"flex\" flexWrap=\"wrap\" alignContent=\"flex-start\">\n          {areas.map((area, index) => (\n            <Box mr={1} key={index}>\n              <Typography variant=\"body1\">\n                {`${Object.keys(area)[0]} ${area[Object.keys(area)[0]]}`}\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </Container>\n    )\n  }\n}\n\nexport default withTranslation()(MainAreas)\n","import React, { Component } from 'react'\nimport Map from 'ol/Map'\nimport View from 'ol/View'\nimport TileLayer from 'ol/layer/Tile'\nimport VectorLayer from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport XYZ from 'ol/source/XYZ'\nimport GeoJSON from 'ol/format/GeoJSON'\nimport { Style, Stroke, Fill, Text } from 'ol/style'\nimport Select from 'ol/interaction/Select'\nimport styled from 'styled-components'\n\nimport dc2003 from '../data/DCCA_2003'\nimport dc2007 from '../data/DCCA_2007'\nimport dc2011 from '../data/DCCA_2011'\nimport dc2015 from '../data/DCCA_2015'\nimport dc2019 from '../data/DCCA_2019'\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\nconst regionStyle = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.2)',\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1,\n  }),\n  text: new Text({\n    font: '16px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 2,\n    }),\n  }),\n})\n\nconst highlightStyle = new Style({\n  stroke: new Stroke({\n    color: '#f00',\n    width: 1,\n  }),\n  fill: new Fill({\n    color: 'rgba(255,0,0,0.1)',\n  }),\n  text: new Text({\n    font: '16px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#f00',\n      width: 2,\n    }),\n  }),\n})\n\nclass OLMap extends Component {\n  featureOverlay\n  highlightedFeature\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    const { year, code } = this.props\n    const dc = [dc2003, dc2007, dc2011, dc2015, dc2019].find(\n      d => d.name === `DCCA_${year}`\n    )\n    let isDCDataExist = dc ? true : false\n    let featuresLayer\n\n    if (isDCDataExist) {\n      this.featureSource = new VectorSource({\n        features: new GeoJSON().readFeatures(dc),\n      })\n\n      featuresLayer = new VectorLayer({\n        source: this.featureSource,\n        style: feature => {\n          regionStyle.getText().setText(feature.getProperties().CNAME)\n          return regionStyle\n        },\n      })\n    }\n\n    // create map object with feature layer\n    const layers = [\n      //default OSM layer\n      new TileLayer({\n        source: new XYZ({\n          url:\n            'https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n        }),\n      }),\n    ]\n\n    if (isDCDataExist) {\n      layers.push(featuresLayer)\n    }\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers,\n      view: new View({\n        projection: 'EPSG:4326',\n        center: [114.2029, 22.3844],\n        zoom: 13,\n      }),\n    })\n\n    this.featureOverlay = new VectorLayer({\n      source: new VectorSource(),\n      map: map,\n      style: function(feature) {\n        highlightStyle.getText().setText(`${feature.getProperties().CNAME}`)\n        return highlightStyle\n      },\n    })\n\n    if (isDCDataExist) {\n      // Fit to feature\n      const features = this.featureSource.getFeatures()\n      for (let i = 0; i < features.length; i++) {\n        if (features[i].getProperties().CACODE === code) {\n          const extent = features[i].getGeometry().getExtent()\n          map.getView().fit(extent, {\n            size: map.getSize(),\n            padding: [10, 10, 10, 10],\n          })\n\n          this.highlightFeature(features[i])\n          break\n        }\n      }\n    }\n\n    this.setState({\n      map,\n      view: map.getView(),\n      featuresLayer: isDCDataExist ? featuresLayer : null,\n    })\n\n    const select = new Select()\n\n    if (select !== null) {\n      map.addInteraction(select)\n      select.on('select', this.handleMapClick)\n    }\n  }\n\n  highlightFeature(feature) {\n    if (this.highlightedFeature) {\n      this.featureOverlay.getSource().removeFeature(this.highlightedFeature)\n    }\n\n    this.featureOverlay.getSource().addFeature(feature)\n    this.highlightedFeature = feature\n  }\n\n  handleMapClick = e => {\n    const { year, changeDistrict } = this.props\n    const selectedFeature = e.target.getFeatures().item(0)\n\n    if (selectedFeature) {\n      this.highlightFeature(selectedFeature)\n      changeDistrict(year, selectedFeature.get('CACODE'))\n      this.state.map.getView().fit(selectedFeature.getGeometry().getExtent(), {\n        duration: 200,\n      })\n    }\n  }\n\n  render() {\n    return <MapContainer ref=\"mapContainer\"> </MapContainer>\n  }\n}\n\nexport default OLMap\n","import createBreakpoints from '@material-ui/core/styles/createBreakpoints'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n\nexport const bps = createBreakpoints({})\n\nexport const headingFontFamily = 'Source Serif Pro, sans-serif'\nexport const bodyFontFamily = 'PT Serif, sans-serif'\n\nexport const fontFamily = ['PingFangTC-Semibold', 'PingFangTC-Medium']\n\nexport const typography = {}\n\nexport const theme = createMuiTheme()\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport Divider from '@material-ui/core/Divider'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\nimport { bps } from 'ui/responsive'\nimport { SeperatedColumns } from 'components/atoms/Columns'\nimport { useTranslation } from 'react-i18next'\n\nconst Container = styled(Paper)`\n  && {\n    width: 400px;\n    height: 400px;\n    background-color: #f6f6f6;\n    padding: 0;\n\n    ${bps.down('md')} {\n      width: 100%;\n    }\n  }\n`\n\nconst InnerContainer = styled(Box)`\n  && {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: baseline;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`\n\nconst YearText = styled(Typography)`\n  && {\n    font-family: Avenir;\n    font-size: 30px;\n    font-weight: 900;\n    color: #333333;\n  }\n`\n\nconst RegionText = styled(Typography)`\n  && {\n    width: 100%;\n    font-family: PingFangTC-Medium;\n    font-size: 20px;\n    font-weight: 500;\n    color: #ffb700;\n  }\n`\n\nconst CodeText = styled(Typography)`\n  && {\n    margin-left: 10px;\n    font-family: PingFangTC-Light;\n    font-size: 40px;\n    font-weight: 300;\n    color: #9b9b9b;\n  }\n`\n\nconst StyledDivier = styled(Divider)`\n  && {\n    margin-top: 40px;\n    background-color: #cecece;\n    width: 100%;\n  }\n`\n\nclass DistrictCard extends Component {\n  static propTypes = {\n    year: PropTypes.number.isRequired,\n    code: PropTypes.string.isRequired,\n    name_zh: PropTypes.string.isRequired,\n    name_en: PropTypes.string.isRequired,\n    onPrevElection: PropTypes.func.isRequired,\n    onNextElection: PropTypes.func.isRequired,\n    councillors: PropTypes.array.isRequired,\n    district: PropTypes.object.isRequired,\n  }\n\n  renderPrevElectionButton(year) {\n    return year > 1999 ? (\n      <IconButton aria-label=\"arrow_back\" onClick={this.props.onPrevElection}>\n        <ArrowBackIcon />\n      </IconButton>\n    ) : (\n      // if there is no next button, show a 48x48 empty box to align the 2 elements on the right\n      <div style={{ width: '48px', height: '48px' }}></div>\n    )\n  }\n\n  renderNextElectionButton(year) {\n    const nextElectionYear = year + 4\n    const currentYear = new Date().getFullYear()\n    return nextElectionYear <= currentYear ? (\n      <IconButton\n        aria-label=\"arrow_forward\"\n        onClick={this.props.onNextElection}\n      >\n        <ArrowForwardIcon />\n      </IconButton>\n    ) : (\n      // if there is no next button, show a 48x48 empty box to align the 2 elements on the left\n      <div style={{ width: '48px', height: '48px' }}></div>\n    )\n  }\n\n  render() {\n    const { name_zh, year, code, councillors, district, stations } = this.props\n    const councillor = councillors.length > 0 ? councillors[0] : {}\n    const { t } = useTranslation()\n    return (\n      <Container>\n        <InnerContainer border={0} color=\"primary.minor\">\n          <SeperatedColumns>\n            {this.renderPrevElectionButton(year)}\n            <YearText variant=\"button\" gutterBottom>\n              {year}\n            </YearText>\n            {this.renderNextElectionButton(year)}\n          </SeperatedColumns>\n          <RegionText>{district.dc_name_zh}</RegionText>\n          <Typography variant=\"h3\">{name_zh}</Typography>\n          <CodeText>{code}</CodeText>\n          <StyledDivier />\n          <SeperatedColumns>\n            <Typography variant=\"h6\">\n              {/* 區議員 */}\n              {/* TODO: i18n - check councilors or councilor */}\n              {t('councilor')}\n            </Typography>\n            <Typography>\n              {councillor.person ? councillor.person.name_zh : '-'}\n            </Typography>\n          </SeperatedColumns>\n          <SeperatedColumns>\n            <Typography variant=\"h6\">\n              {/* 政治聯繫 */}\n              {t('politicalAffiliation')}\n            </Typography>\n            <Typography>{councillor.political_affiliation || '-'}</Typography>\n          </SeperatedColumns>\n          <SeperatedColumns>\n            <Typography variant=\"h6\">\n              {/* 投票站 */}\n              {t('districtCard.text2')}\n            </Typography>\n            {stations.map((station, index) => (\n              <Typography key={index} variant=\"subtitle2\">\n                {station.name_zh}\n              </Typography>\n            ))}\n          </SeperatedColumns>\n        </InnerContainer>\n      </Container>\n    )\n  }\n}\n\nexport default DistrictCard\n","import React, { Component } from 'react'\nimport * as d3 from 'd3'\n\n/**\n * Idea from https://gist.github.com/XavierGimenez/8070956\n */\n\nclass WaffleChart extends Component {\n  drawChart(data) {\n    var total = 0\n    var width,\n      height,\n      widthSquares = 20,\n      heightSquares = 20,\n      squareSize = 20,\n      squareValue = 0,\n      gap = 1,\n      theData = []\n    var color = d3.scaleOrdinal(d3.schemeCategory10)\n    //total\n\n    total = d3.sum(data, function(d) {\n      return d.population\n    })\n    //value of a square\n    squareValue = total / (widthSquares * heightSquares)\n    //remap data\n    data.forEach(function(d, i) {\n      d.population = +d.population\n      d.units = Math.round(d.population / squareValue)\n      d.percentage = Math.floor((d.population * 100) / total)\n      theData = theData.concat(\n        Array(d.units + 1)\n          .join(1)\n          .split('')\n          .map(function() {\n            return {\n              squareValue: squareValue,\n              units: d.units,\n              population: d.population,\n              percentage: d.percentage,\n              groupIndex: i,\n            }\n          })\n      )\n    })\n    width = squareSize * widthSquares + widthSquares * gap + 25\n    height = squareSize * heightSquares + heightSquares * gap + 25\n    d3.select('#waffle')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .selectAll('div')\n      .data(theData)\n      .enter()\n      .append('rect')\n      .attr('width', squareSize)\n      .attr('height', squareSize)\n      .attr('fill', function(d) {\n        return color(d.groupIndex)\n      })\n      .attr('y', function(d, i) {\n        // const row = i % heightSquares;\n        // return (heightSquares * squareSize) - ((row * squareSize) + (row * gap))\n        const row = Math.floor(i / widthSquares)\n        return row * squareSize + row * gap\n      })\n      .attr('x', function(d, i) {\n        //group n squares for column\n        // const col = Math.floor(i / heightSquares);\n        // return (col * squareSize) + (col * gap);\n        const col = i % widthSquares\n        return col * squareSize + col * gap\n      })\n      .append('title')\n      .text(function(d, i) {\n        return (\n          data[d.groupIndex].name +\n          ' | ' +\n          d.population +\n          ' , ' +\n          d.percentage +\n          '%'\n        )\n      })\n    //add legend with categorical data\n    var legend = d3\n      .select('#legend')\n      .append('svg')\n      .attr('width', 300)\n      .attr('height', 200)\n      .append('g')\n      .selectAll('div')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('transform', function(d, i) {\n        return 'translate(0,' + i * 20 + ')'\n      })\n    legend\n      .append('rect')\n      .attr('width', 18)\n      .attr('height', 18)\n      .style('fill', function(d, i) {\n        return color(i)\n      })\n    legend\n      .append('text')\n      .attr('x', 25)\n      .attr('y', 13)\n      .text(function(d) {\n        return d.name\n      })\n    //add value of a unit square\n    var legend2 = d3\n      .select('#legend')\n      .select('svg')\n      .append('g')\n      .attr('transform', 'translate(200,0)')\n    legend2\n      .append('text')\n      .attr('y', '14')\n      .attr('font-size', '18px')\n      .text('Total: ' + total)\n      .attr('fill', '#444444')\n  }\n\n  componentDidMount() {\n    this.drawChart(this.props.data)\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"waffle\"></div>\n\n        <div id=\"legend\"></div>\n      </>\n    )\n  }\n}\n\nexport default WaffleChart\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport WaffleChart from 'components/atoms/charts/WaffleChart'\nimport { useTranslation } from 'react-i18next'\n\n// TODO: change this to dcd data\nconst QUERY_FETCH_VOTES = gql`\n  query($year: Int!, $code: String!) {\n    dc_constituencies(where: { year: { _eq: $year }, code: { _eq: $code } }) {\n      candidates_aggregate {\n        aggregate {\n          sum {\n            votes\n          }\n        }\n      }\n      candidates {\n        votes\n        person {\n          name_zh\n          name_en\n        }\n      }\n      vote_stat {\n        total_votes\n        total_voters\n        total_voted_voters\n        population_excluded_foreign_worker\n        population_excluded_foreign_worker_lte_age_15\n        population_excluded_foreign_worker_lte_age_20\n      }\n      station_stats {\n        station_code\n        name_en\n        name_zh\n        votes {\n          votes\n          age\n          gender\n        }\n      }\n    }\n  }\n`\nconst Container = styled.div`\n   {\n    padding: 0px 15px 100px 25px;\n  }\n`\n\nconst getDataForWaffleChart = (voteStat, candidates) => {\n  const { t } = useTranslation()\n  const {\n    total_votes,\n    total_voters,\n    total_voted_voters,\n    population_excluded_foreign_worker,\n    population_excluded_foreign_worker_lte_age_15,\n    // population_excluded_foreign_worker_lte_age_20\n  } = voteStat\n\n  // check first the data\n  // TODO: the data should be good enough to remove this checking\n  if (\n    population_excluded_foreign_worker_lte_age_15 < total_voters ||\n    total_voters === 0 ||\n    total_voted_voters === 0\n  ) {\n    return []\n  }\n\n  const voteStats = [\n    {\n      // name: '不能投票',\n      name: t('voteStats.text1'),\n      // population: population_excluded_foreign_worker - population_excluded_foreign_worker_lte_age_15,\n      population: population_excluded_foreign_worker - total_voters,\n    },\n    {\n      // name: '沒有投票',\n      name: t('voteStats.text2'),\n      population:\n        population_excluded_foreign_worker_lte_age_15 - total_voted_voters,\n      // total_votes - total_voted_voters = registered but didn't vote?\n    },\n    {\n      // name: '投票失效',\n      name: t('voteStats.text3'),\n      population: total_voted_voters - total_votes,\n      // total_votes - total_voted_voters = registered but didn't vote?\n    },\n  ]\n\n  candidates.forEach(({ votes, person: { name_zh, name_en } }) => {\n    voteStats.push({\n      // name: `投給 ${name_zh || name_en}`,\n      name: `${t('voteStats.text4')} ${name_zh || name_en}`,\n      population: votes,\n      // total_votes - total_voted_voters = registered but didn't vote?\n    })\n  })\n\n  return voteStats\n}\n\nclass MainAreas extends Component {\n  static propTypes = {\n    year: PropTypes.number.isRequired,\n    code: PropTypes.string.isRequired,\n    district: PropTypes.object.isRequired,\n  }\n\n  render() {\n    const { year, code } = this.props\n    const { t } = useTranslation()\n    return (\n      <Query\n        query={QUERY_FETCH_VOTES}\n        variables={{ year: parseInt(year, 10), code }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return null\n          if (error) return `Error! ${error}`\n          const { candidates, vote_stat } = data.dc_constituencies[0]\n\n          let voteStats = []\n          if (vote_stat) {\n            voteStats = getDataForWaffleChart(vote_stat, candidates)\n          }\n\n          const stats = data.dc_constituencies[0].station_stats\n          const barVote = { data: {} }\n          barVote.total = stats.reduce((acc, cur) => {\n            const sub_total = cur.votes.reduce((acc, cur) => {\n              if (typeof barVote.data[cur.age] === 'undefined') {\n                barVote.data[cur.age] = {}\n              }\n              if (typeof barVote.data[cur.age][cur.gender] === 'undefined') {\n                barVote.data[cur.age][cur.gender] = 0\n              }\n              barVote.data[cur.age][cur.gender] += cur.votes\n              return acc + cur.votes\n            }, 0)\n            return acc + sub_total\n          }, 0)\n          return (\n            <Container>\n              <Typography variant=\"h4\">\n                {/* 人口資料 */}\n                {t('metrics.text1')}\n              </Typography>\n              {/* <VoterTurnoutChart\n                id={`${year}_${code}_voter_turnout`}\n                data={barVote}\n              /> */}\n              {voteStats.length > 0 ? (\n                <WaffleChart\n                  id={`${year}_${code}_voter_treemap`}\n                  data={voteStats}\n                />\n              ) : (\n                ''\n              )}\n            </Container>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default MainAreas\n","import React, { Component } from 'react'\nimport Box from '@material-ui/core/Box'\nimport OLMap from '../../OLMap'\nimport { Query } from 'react-apollo'\nimport DistrictCard from 'components/district/DistrictCard'\nimport MainAreas from 'components/district/MainAreas'\nimport Metrics from 'components/district/Metrics'\nimport styled from 'styled-components'\nimport { bps } from 'ui/responsive'\nimport { getCurrentLanguage } from 'utils/helper'\n\nimport { QUERY_CONSTITUENCIES } from 'queries/gql'\n\nconst FullWidthBox = styled(Box)`\n  && {\n    padding-top: 4rem;\n    width: 100%;\n  }\n`\n\nconst LowerBackgroundContainer = styled(Box)`\n  && {\n    width: 100vw;\n    position: relative;\n    margin-left: -50vw;\n    left: 50%;\n    background-color: #fafafa;\n  }\n`\n\nconst FlexRowContainer = styled(Box)`\n  && {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    ${bps.up('md')} {\n      width: 100%;\n    }\n\n    ${bps.up('lg')} {\n      width: 1440px;\n    }\n    margin: auto;\n  }\n`\n\nconst DistrictCardContainer = styled(Box)`\n  && {\n    padding-left: 30px;\n    margin: 0px;\n    width: 400px;\n    height: 400px;\n\n    ${bps.down('md')} {\n      margin: 10px;\n      width: 100%;\n      padding: 0px;\n    }\n  }\n`\n\nclass DistrictPage extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    //  if (this.props.route.path === nextProps.route.path) return false;\n    return true\n  }\n\n  handleCandidateSelected = person => {\n    const currentLanguage = getCurrentLanguage()\n    this.props.history.push(\n      `/${currentLanguage}/profile/${person.name_zh || person.name_en}/${\n        person.uuid\n      }`\n    )\n  }\n\n  handleChangeDistrict = (year, code) => {\n    if (!year || !code) return\n    const currentLanguage = getCurrentLanguage()\n    this.props.history.push(`/${currentLanguage}/district/${year}/${code}`)\n  }\n\n  onPrevElection() {\n    const {\n      match: {\n        params: { year, code },\n      },\n    } = this.props\n    const currentLanguage = getCurrentLanguage()\n    this.props.history.push(\n      `/${currentLanguage}/district/${parseInt(year, 10) - 4}/${code}`\n    )\n  }\n\n  onNextElection() {\n    const {\n      match: {\n        params: { year, code },\n      },\n    } = this.props\n    const currentLanguage = getCurrentLanguage()\n    this.props.history.push(\n      `/${currentLanguage}/district/${parseInt(year, 10) + 4}/${code}`\n    )\n  }\n\n  render() {\n    const {\n      match: {\n        params: { year, code },\n      },\n    } = this.props\n\n    return (\n      <>\n        <FlexRowContainer>\n          <Box\n            width={{ sm: '100%', md: '960px' }}\n            height={{ sm: '300px', md: '400px' }}\n          >\n            <OLMap\n              year={year}\n              code={code}\n              changeDistrict={this.handleChangeDistrict}\n            />\n          </Box>\n          <Query query={QUERY_CONSTITUENCIES} variables={{ year, code }}>\n            {({ loading, error, data }) => {\n              if (loading) return null\n              if (error) return `Error! ${error}`\n              const district = data.dcd_constituencies[0]\n              return (\n                <>\n                  <DistrictCardContainer>\n                    <DistrictCard\n                      {...district}\n                      year={parseInt(year, 10)}\n                      code={code}\n                      onNextElection={this.onNextElection.bind(this)}\n                      onPrevElection={this.onPrevElection.bind(this)}\n                    />\n                  </DistrictCardContainer>\n                  <FullWidthBox>\n                    <MainAreas areas={district.main_areas || []} />\n                  </FullWidthBox>\n                  <LowerBackgroundContainer>\n                    <FlexRowContainer>\n                      <FullWidthBox>\n                        <Metrics\n                          year={parseInt(year, 10)}\n                          code={code}\n                          district={district}\n                        ></Metrics>\n                      </FullWidthBox>\n                      <FullWidthBox></FullWidthBox>\n                    </FlexRowContainer>\n                  </LowerBackgroundContainer>\n                </>\n              )\n            }}\n          </Query>\n        </FlexRowContainer>\n      </>\n    )\n  }\n}\n\nexport default DistrictPage\n"],"sourceRoot":""}