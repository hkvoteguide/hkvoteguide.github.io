{"version":3,"sources":["../node_modules/ol/extent.js","../node_modules/ol/util.js","../node_modules/ol/events/EventType.js","../node_modules/ol/math.js","../node_modules/ol/events.js","../node_modules/ol/obj.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/ol/array.js","../node_modules/@material-ui/core/esm/styles/useTheme.js","../node_modules/ol/geom/GeometryType.js","../node_modules/ol/asserts.js","../node_modules/ol/functions.js","../node_modules/ol/dom.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/ol/transform.js","../node_modules/ol/events/Event.js","../node_modules/ol/Object.js","../node_modules/ol/ViewHint.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/proj.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/TileState.js","../node_modules/ol/render/canvas.js","../node_modules/ol/has.js","../node_modules/ol/proj/Units.js","../node_modules/ol/events/condition.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/easing.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/@material-ui/utils/esm/chainPropTypes.js","../node_modules/@material-ui/utils/esm/elementAcceptingRef.js","../node_modules/@material-ui/utils/esm/elementTypeAcceptingRef.js","../node_modules/@material-ui/utils/esm/exactProp.js","../node_modules/@material-ui/utils/esm/getDisplayName.js","../node_modules/@material-ui/utils/esm/ponyfillGlobal.js","../node_modules/@material-ui/utils/esm/refType.js","../node_modules/@material-ui/utils/esm/index.js","../node_modules/ol/events/Target.js","../node_modules/ol/source/State.js","../node_modules/ol/geom/GeometryLayout.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/LayerType.js","../node_modules/ol/color.js","../node_modules/ol/ImageState.js","../node_modules/ol/css.js","../node_modules/ol/Collection.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/render/EventType.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/Paper/Paper.js","../node_modules/ol/colorlike.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/size.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/coordinate.js","../node_modules/ol/geom/Point.js","../node_modules/ol/Disposable.js","../node_modules/rbush/index.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/reproj/common.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/interaction/Select.js","../node_modules/@material-ui/icons/ArrowBack.js","../node_modules/@material-ui/icons/ArrowForward.js","../node_modules/@material-ui/core/esm/SvgIcon/index.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/recompose/setDisplayName.js","../node_modules/recompose/wrapDisplayName.js","../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/ol/AssertionError.js","../node_modules/ol/style/Fill.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/style/TextPlacement.js","../node_modules/ol/format/FormatType.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent/Corner.js","../node_modules/ol/Observable.js","../node_modules/ol/source/Source.js","../node_modules/ol/sphere.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/layer/VectorRenderType.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/TileRange.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/extends.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/ol/featureloader.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/Vector.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/View.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Style.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/style/Image.js","../node_modules/ol/Feature.js","../node_modules/ol/style/IconImageCache.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/recompose/pure.js","../node_modules/recompose/shouldUpdate.js","../node_modules/recompose/setStatic.js","../node_modules/recompose/getDisplayName.js","../node_modules/recompose/shallowEqual.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/ol/style/Stroke.js","../node_modules/quickselect/quickselect.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserPointerEvent.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/pointer/EventSource.js","../node_modules/ol/pointer/MouseSource.js","../node_modules/ol/pointer/MsSource.js","../node_modules/ol/pointer/NativeSource.js","../node_modules/ol/pointer/PointerEvent.js","../node_modules/ol/pointer/TouchSource.js","../node_modules/ol/pointer/PointerEventHandler.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/layer/Group.js","../node_modules/ol/PluggableMap.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/KeyCode.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/ImageBase.js","../node_modules/ol/ImageCanvas.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/canvas/Map.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/IntermediateCanvas.js","../node_modules/ol/renderer/canvas/ImageLayer.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/render/ReplayGroup.js","../node_modules/ol/render/ReplayType.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/replay.js","../node_modules/ol/render/canvas/Replay.js","../node_modules/ol/render/canvas/ImageReplay.js","../node_modules/ol/render/canvas/LineStringReplay.js","../node_modules/ol/render/canvas/PolygonReplay.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextReplay.js","../node_modules/ol/render/canvas/ReplayGroup.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/VectorTileRenderType.js","../node_modules/ol/renderer/canvas/VectorTileLayer.js","../node_modules/ol/Map.js","../node_modules/ol/control/util.js","../node_modules/ol/interaction.js","../node_modules/ol/Tile.js","../node_modules/ol/ImageTile.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/format/Feature.js","../node_modules/ol/format/JSONFeature.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/format/GeoJSON.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/Tile.js","../node_modules/@material-ui/core/styles/createBreakpoints.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/ol/style/Text.js","../node_modules/@material-ui/core/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@material-ui/core/styles/createMuiTheme.js","../node_modules/@material-ui/core/styles/createMixins.js","../node_modules/@material-ui/core/styles/createPalette.js","../node_modules/@material-ui/core/colors/indigo.js","../node_modules/@material-ui/core/colors/pink.js","../node_modules/@material-ui/core/colors/grey.js","../node_modules/@material-ui/core/colors/red.js","../node_modules/@material-ui/core/colors/common.js","../node_modules/@material-ui/core/styles/colorManipulator.js","../node_modules/@material-ui/core/styles/createTypography.js","../node_modules/@material-ui/core/styles/shadows.js","../node_modules/@material-ui/core/styles/shape.js","../node_modules/@material-ui/core/styles/createSpacing.js","../node_modules/@material-ui/core/styles/transitions.js","../node_modules/@material-ui/core/styles/zIndex.js","../node_modules/@material-ui/core/esm/Divider/Divider.js"],"names":["__webpack_require__","d","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","i","ii","length","value","opt_extent","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","extendCoordinates","flatCoordinates","offset","end","stride","extendXY","Math","min","max","callback","opt_this","val","call","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Object","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","t","mat","n","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","Array","l","m","angleInRadians","PI","angleInDegrees","a","b","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","opt_once","callOnce","addEventListener","evt","bindListener","push","key","indexOf","splice","assign","clear","getValues","var_sources","arguments$1","arguments","TypeError","output","source","hasOwnProperty","object","property","values","module","exports","__esModule","default","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","data","extension","isArray","remove","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","opt_func","opt_strict","compare","every","currentVal","res","useTheme","_material_ui_styles__WEBPACK_IMPORTED_MODULE_0__","_defaultTheme__WEBPACK_IMPORTED_MODULE_1__","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","TRUE","FALSE","VOID","createCanvasContext2D","opt_width","opt_height","canvas","document","createElement","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","_interopRequireDefault","defineProperty","_react","_pure","_SvgIcon","_default","path","displayName","Icon","props","concat","muiName","create","reset","setFromArray","scale","translate","compose","invert","tmp_","transform","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","e","f","dx1","dy1","sx","sy","angle","dx2","dy2","det","stopPropagation","Event","this","propagationStopped","prototype","preventDefault","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","oldValue","__proto__","constructor","BaseObject","Observable","opt_values","values_","setProperties","get","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","ANIMATING","INTERACTING","Projection_Projection","options","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","METERS","point","math","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","cache","transforms","transforms_add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","proj_get","projectionLike","proj_getPointResolution","opt_units","pointResolution","getter","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","transformExtent","ol_extent","projections2","forwardTransform","inverseTransform","addCommon","Property","pan","rotate","rotateWithoutConstraints","zoom","zoomByDelta","zoomWithoutConstraints","Interaction_Interaction","Interaction","handleEvent","map_","setActive","getActive","getMap","mapBrowserEvent","active","setMap","map","ol_Object","view","delta","opt_duration","currentCenter","constrainCenter","animate","duration","easing","setCenter","opt_anchor","constrainRotation","currentRotation","getRotation","anchor","opt_direction","constrainResolution","currentResolution","getResolution","resolutions","getResolutions","getMinResolution","getMaxResolution","calculateCenterZoom","setResolution","IDLE","LOADING","LOADED","EMPTY","ABORT","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","drawImage","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","context","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","fontFamily","setInterval","span","heights","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","offsetX","offsetY","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","TOUCH","POINTER","MSPOINTER","ua","navigator","userAgent","toLowerCase","window","devicePixelRatio","has","setLineDash","msPointerEnabled","FEET","PIXELS","TILE_PIXELS","USFEET","altShiftKeysOnly","focus","always","mouseActionButton","never","pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_has_js__WEBPACK_IMPORTED_MODULE_3__","originalEvent","altKey","metaKey","ctrlKey","shiftKey","event","getTargetElement","activeElement","button","SINGLECLICK","tagName","pointerEvent","pointerType","transformGeom2D","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_Geometry_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","SimpleGeometry","Geometry","layout","XY","computeExtent","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","toString","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","XYZ","XYZM","getLayoutForStride","changed","opt_sy","XYM","simpleGeometry","opt_dest","easeIn","pow","easeOut","inAndOut","linear","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","ends","jj","deflateMultiCoordinatesArray","coordinatesss","opt_endss","endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","chainPropTypes","propType1","propType2","elementAcceptingRef","prop_types_default","element","isRequired","esm_elementAcceptingRef","esm_elementTypeAcceptingRef","prop_types","exactProp","propTypes","fnNameMatchRegex","getFunctionComponentName","Component","fallback","name","fn","match","getFunctionName","getDisplayName","esm_typeof","$$typeof","react_is","outerType","innerType","wrapperName","functionName","getWrappedName","render","ponyfillGlobal","self","Function","esm_refType","oneOfType","PropTypes","deepmerge","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","disposeInternal","hasListener","opt_type","UNDEFINED","READY","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","_math_js__WEBPACK_IMPORTED_MODULE_0__","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","i$1","simplifiedEnds","tolerance","round","quantize","simplifiedEndss","IMAGE","TILE","VECTOR_TILE","VECTOR","asString","asArray","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromString","cacheSize","s","g","exec","el","rgb","getComputedStyle","fromNamed","hasAlpha","parseInt","substr","normalize","split","Number","fromStringInternal_","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","CollectionEvent","opt_element","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","array","getArray","item","insertAt","elem","ADD","removeAt","prev","REMOVE","setAt","opt_except","transform2D","dest","anchorX","anchorY","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","closestPoint","squaredDelta","maxDelta","isRing","minSquaredDistance","opt_tmpPoint","tmpPoint","NaN","sqrt","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","handleSourceChange_","PRECOMPOSE","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","visible","minResolution","maxResolution","POSTCOMPOSE","RENDER","RENDERCOMPLETE","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","forwardRef","ref","_props$align","align","classes","className","_props$color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","root","theme","typography","caption","overline","srOnly","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","_styles_useTheme__WEBPACK_IMPORTED_MODULE_6__","Paper","classNameProp","_props$component","_props$square","square","_props$elevation","elevation","rounded","elevations","shadows","shadow","boxShadow","backgroundColor","background","paper","transition","transitions","borderRadius","shape","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_contains_js__WEBPACK_IMPORTED_MODULE_1__","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","hasArea","ratio","opt_size","toSize","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","closestPointXY","closest","flat_area","inflate","simplify","GeometryLayout","getType","GeometryType","intersectsExtent","deflate","geom_SimpleGeometry","fromExtent","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","contains","getOrientedFlatCoordinates","opt_right","orient","getEnds","getFlatInteriorPoint","flatCenter","interiorpoint","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","intersectsextent","coordinate1","coordinate2","cosAngle","sinAngle","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","disposed_","dispose","rbush","quickselect","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","findItem","items","equalsFn","calcBBox","toBBox","distBBox","children","p","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","intersectionArea","multiSelect","right","all","_all","search","bbox","result","childBBox","nodesToSearch","collides","load","insert","_build","_splitRoot","tmpNode","_insert","goingUp","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","join","twiceArea","linearRingss","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","disable","none","createSnapToN","createSnapToZero","theta","floor","opt_tolerance","_array_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_3__","_events_Event_js__WEBPACK_IMPORTED_MODULE_4__","_events_condition_js__WEBPACK_IMPORTED_MODULE_5__","_functions_js__WEBPACK_IMPORTED_MODULE_6__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_7__","_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","_obj_js__WEBPACK_IMPORTED_MODULE_10__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","layerFilter","featureOverlay","useSpatialIndex","features","wrapX","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","featureOverlay_","layers","layer","layerFilter_","featureLayerAssociation_","getFeatures","addFeature_","removeFeature_","addFeatureLayerAssociation_","feature","getFeaturesCollection","getHitTolerance","getLayer","getOverlay","setHitTolerance","currentMap","selectedFeatures","unskipFeature","bind","skipFeature","removeFeatureLayerAssociation_","toggle","forEachFeatureAtPixel","pixel","styles","getGeometry","Fragment","fill","_SvgIcon__WEBPACK_IMPORTED_MODULE_0__","_setStatic","_getDisplayName","BaseComponent","hocName","SvgIcon","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","focusable","aria-hidden","role","userSelect","flexShrink","pxToRem","shorter","colorAction","action","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","AssertionError","message","_color_js__WEBPACK_IMPORTED_MODULE_1__","Fill","color_","checksum_","getColor","setColor","getChecksum","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","LRUCache","EventTarget","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","setSize","prune","LINE","ARRAY_BUFFER","JSON","TEXT","XML","revision_","on","once","un","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","Source","projection_","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","state","wrapX_","getAttributions","getAttributionsCollapsible","getProjection","getWrapX","refresh","setAttributions","setState","attributionLike","getDistance","DEFAULT_RADIUS","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","distance","bearing","lon1","dByR","lat","asin","lon","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_5__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","tmpTransform","extentRevision_","getClosestPoint","opt_closestPoint","intersectsCoordinate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","ret","lineStringLength","getInteriorPointOfArray","getInteriorPointsOfMultiArray","_array_js__WEBPACK_IMPORTED_MODULE_0__","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","interiorPoints","_LayerType_js__WEBPACK_IMPORTED_MODULE_0__","_Layer_js__WEBPACK_IMPORTED_MODULE_1__","_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_2__","_obj_js__WEBPACK_IMPORTED_MODULE_3__","_style_Style_js__WEBPACK_IMPORTED_MODULE_4__","VectorLayer","renderBuffer","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","properties","getOpacity","sourceState","getVisible","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","TileRange","tileRange","tileCoord","containsTileRange","getSize","_extends","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","functions","loadingstrategy_all","VectorEventType","RBush_RBush","opt_maxEntries","rbush_","rbush_default","items_","util","extents","uid","update","getAll","getInExtent","forEach_","forEachInExtent","ol_obj","structs_RBush","VectorSourceEvent","opt_feature","Vector_VectorSource","VectorSource","State","loader_","format_","overlaps_","overlaps","url_","loader","asserts","strategy_","strategy","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","geometry","events","EventType","handleFeatureChange_","ObjectEventType","valid","id","getId","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","this$1","loadedExtentsRtree","extentsToLoad","loop","extentToLoad","removeLoadedExtent","removed","setLoader","source_Source","ViewProperty","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","proj","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","z","power","createSnapToResolutions","defaultMaxResolution","common","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","rotationconstraint","createRotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","isDef","setZoom","setRotation","animationCallback","Date","now","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterRotate","Boolean","requestAnimationFrame","getSizeFromViewport_","selector","querySelector","metrics","opt_delta","getConstraints","getHints","opt_hints","calculateExtent","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerOn","centerX","centerY","hint","returnValue","setTimeout","Circle","RegularShape","CircleStyle","points","stroke","atlasManager","getFill","getStroke","getRadius","atlasManager_","setScale","getScale","setRadius","radius_","render_","ImageStyle","rotateWithView","checksums_","canvas_","hitDetectionCanvas_","fill_","origin_","points_","radius1","radius2_","radius2","angle_","stroke_","anchor_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","getAngle","getRotateWithView","getAnchor","getHitDetectionImage","getImage","getImageSize","getHitDetectionImageSize","getImageState","ImageState","getOrigin","listenImageChange","thisArg","unlistenImageChange","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","colorlike","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","dom","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","ol_color","strokeChecksum","fillChecksum","checksum","toFunction","createDefaultStyle","createEditingStyle","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","text_","zIndex_","styleFunction","getText","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","Stroke","white","blue","linearRingIsClockwise","edge","linearRingIsOriented","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","opacity_","rotateWithView_","rotation_","scale_","getSnapToPixel","setRotateWithView","setSnapToPixel","snapToPixel","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","getKey","src","crossOrigin","expire","iconImage","maxCacheSize","_objectWithoutPropertiesLoose","sourceKeys","_inheritsLoose","subClass","superClass","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","_shouldUpdate","_shallowEqual","nextProps","hoc","_inheritsLoose2","test","factory","createFactory","_Component","ShouldUpdate","_proto","shouldComponentUpdate","is","objA","objB","keysA","keysB","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","ol_MapEvent","MapEvent","opt_frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","getEventPixel","getCoordinateFromPixel","dragging","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserEventType","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","events_EventType","handleTileChange","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","LAYERS","Group","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","Base","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","ol_transform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","interactionsArray","handlePostRender","tileQueue","hints","viewHints","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","ol_size","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","control_Control","Control","target_","listenerKeys","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","css","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","innerHTML","handleToggle_","classList","getCollapsible","setCollapsed","getCollapsed","Rotate_render","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","ol_Kinetic","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_Interaction","interaction_DoubleClickZoom","DoubleClickZoom","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","events_condition","noKinetic_","centroid","ol_coordinate","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","ol_Disposable","DragBoxEventType","DragBoxEvent","onBoxEnd","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","DragBox","DragZoom","box_","minArea_","onBoxEnd_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","ol_ImageBase","ImageBase","getPixelRatio","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext_VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","flat_transform","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","render_canvas","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","expireIconCache","scheduleRemoveUnusedLayerRenderers","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","CanvasMapRenderer","insertBefore","childNodes","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","LayerType","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","VectorRenderType","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","getTileImage","getOpaque","alphaChanged","endTransition","TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","flat_length","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","BATCH_CONSTRUCTORS","Default","Image","LineString","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","TextPlacement","flatEnd","flatOffset","o","oo","range","drawChars_","drawTextImage_","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","opt_tileCoord","getKeyZXY","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","Triangulation_Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","ol_proj","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","opt_renderEdges","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","sources","getTileSize","triangulation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","reproj_render","leftToLoad","sourceListenKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","tmpTileCoord","TileGrid_TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","tilegrid_common","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","Corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","TileEventType","defaultTileLoadFunction","imageTile","XYZ_XYZ","TileImage","xyzOptions","gridOptions","createXYZ","reprojectionErrorThreshold","tileUrlFunction","urls","UrlTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","startCharCode","stopCharCode","fromCharCode","stop","expandUrl","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","transformWithOptions","write","transformed","decimals","getObject","parse","format_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","geom_Geometry","interpolatePoint","pointY","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","segments","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","midpoint","geom_MultiPoint","appendPoint","getPoint","geom_MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","GeoJSON_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","GeoJSON_readGeometry","geoJSONFeatures","crs","GeoJSON_writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","TileProperty","Tile_TileLayer","setPreload","setUseInterimTilesOnError","layer_Layer","breakpoints","_breakpoints$values","sm","md","lg","xl","_breakpoints$unit","unit","_breakpoints$step","step","_objectWithoutProperties2","between","endIndex","_extends2","upperbound","only","enumerable","configurable","writable","_Fill_js__WEBPACK_IMPORTED_MODULE_0__","_TextPlacement_js__WEBPACK_IMPORTED_MODULE_1__","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","_utils","_createBreakpoints","_createMixins","_createPalette","_createTypography","_shadows","_shape","_createSpacing","_transitions","_zIndex","_options$breakpoints","breakpointsInput","_options$mixins","mixins","mixinsInput","_options$palette","paletteInput","shadowsInput","spacingInput","spacing","_options$typography","typographyInput","overrides","_toolbar","_extends3","gutters","paddingLeft","paddingRight","_defineProperty2","toolbar","minHeight","_palette$primary","light","_indigo","dark","_palette$secondary","_pink","A200","A400","A700","_palette$error","_red","_palette$type","_palette$contrastThre","contrastThreshold","_palette$tonalOffset","tonalOffset","getContrastText","contrastText","_colorManipulator","getContrastRatio","augmentColor","mainShade","lightShade","darkShade","addLightOrDark","types","_common","grey","_grey","divider","hover","hoverOpacity","disabledBackground","icon","intent","shade","lighten","darken","50","100","200","300","400","500","600","700","800","900","A100","black","hexToRgb","re","RegExp","colors","hslToRgb","decomposeColor","recomposeColor","marker","substring","getLuminance","toFixed","coefficient","rgbToHex","int","hex","intToHex","foreground","lumA","lumB","emphasize","fade","_ref","_ref$fontFamily","defaultFontFamily","_ref$fontSize","_ref$fontWeightLight","fontWeightLight","_ref$fontWeightRegula","fontWeightRegular","_ref$fontWeightMedium","fontWeightMedium","_ref$fontWeightBold","fontWeightBold","_ref$htmlFontSize","htmlFontSize","allVariants","pxToRem2","buildVariant","letterSpacing","casing","variants","caseAllCaps","textTransform","shadowKeyUmbraOpacity","shadowKeyPenumbraOpacity","shadowAmbientShadowOpacity","createShadow","mui","_len","args","_key","isNumber","isString","formatMs","easeInOut","sharp","shortest","short","standard","complex","enteringScreen","leavingScreen","milliseconds","_options$duration","durationOption","_options$easing","easingOption","_options$delay","animatedProp","getAutoHeightDuration","constant","mobileStepper","speedDial","appBar","drawer","modal","snackbar","tooltip","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","Divider","_props$absolute","absolute","_props$light","_props$orientation","orientation","_props$role","vertical","border","inset","marginLeft","marginRight"],"mappings":"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","file":"static/js/11.f041c29b.chunk.js","sourcesContent":["/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\n\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n\n  return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\n\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\n\n\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [extent[0] - value, extent[1] - value, extent[2] + value, extent[3] + value];\n  }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\n\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\n\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n\n  return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\n\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\n\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] && extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\n\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\n\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n\n  return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\n\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\n\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] && extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\n\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n\n  return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\n\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\n\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n\n  return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\n\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n\n  return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\n\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n\n  return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\n\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\n\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n\n  if (val) {\n    return val;\n  }\n\n  val = callback.call(opt_this, getBottomRight(extent));\n\n  if (val) {\n    return val;\n  }\n\n  val = callback.call(opt_this, getTopRight(extent));\n\n  if (val) {\n    return val;\n  }\n\n  val = callback.call(opt_this, getTopLeft(extent));\n\n  if (val) {\n    return val;\n  }\n\n  return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\n\nexport function getArea(extent) {\n  var area = 0;\n\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n\n  return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\n\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\n\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\n\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\n\nexport function getCorner(extent, corner) {\n  var coordinate;\n\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n\n  return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\n\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\n\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\n\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\n\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\n\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n\n  return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\n\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\n\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\n\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\n\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\n\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\n\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] && extent1[2] >= extent2[0] && extent1[1] <= extent2[3] && extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\n\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\n\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\n\nexport function scaleFromCenter(extent, value) {\n  var deltaX = (extent[2] - extent[0]) / 2 * (value - 1);\n  var deltaY = (extent[3] - extent[1]) / 2 * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\n\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n\n  if (startRel === Relationship.INTERSECTING || endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n\n    if (!intersects && !!(endRel & Relationship.RIGHT) && !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n\n    if (!intersects && !!(endRel & Relationship.BELOW) && !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n\n    if (!intersects && !!(endRel & Relationship.LEFT) && !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n\n  return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\n\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [extent[0], extent[1], extent[0], extent[3], extent[2], extent[1], extent[2], extent[3]];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return (\n    /** @type {?} */\n    function () {\n      throw new Error('Unimplemented abstract method.');\n    }()\n  );\n}\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\n\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\n\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\n\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\n\nexport var VERSION = '5.3.3';","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\n\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\n\nexport var cosh = function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function cosh(x) {\n      var y =\n      /** @type {Math} */\n      Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n\n  return cosh;\n}();\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\n\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\n\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n\n  return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\n\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\n\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    } // Swap max row with i-th (current) row\n\n\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp; // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  } // Solve Ax=b for upper triangular matrix A (mat)\n\n\n  var x = new Array(n);\n\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n\n  return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\n\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\n\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\n\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\n\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\n\nexport function bindListener(listenerObj) {\n  var boundListener = function boundListener(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n\n    return listener.call(bindTo, evt);\n  };\n\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\n\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n\n    if (listenerObj.listener === listener && listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n\n      return listenerObj;\n    }\n  }\n\n  return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\n\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\n\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n\n  return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\n\n\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\n\n\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n\n    if (listenerMap) {\n      delete listenerMap[type];\n\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\n\n\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj =\n    /** @type {EventsKey} */\n    {\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    };\n    /** @type {import(\"./events/Target.js\").default} */\n\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\n\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\n\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\n\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n\n    clear(key);\n  }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\n\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function' ? Object.assign : function (target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\n\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\n\nexport function getValues(object) {\n  var values = [];\n\n  for (var property in object) {\n    values.push(object[property]);\n  }\n\n  return values;\n}\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\n\nexport function isEmpty(object) {\n  var property;\n\n  for (property in object) {\n    return false;\n  }\n\n  return !property;\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n  /* Key not found. */\n\n\n  return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\n\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\n\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\n\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n\n    return n - 1;\n  }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\n\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\n\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\n\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n\n  if (found) {\n    arr.splice(i, 1);\n  }\n\n  return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\n\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\n\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n\n  if (len1 !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\n\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n\n  for (i = 0; i < length; i++) {\n    tmp[i] = {\n      index: i,\n      value: arr[i]\n    };\n  }\n\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\n\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\n\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}","import { useTheme as useThemeWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  return useThemeWithoutDefault() || defaultTheme;\n}","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\n\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\n\nexport function FALSE() {\n  return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\n\nexport function VOID() {}","/**\n * @module ol/dom\n */\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas =\n  /** @type {HTMLCanvasElement} */\n  document.createElement('canvas');\n\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n\n  return (\n    /** @type {CanvasRenderingContext2D} */\n    canvas.getContext('2d')\n  );\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\n\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n  return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\n\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n  return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\n\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\n\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\n\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _pure = _interopRequireDefault(require(\"recompose/pure\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Icon = function Icon(props) {\n    return _react.default.createElement(_SvgIcon.default, props, path);\n  };\n\n  Icon.displayName = \"\".concat(displayName, \"Icon\");\n  Icon = (0, _pure.default)(Icon);\n  Icon.muiName = 'SvgIcon';\n  return Icon;\n}\n\n;\nvar _default = createSvgIcon;\nexports.default = _default;","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\n\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\n\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\n\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\n\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n  return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\n\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\n\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\n\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\n\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\n\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\n\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\n\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\n\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n  return transform;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\n\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n\n  this.type = type;\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n\n  this.target = null;\n};\n/**\n * Stop event propagation.\n * @api\n */\n\n\nEvent.prototype.preventDefault = function preventDefault() {\n  this.propagationStopped = true;\n};\n/**\n * Stop event propagation.\n * @api\n */\n\n\nEvent.prototype.stopPropagation = function stopPropagation() {\n  this.propagationStopped = true;\n};\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\n\n\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\n\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\nexport default Event;","/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\n\nexport var ObjectEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n\n    this.key = key;\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n\n    this.oldValue = oldValue;\n  }\n\n  if (Event) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create(Event && Event.prototype);\n  ObjectEvent.prototype.constructor = ObjectEvent;\n  return ObjectEvent;\n}(Event);\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\n\nvar BaseObject =\n/*@__PURE__*/\nfunction (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this); // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n\n    getUid(this);\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if (Observable) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create(Observable && Observable.prototype);\n  BaseObject.prototype.constructor = BaseObject;\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n\n  BaseObject.prototype.get = function get(key) {\n    var value;\n\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n\n    return value;\n  };\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n\n\n  BaseObject.prototype.getKeys = function getKeys() {\n    return Object.keys(this.values_);\n  };\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n\n\n  BaseObject.prototype.getProperties = function getProperties() {\n    return assign({}, this.values_);\n  };\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n\n\n  BaseObject.prototype.notify = function notify(key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n\n\n  BaseObject.prototype.set = function set(key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n\n\n  BaseObject.prototype.setProperties = function setProperties(values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n\n\n  BaseObject.prototype.unset = function unset(key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable);\n/**\n * @type {Object<string, string>}\n */\n\n\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\n\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ? changeEventTypeCache[key] : changeEventTypeCache[key] = 'change:' + key;\n}\nexport default BaseObject;","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\n\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n\n  this.units_ =\n  /** @type {import(\"./Units.js\").default} */\n  options.units;\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n\n  this.worldExtent_ = options.worldExtent !== undefined ? options.worldExtent : null;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this.axisOrientation_ = options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.global_ = options.global !== undefined ? options.global : false;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n\n  this.getPointResolutionFunc_ = options.getPointResolution;\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n\n  this.defaultTileGrid_ = null;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\n\n\nProjection.prototype.canWrapX = function canWrapX() {\n  return this.canWrapX_;\n};\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\n\n\nProjection.prototype.getCode = function getCode() {\n  return this.code_;\n};\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\n\n\nProjection.prototype.getExtent = function getExtent() {\n  return this.extent_;\n};\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\n\n\nProjection.prototype.getUnits = function getUnits() {\n  return this.units_;\n};\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\n\n\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\n\n\nProjection.prototype.getWorldExtent = function getWorldExtent() {\n  return this.worldExtent_;\n};\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\n\n\nProjection.prototype.getAxisOrientation = function getAxisOrientation() {\n  return this.axisOrientation_;\n};\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\n\n\nProjection.prototype.isGlobal = function isGlobal() {\n  return this.global_;\n};\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\n\n\nProjection.prototype.setGlobal = function setGlobal(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\n\n\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid() {\n  return this.defaultTileGrid_;\n};\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\n\n\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\n\n\nProjection.prototype.setExtent = function setExtent(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\n\n\nProjection.prototype.setWorldExtent = function setWorldExtent(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\n\n\nProjection.prototype.setGetPointResolution = function setGetPointResolution(func) {\n  this.getPointResolutionFunc_ = func;\n};\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\n\n\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc() {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;","/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\n\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\n\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\n\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\n\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\n\nvar EPSG3857Projection =\n/*@__PURE__*/\nfunction (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function getPointResolution(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n  }\n\n  if (Projection) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create(Projection && Projection.prototype);\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n  return EPSG3857Projection;\n}(Projection);\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\n\n\nexport var PROJECTIONS = [new EPSG3857Projection('EPSG:3857'), new EPSG3857Projection('EPSG:102100'), new EPSG3857Projection('EPSG:102113'), new EPSG3857Projection('EPSG:900913'), new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'), new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'), new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\n\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n\n  var halfSize = HALF_SIZE;\n\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS * Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n\n    output[i + 1] = y;\n  }\n\n  return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\n\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n\n  return output;\n}","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\n\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\n\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\n\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\n\nvar EPSG4326Projection =\n/*@__PURE__*/\nfunction (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n  }\n\n  if (Projection) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create(Projection && Projection.prototype);\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n  return EPSG4326Projection;\n}(Projection);\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\n\n\nexport var PROJECTIONS = [new EPSG4326Projection('CRS:84'), new EPSG4326Projection('EPSG:4326', 'neu'), new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'), new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'), new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'), new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'), new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'), new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')];","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\n\nexport function clear() {\n  cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\n\nexport function get(code) {\n  return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\n\nexport function add(code, projection) {\n  cache[code] = projection;\n}","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\n\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\n\nexport function clear() {\n  transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\n\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\n\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n\n  return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\n\nexport function get(sourceCode, destinationCode) {\n  var transform;\n\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n\n  return transform;\n}","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\n\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n\n  return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\n\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n\n    input = opt_output;\n  }\n\n  return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\n\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\n\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\n\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ? projections.get(\n  /** @type {string} */\n  projectionLike) :\n  /** @type {Projection} */\n  projectionLike || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\n\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [point[0] - resolution / 2, point[1], point[0] + resolution / 2, point[1], point[0], point[1] - resolution / 2, point[0], point[1] + resolution / 2];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ? METERS_PER_UNIT[opt_units] : projection.getMetersPerUnit();\n\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n\n  return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\n\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\n\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n/**\n * Clear all cached projections and transforms.\n */\n\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\n\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */\n      projection\n    );\n  }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\n\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n\n      return output;\n    }\n  );\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\n\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\n\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\n\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n\n  return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\n\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\n\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n\n  return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\n\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\n\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\n\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\n\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\n\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS); // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport { clamp } from '../math.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\n\nvar Interaction =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n\n\n    this.map_ = null;\n    this.setActive(true);\n  }\n\n  if (BaseObject) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create(BaseObject && BaseObject.prototype);\n  Interaction.prototype.constructor = Interaction;\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n\n  Interaction.prototype.getActive = function getActive() {\n    return (\n      /** @type {boolean} */\n      this.get(InteractionProperty.ACTIVE)\n    );\n  };\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n\n\n  Interaction.prototype.getMap = function getMap() {\n    return this.map_;\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n\n\n  Interaction.prototype.handleEvent = function handleEvent(mapBrowserEvent) {\n    return true;\n  };\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n\n\n  Interaction.prototype.setActive = function setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  Interaction.prototype.setMap = function setMap(map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject);\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\n\n\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n\n  if (currentCenter) {\n    var center = view.constrainCenter([currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\n\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(resolution, view.getMinResolution() || resolutions[resolutions.length - 1], view.getMaxResolution() || resolutions[0]);\n  } // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n\n\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n    opt_anchor = [(resolution * currentCenter[0] - currentResolution * center[0]) / (resolution - currentResolution), (resolution * currentCenter[1] - currentResolution * center[1]) / (resolution - currentResolution)];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\n\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n\n    if (currentResolution !== undefined && currentCenter && resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n\n      view.setResolution(resolution);\n    }\n  }\n}\nexport default Interaction;","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport { create as createTransform } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\n\nexport var defaultFillStyle = [0, 0, 0, 1];\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\n\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\n\nexport var labelCache = new LRUCache();\n/**\n * @type {!Object<string, number>}\n */\n\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\n\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\n\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n\nexport var checkFont = function () {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = \"wmytzilWMYTZIL@#/&?$%10\\uF013\";\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext(); // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width; // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n\n          available = available && width != referenceWidth;\n        }\n      }\n\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function check() {\n    var done = true;\n\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights); // Make sure that loaded fonts are picked up by Safari\n\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n\n    if (!fontFamilies) {\n      return;\n    }\n\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\n\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n\n  return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\n\n\nexport var measureTextHeight = function () {\n  var span;\n  var heights = textHeights;\n  return function (font) {\n    var height = heights[font];\n\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n\n  return measureContext.measureText(text).width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\n\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\n\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\n\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\n\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\n\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\n\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\n\nexport var CANVAS_LINE_DASH = function () {\n  var has = false;\n\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {// pass\n  }\n\n  return has;\n}();\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\n\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\n\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\n\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\n\nexport var MSPOINTER = !!navigator.msPointerEnabled;\nexport { HAS as WEBGL } from './webgl.js';","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\n\nexport var METERS_PER_UNIT = {}; // use the radius of the Normal sphere\n\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\n\nexport var altKeyOnly = function altKeyOnly(mapBrowserEvent) {\n  var originalEvent =\n  /** @type {KeyboardEvent|MouseEvent|TouchEvent} */\n  mapBrowserEvent.originalEvent;\n  return originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey) && !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\n\nexport var altShiftKeysOnly = function altShiftKeysOnly(mapBrowserEvent) {\n  var originalEvent =\n  /** @type {KeyboardEvent|MouseEvent|TouchEvent} */\n  mapBrowserEvent.originalEvent;\n  return originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey) && originalEvent.shiftKey;\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\n\nexport var focus = function focus(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\n\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\n\nexport var click = function click(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\n\nexport var mouseActionButton = function mouseActionButton(mapBrowserEvent) {\n  var originalEvent =\n  /** @type {MouseEvent} */\n  mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\n\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\n\nexport var pointerMove = function pointerMove(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\n\nexport var singleClick = function singleClick(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\n\nexport var doubleClick = function doubleClick(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\n\nexport var noModifierKeys = function noModifierKeys(mapBrowserEvent) {\n  var originalEvent =\n  /** @type {KeyboardEvent|MouseEvent|TouchEvent} */\n  mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey) && !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\n\nexport var platformModifierKeyOnly = function platformModifierKeyOnly(mapBrowserEvent) {\n  var originalEvent =\n  /** @type {KeyboardEvent|MouseEvent|TouchEvent} */\n  mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey && (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) && !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\n\nexport var shiftKeyOnly = function shiftKeyOnly(mapBrowserEvent) {\n  var originalEvent =\n  /** @type {KeyboardEvent|MouseEvent|TouchEvent} */\n  mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey && !(originalEvent.metaKey || originalEvent.ctrlKey) && originalEvent.shiftKey;\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\n\nexport var targetNotEditable = function targetNotEditable(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName =\n  /** @type {Element} */\n  target.tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\n\nexport var mouseOnly = function mouseOnly(mapBrowserEvent) {\n  var pointerEvent =\n  /** @type {import(\"../MapBrowserPointerEvent\").default} */\n  mapBrowserEvent.pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n\n  return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\n\nexport var primaryAction = function primaryAction(mapBrowserEvent) {\n  var pointerEvent =\n  /** @type {import(\"../MapBrowserPointerEvent\").default} */\n  mapBrowserEvent.pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};","/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\n\nvar SimpleGeometry =\n/*@__PURE__*/\nfunction (Geometry) {\n  function SimpleGeometry() {\n    Geometry.call(this);\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n\n    this.layout = GeometryLayout.XY;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.stride = 2;\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n\n    this.flatCoordinates = null;\n  }\n\n  if (Geometry) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create(Geometry && Geometry.prototype);\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n  /**\n   * @inheritDoc\n   */\n\n  SimpleGeometry.prototype.computeExtent = function computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n  };\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n\n\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates() {\n    return abstract();\n  };\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n\n\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n\n\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates() {\n    return this.flatCoordinates;\n  };\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n\n\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate() {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n\n\n  SimpleGeometry.prototype.getLayout = function getLayout() {\n    return this.layout;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    } // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n\n\n    if (squaredTolerance < 0 || this.simplifiedGeometryMaxMinSquaredTolerance !== 0 && squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance) {\n      return this;\n    }\n\n    var key = squaredTolerance.toString();\n\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n\n\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  };\n  /**\n   * @return {number} Stride.\n   */\n\n\n  SimpleGeometry.prototype.getStride = function getStride() {\n    return this.stride;\n  };\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n\n\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n\n\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates(coordinates, opt_layout) {\n    abstract();\n  };\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n\n\n  SimpleGeometry.prototype.setLayout = function setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates =\n          /** @type {Array} */\n          coordinates[0];\n        }\n      }\n\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n\n    this.layout = layout;\n    this.stride = stride;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  SimpleGeometry.prototype.applyTransform = function applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  SimpleGeometry.prototype.rotate = function rotate$1(angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  SimpleGeometry.prototype.scale = function scale$1(sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n\n    if (sy === undefined) {\n      sy = sx;\n    }\n\n    var anchor = opt_anchor;\n\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n\n    var flatCoordinates = this.getFlatCoordinates();\n\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  SimpleGeometry.prototype.translate = function translate$1(deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry);\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\n\n\nfunction getLayoutForStride(stride) {\n  var layout;\n\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n\n  return (\n    /** @type {GeometryLayout} */\n    layout\n  );\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\n\n\nexport function getStrideForLayout(layout) {\n  var stride;\n\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n\n  return (\n    /** @type {number} */\n    stride\n  );\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\n\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n  }\n}\nexport default SimpleGeometry;","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\nexport function linear(t) {\n  return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\n\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n\n  return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\n\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n\n  return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\n\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n\n  ends.length = i;\n  return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\n\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n\n  endss.length = i;\n  return endss;\n}","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n\n  coordinates.length = i;\n  return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\n\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n\n  coordinatess.length = i;\n  return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\n\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n\n  coordinatesss.length = i;\n  return coordinatesss;\n}","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  return function validate() {\n    return propType1.apply(void 0, arguments) || propType2.apply(void 0, arguments);\n  };\n}","import PropTypes from 'prop-types';\nimport chainPropTypes from './chainPropTypes';\n\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  var _elementType$prototyp = elementType.prototype,\n      prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;\n  return Boolean(prototype.isReactComponent);\n}\n\nfunction acceptingRef(props, propName, componentName, location, propFullName) {\n  var element = props[propName];\n  var safePropName = propFullName || propName;\n\n  if (element == null) {\n    return null;\n  }\n\n  var warningHint;\n  var elementType = element.type;\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n\n  if (typeof elementType === 'function' && !isClassComponent(elementType)) {\n    warningHint = 'Did you accidentally use a plain function component for an element instead?';\n  }\n\n  if (warningHint !== undefined) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(safePropName, \"` supplied to `\").concat(componentName, \"`. \") + \"Expected an element that can hold a ref. \".concat(warningHint, \" \") + 'For more information see https://material-ui.com/r/caveat-with-refs-guide');\n  }\n\n  return null;\n}\n\nvar elementAcceptingRef = chainPropTypes(PropTypes.element, acceptingRef);\nelementAcceptingRef.isRequired = chainPropTypes(PropTypes.element.isRequired, acceptingRef);\nexport default elementAcceptingRef;","import * as PropTypes from 'prop-types';\nimport chainPropTypes from './chainPropTypes';\n\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  var _elementType$prototyp = elementType.prototype,\n      prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;\n  return Boolean(prototype.isReactComponent);\n}\n\nfunction elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {\n  var propValue = props[propName];\n  var safePropName = propFullName || propName;\n\n  if (propValue == null) {\n    return null;\n  }\n\n  var warningHint;\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n\n  if (typeof propValue === 'function' && !isClassComponent(propValue)) {\n    warningHint = 'Did you accidentally provide a plain function component instead?';\n  }\n\n  if (warningHint !== undefined) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(safePropName, \"` supplied to `\").concat(componentName, \"`. \") + \"Expected an element type that can hold a ref. \".concat(warningHint, \" \") + 'For more information see https://material-ui.com/r/caveat-with-refs-guide');\n  }\n\n  return null;\n}\n\nexport default chainPropTypes(PropTypes.elementType, elementTypeAcceptingRef);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // This module is based on https://github.com/airbnb/prop-types-exact repository.\n// However, in order to reduce the number of dependencies and to remove some extra safe checks\n// the module was forked.\n// Only exported for test purposes.\n\nexport var specialProperty = \"exact-prop: \\u200B\";\nexport default function exactProp(propTypes) {\n  if (process.env.NODE_ENV === 'production') {\n    return propTypes;\n  }\n\n  return _extends({}, propTypes, _defineProperty({}, specialProperty, function (props) {\n    var unsupportedProps = Object.keys(props).filter(function (prop) {\n      return !propTypes.hasOwnProperty(prop);\n    });\n\n    if (unsupportedProps.length > 0) {\n      return new Error(\"The following props are not supported: \".concat(unsupportedProps.map(function (prop) {\n        return \"`\".concat(prop, \"`\");\n      }).join(', '), \". Please remove them.\"));\n    }\n\n    return null;\n  }));\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { ForwardRef } from 'react-is'; // Simplified polyfill for IE 11 support\n// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\n\nvar fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*/;\nexport function getFunctionName(fn) {\n  var match = \"\".concat(fn).match(fnNameMatchRegex);\n  var name = match && match[1];\n  return name || '';\n}\n/**\n * @param {function} Component\n * @param {string} fallback\n * @returns {string | undefined}\n */\n\nfunction getFunctionComponentName(Component) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? \"\".concat(wrapperName, \"(\").concat(functionName, \")\") : wrapperName);\n}\n/**\n * cherry-pick from\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n * originally forked from recompose/getDisplayName with added IE 11 support\n *\n * @param {React.ReactType} Component\n * @returns {string | undefined}\n */\n\n\nexport default function getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  }\n\n  if (_typeof(Component) === 'object') {\n    switch (Component.$$typeof) {\n      case ForwardRef:\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n\n      default:\n        return undefined;\n    }\n  }\n\n  return undefined;\n}","/* eslint-disable */\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nexport default typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();","import PropTypes from 'prop-types';\nvar refType = PropTypes.oneOfType([PropTypes.func, PropTypes.PropTypes.object]);\nexport default refType;","/** @license Material-UI v4.5.2\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport { default as chainPropTypes } from './chainPropTypes';\nexport { default as deepmerge } from './deepmerge';\nexport { default as elementAcceptingRef } from './elementAcceptingRef';\nexport { default as elementTypeAcceptingRef } from './elementTypeAcceptingRef';\nexport { default as exactProp } from './exactProp';\nexport { default as getDisplayName } from './getDisplayName';\nexport { default as ponyfillGlobal } from './ponyfillGlobal';\nexport { default as refType } from './refType';","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\n\nvar Target =\n/*@__PURE__*/\nfunction (Disposable) {\n  function Target() {\n    Disposable.call(this);\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n\n    this.pendingRemovals_ = {};\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n\n    this.dispatching_ = {};\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n\n    this.listeners_ = {};\n  }\n\n  if (Disposable) Target.__proto__ = Disposable;\n  Target.prototype = Object.create(Disposable && Disposable.prototype);\n  Target.prototype.constructor = Target;\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n\n  Target.prototype.addEventListener = function addEventListener(type, listener) {\n    var listeners = this.listeners_[type];\n\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n\n\n  Target.prototype.dispatchEvent = function dispatchEvent(event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n\n      ++this.dispatching_[type];\n\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n\n      --this.dispatching_[type];\n\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n\n        delete this.dispatching_[type];\n      }\n\n      return propagate;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Target.prototype.disposeInternal = function disposeInternal() {\n    unlistenAll(this);\n  };\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n\n\n  Target.prototype.getListeners = function getListeners(type) {\n    return this.listeners_[type];\n  };\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n\n\n  Target.prototype.hasListener = function hasListener(opt_type) {\n    return opt_type ? opt_type in this.listeners_ : Object.keys(this.listeners_).length > 0;\n  };\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n\n\n  Target.prototype.removeEventListener = function removeEventListener(type, listener) {\n    var listeners = this.listeners_[type];\n\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable);\n\nexport default Target;","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\n\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ? opt_simplifiedFlatCoordinates : [];\n\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n\n  simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset + 1];\n    }\n\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n\n\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n\n  var stack = [offset, end - stride];\n  var index = 0;\n\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n\n  return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\n\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n\n  return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\n\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n\n  return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset + 1];\n    }\n\n    return simplifiedOffset;\n  }\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1]; // copy first point\n\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n\n  return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\n\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\n\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  } // snap the first coordinate (P1)\n\n\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride; // add the first coordinate to the output\n\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1; // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n\n  var x2, y2;\n\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride; // skip P3 if it is equal to P2\n\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    } // calculate the delta between P1 and P2\n\n\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1; // calculate the delta between P3 and P1\n\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1; // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n\n    if (dx1 * dy2 == dy1 * dx2 && (dx1 < 0 && dx2 < dx1 || dx1 == dx2 || dx1 > 0 && dx2 > dx1) && (dy1 < 0 && dy2 < dy1 || dy1 == dy2 || dy1 > 0 && dy2 > dy1)) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    } // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n\n\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  } // add the last point (P2)\n\n\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\n\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n\n  return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\n\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n\n  return simplifiedOffset;\n}","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\n\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\n\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\n\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\n\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\n\n\nexport var fromString = function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  var MAX_CACHE_SIZE = 1024;\n  /**\n   * @type {Object<string, Color>}\n   */\n\n  var cache = {};\n  /**\n   * @type {number}\n   */\n\n  var cacheSize = 0;\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      var color;\n\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          var i = 0;\n\n          for (var key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n\n      return color;\n    }\n  );\n}();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\n\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\n\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    var n = s.length - 1; // number of hex digits\n\n    var d; // number of digits per channel\n\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n\n  return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\n\n\nexport function normalize(color) {\n  color[0] = clamp(color[0] + 0.5 | 0, 0, 255);\n  color[1] = clamp(color[1] + 0.5 | 0, 0, 255);\n  color[2] = clamp(color[2] + 0.5 | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\n\nexport function toString(color) {\n  var r = color[0];\n\n  if (r != (r | 0)) {\n    r = r + 0.5 | 0;\n  }\n\n  var g = color[1];\n\n  if (g != (g | 0)) {\n    g = g + 0.5 | 0;\n  }\n\n  var b = color[2];\n\n  if (b != (b | 0)) {\n    b = b + 0.5 | 0;\n  }\n\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};","/**\n * @module ol/css\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\n\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\n\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\n\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\n\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\n\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\n\nexport var getFontFamilies = function () {\n  var style;\n  var cache = {};\n  return function (font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n\n      if (!family) {\n        return null;\n      }\n\n      cache[font] = family.split(/,\\s?/);\n    }\n\n    return cache[font];\n  };\n}();","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\n\nvar Property = {\n  LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\n\nexport var CollectionEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n\n    this.element = opt_element;\n  }\n\n  if (Event) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create(Event && Event.prototype);\n  CollectionEvent.prototype.constructor = CollectionEvent;\n  return CollectionEvent;\n}(Event);\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\n\nvar Collection =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    BaseObject.call(this);\n    var options = opt_options || {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.unique_ = !!options.unique;\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  if (BaseObject) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create(BaseObject && BaseObject.prototype);\n  Collection.prototype.constructor = Collection;\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n\n  Collection.prototype.clear = function clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n\n\n  Collection.prototype.extend = function extend(arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n\n    return this;\n  };\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n\n\n  Collection.prototype.forEach = function forEach(f) {\n    var array = this.array_;\n\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n\n\n  Collection.prototype.getArray = function getArray() {\n    return this.array_;\n  };\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n\n\n  Collection.prototype.item = function item(index) {\n    return this.array_[index];\n  };\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n\n\n  Collection.prototype.getLength = function getLength() {\n    return this.get(Property.LENGTH);\n  };\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n\n\n  Collection.prototype.insertAt = function insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n\n\n  Collection.prototype.pop = function pop() {\n    return this.removeAt(this.getLength() - 1);\n  };\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n\n\n  Collection.prototype.push = function push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n\n\n  Collection.prototype.remove = function remove(elem) {\n    var arr = this.array_;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n\n\n  Collection.prototype.removeAt = function removeAt(index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n\n\n  Collection.prototype.setAt = function setAt(index, elem) {\n    var n = this.getLength();\n\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n\n      this.insertAt(index, elem);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Collection.prototype.updateLength_ = function updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n\n\n  Collection.prototype.assertUnique_ = function assertUnique_(elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject);\n\nexport default Collection;","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n\n  return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\n\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n\n  return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\n\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n\n  return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\n\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n\n  return dest;\n}","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\n\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n      }\n\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n\n  closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\n\n\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\n\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n\n  return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\n\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n\n  return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n\n  var i, squaredDistance;\n\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n\n  while (index < end) {\n    assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) / maxDelta | 0, 1);\n    }\n  }\n\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n\n      closestPoint.length = stride;\n    }\n  }\n\n  return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n\n  return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\n\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n\n  return minSquaredDistance;\n}","/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getUid } from '../util.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\n\nvar Layer =\n/*@__PURE__*/\nfunction (BaseLayer) {\n  function Layer(options) {\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n    BaseLayer.call(this, baseOptions);\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n\n    this.mapPrecomposeKey_ = null;\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n\n    this.mapRenderKey_ = null;\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this, getChangeEventType(LayerProperty.SOURCE), this.handleSourcePropertyChange_, this);\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if (BaseLayer) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create(BaseLayer && BaseLayer.prototype);\n  Layer.prototype.constructor = Layer;\n  /**\n   * @inheritDoc\n   */\n\n  Layer.prototype.getLayersArray = function getLayersArray(opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray(opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n\n\n  Layer.prototype.getSource = function getSource() {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */\n      source || null\n    );\n  };\n  /**\n    * @inheritDoc\n    */\n\n\n  Layer.prototype.getSourceState = function getSourceState() {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n  /**\n   * @private\n   */\n\n\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_() {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n\n\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n\n    var source = this.getSource();\n\n    if (source) {\n      this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n    }\n\n    this.changed();\n  };\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n\n\n  Layer.prototype.setMap = function setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n\n    if (!map) {\n      this.changed();\n    }\n\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n        var renderEvent =\n        /** @type {import(\"../render/Event.js\").default} */\n        evt;\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n\n\n  Layer.prototype.setSource = function setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer);\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\n\n\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution && resolution < layerState.maxResolution;\n}\nexport default Layer;","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\n\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * We are empirically mapping the variant prop to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\"]);\n\n  var theme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!theme.shadows[elevation]) {\n      console.error(\"Material-UI: this elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n  }\n\n  var className = clsx(classes.root, classes[\"elevation\".concat(elevation)], classNameProp, !square && classes.rounded);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\n\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n\n  return forEachSegment(flatCoordinates, offset, end, stride,\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n   * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n   * @return {boolean} `true` if the segment and the extent intersect,\n   *     `false` otherwise.\n   */\n  function (point1, point2) {\n    return intersectsSegment(extent, point1, point2);\n  });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n\n    offset = ends[i];\n  }\n\n  return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n\n  if (ends.length === 1) {\n    return true;\n  }\n\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\n\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n\n    if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n\n    offset = ends[ends.length - 1];\n  }\n\n  return false;\n}","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\n\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains (x, y).\n   */\n  function (coordinate) {\n    return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n  });\n  return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\n\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n\n    offset = ends[ends.length - 1];\n  }\n\n  return false;\n}","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\n\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\n\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n\n  opt_size[0] = size[0] * ratio + 0.5 | 0;\n  opt_size[1] = size[1] * ratio + 0.5 | 0;\n  return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\n\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] =\n      /** @type {number} */\n      size;\n    }\n\n    return opt_size;\n  }\n}","/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\n\nvar LinearRing =\n/*@__PURE__*/\nfunction (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout,\n      /** @type {Array<number>} */\n      coordinates);\n    } else {\n      this.setCoordinates(\n      /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n      coordinates, opt_layout);\n    }\n  }\n\n  if (SimpleGeometry) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create(SimpleGeometry && SimpleGeometry.prototype);\n  LinearRing.prototype.constructor = LinearRing;\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n\n  LinearRing.prototype.clone = function clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinearRing.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n\n    return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n\n\n  LinearRing.prototype.getArea = function getArea() {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n\n\n  LinearRing.prototype.getCoordinates = function getCoordinates() {\n    return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal(squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  LinearRing.prototype.getType = function getType() {\n    return GeometryType.LINEAR_RING;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinearRing.prototype.intersectsExtent = function intersectsExtent(extent) {\n    return false;\n  };\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n\n\n  LinearRing.prototype.setCoordinates = function setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n\n    this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry);\n\nexport default LinearRing;","/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingIsOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\n\nvar Polygon =\n/*@__PURE__*/\nfunction (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n    SimpleGeometry.call(this);\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n\n    this.ends_ = [];\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.flatInteriorPointRevision_ = -1;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n\n    this.flatInteriorPoint_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDeltaRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.orientedRevision_ = -1;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout,\n      /** @type {Array<number>} */\n      coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n      /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */\n      coordinates, opt_layout);\n    }\n  }\n\n  if (SimpleGeometry) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create(SimpleGeometry && SimpleGeometry.prototype);\n  Polygon.prototype.constructor = Polygon;\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n\n  Polygon.prototype.appendLinearRing = function appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n\n\n  Polygon.prototype.clone = function clone() {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Polygon.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n\n    return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Polygon.prototype.containsXY = function containsXY(x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n\n\n  Polygon.prototype.getArea = function getArea() {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n\n\n  Polygon.prototype.getCoordinates = function getCoordinates(opt_right) {\n    var flatCoordinates;\n\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  };\n  /**\n   * @return {Array<number>} Ends.\n   */\n\n\n  Polygon.prototype.getEnds = function getEnds() {\n    return this.ends_;\n  };\n  /**\n   * @return {Array<number>} Interior point.\n   */\n\n\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n\n    return this.flatInteriorPoint_;\n  };\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n\n\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n\n\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount() {\n    return this.ends_.length;\n  };\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n\n\n  Polygon.prototype.getLinearRing = function getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n\n    return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n\n\n  Polygon.prototype.getLinearRings = function getLinearRings() {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n\n    return linearRings;\n  };\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n\n\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n\n      if (linearRingIsOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n\n      this.orientedRevision_ = this.getRevision();\n    }\n\n    return this.orientedFlatCoordinates_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal(squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  Polygon.prototype.getType = function getType() {\n    return GeometryType.POLYGON;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  Polygon.prototype.intersectsExtent = function intersectsExtent(extent) {\n    return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n\n\n  Polygon.prototype.setCoordinates = function setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n\n    var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry);\n\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\n\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n\n  var flatCoordinates = [];\n\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\n\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\n\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\n\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + modulo(i, sides) * 2 * Math.PI / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n\n  polygon.changed();\n}","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\n\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\n\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n\n  var d = Math.sqrt(dx * dx + dy * dy);\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n  return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\n\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = dx === 0 && dy === 0 ? 0 : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  var x, y;\n\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n\n  return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\n\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\n\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + \"\\xB0 \" + padNumber(min, 2) + \"\\u2032 \" + padNumber(sec, 2, dflPrecision) + \"\\u2033\" + (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\n\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template.replace('{x}', coordinate[0].toFixed(opt_fractionDigits)).replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\n\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n\n  return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\n\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\n\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\n\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\n\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\n\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\n\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' + degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\n\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}","/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\n\nvar Point =\n/*@__PURE__*/\nfunction (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if (SimpleGeometry) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create(SimpleGeometry && SimpleGeometry.prototype);\n  Point.prototype.constructor = Point;\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n\n  Point.prototype.clone = function clone() {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Point.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n\n\n  Point.prototype.getCoordinates = function getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Point.prototype.computeExtent = function computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  Point.prototype.getType = function getType() {\n    return GeometryType.POINT;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  Point.prototype.intersectsExtent = function intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  Point.prototype.setCoordinates = function setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n\n    this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry);\n\nexport default Point;","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n/**\n * Clean up.\n */\n\n\nDisposable.prototype.dispose = function dispose() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n/**\n * Extension point for disposable objects.\n * @protected\n */\n\n\nDisposable.prototype.disposeInternal = function disposeInternal() {};\n\nexport default Disposable;","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n  if (!(this instanceof rbush)) return new rbush(maxEntries, format); // max entries in a node is 9 by default; min node fill is 40% for best performance\n\n  this._maxEntries = Math.max(4, maxEntries || 9);\n  this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n  if (format) {\n    this._initFormat(format);\n  }\n\n  this.clear();\n}\n\nrbush.prototype = {\n  all: function all() {\n    return this._all(this.data, []);\n  },\n  search: function search(bbox) {\n    var node = this.data,\n        result = [],\n        toBBox = this.toBBox;\n    if (!intersects(bbox, node)) return result;\n    var nodesToSearch = [],\n        i,\n        len,\n        child,\n        childBBox;\n\n    while (node) {\n      for (i = 0, len = node.children.length; i < len; i++) {\n        child = node.children[i];\n        childBBox = node.leaf ? toBBox(child) : child;\n\n        if (intersects(bbox, childBBox)) {\n          if (node.leaf) result.push(child);else if (contains(bbox, childBBox)) this._all(child, result);else nodesToSearch.push(child);\n        }\n      }\n\n      node = nodesToSearch.pop();\n    }\n\n    return result;\n  },\n  collides: function collides(bbox) {\n    var node = this.data,\n        toBBox = this.toBBox;\n    if (!intersects(bbox, node)) return false;\n    var nodesToSearch = [],\n        i,\n        len,\n        child,\n        childBBox;\n\n    while (node) {\n      for (i = 0, len = node.children.length; i < len; i++) {\n        child = node.children[i];\n        childBBox = node.leaf ? toBBox(child) : child;\n\n        if (intersects(bbox, childBBox)) {\n          if (node.leaf || contains(bbox, childBBox)) return true;\n          nodesToSearch.push(child);\n        }\n      }\n\n      node = nodesToSearch.pop();\n    }\n\n    return false;\n  },\n  load: function load(data) {\n    if (!(data && data.length)) return this;\n\n    if (data.length < this._minEntries) {\n      for (var i = 0, len = data.length; i < len; i++) {\n        this.insert(data[i]);\n      }\n\n      return this;\n    } // recursively build the tree with the given data from scratch using OMT algorithm\n\n\n    var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n    if (!this.data.children.length) {\n      // save as is if tree is empty\n      this.data = node;\n    } else if (this.data.height === node.height) {\n      // split root if trees have the same height\n      this._splitRoot(this.data, node);\n    } else {\n      if (this.data.height < node.height) {\n        // swap trees if inserted one is bigger\n        var tmpNode = this.data;\n        this.data = node;\n        node = tmpNode;\n      } // insert the small tree into the large tree at appropriate level\n\n\n      this._insert(node, this.data.height - node.height - 1, true);\n    }\n\n    return this;\n  },\n  insert: function insert(item) {\n    if (item) this._insert(item, this.data.height - 1);\n    return this;\n  },\n  clear: function clear() {\n    this.data = createNode([]);\n    return this;\n  },\n  remove: function remove(item, equalsFn) {\n    if (!item) return this;\n    var node = this.data,\n        bbox = this.toBBox(item),\n        path = [],\n        indexes = [],\n        i,\n        parent,\n        index,\n        goingUp; // depth-first iterative tree traversal\n\n    while (node || path.length) {\n      if (!node) {\n        // go up\n        node = path.pop();\n        parent = path[path.length - 1];\n        i = indexes.pop();\n        goingUp = true;\n      }\n\n      if (node.leaf) {\n        // check current node\n        index = findItem(item, node.children, equalsFn);\n\n        if (index !== -1) {\n          // item found, remove the item and condense tree upwards\n          node.children.splice(index, 1);\n          path.push(node);\n\n          this._condense(path);\n\n          return this;\n        }\n      }\n\n      if (!goingUp && !node.leaf && contains(node, bbox)) {\n        // go down\n        path.push(node);\n        indexes.push(i);\n        i = 0;\n        parent = node;\n        node = node.children[0];\n      } else if (parent) {\n        // go right\n        i++;\n        node = parent.children[i];\n        goingUp = false;\n      } else node = null; // nothing found\n\n    }\n\n    return this;\n  },\n  toBBox: function toBBox(item) {\n    return item;\n  },\n  compareMinX: compareNodeMinX,\n  compareMinY: compareNodeMinY,\n  toJSON: function toJSON() {\n    return this.data;\n  },\n  fromJSON: function fromJSON(data) {\n    this.data = data;\n    return this;\n  },\n  _all: function _all(node, result) {\n    var nodesToSearch = [];\n\n    while (node) {\n      if (node.leaf) result.push.apply(result, node.children);else nodesToSearch.push.apply(nodesToSearch, node.children);\n      node = nodesToSearch.pop();\n    }\n\n    return result;\n  },\n  _build: function _build(items, left, right, height) {\n    var N = right - left + 1,\n        M = this._maxEntries,\n        node;\n\n    if (N <= M) {\n      // reached leaf level; return leaf\n      node = createNode(items.slice(left, right + 1));\n      calcBBox(node, this.toBBox);\n      return node;\n    }\n\n    if (!height) {\n      // target height of the bulk-loaded tree\n      height = Math.ceil(Math.log(N) / Math.log(M)); // target number of root entries to maximize storage utilization\n\n      M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height; // split the items into M mostly square tiles\n\n    var N2 = Math.ceil(N / M),\n        N1 = N2 * Math.ceil(Math.sqrt(M)),\n        i,\n        j,\n        right2,\n        right3;\n    multiSelect(items, left, right, N1, this.compareMinX);\n\n    for (i = left; i <= right; i += N1) {\n      right2 = Math.min(i + N1 - 1, right);\n      multiSelect(items, i, right2, N2, this.compareMinY);\n\n      for (j = i; j <= right2; j += N2) {\n        right3 = Math.min(j + N2 - 1, right2); // pack each entry recursively\n\n        node.children.push(this._build(items, j, right3, height - 1));\n      }\n    }\n\n    calcBBox(node, this.toBBox);\n    return node;\n  },\n  _chooseSubtree: function _chooseSubtree(bbox, node, level, path) {\n    var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n    while (true) {\n      path.push(node);\n      if (node.leaf || path.length - 1 === level) break;\n      minArea = minEnlargement = Infinity;\n\n      for (i = 0, len = node.children.length; i < len; i++) {\n        child = node.children[i];\n        area = bboxArea(child);\n        enlargement = enlargedArea(bbox, child) - area; // choose entry with the least area enlargement\n\n        if (enlargement < minEnlargement) {\n          minEnlargement = enlargement;\n          minArea = area < minArea ? area : minArea;\n          targetNode = child;\n        } else if (enlargement === minEnlargement) {\n          // otherwise choose one with the smallest area\n          if (area < minArea) {\n            minArea = area;\n            targetNode = child;\n          }\n        }\n      }\n\n      node = targetNode || node.children[0];\n    }\n\n    return node;\n  },\n  _insert: function _insert(item, level, isNode) {\n    var toBBox = this.toBBox,\n        bbox = isNode ? item : toBBox(item),\n        insertPath = []; // find the best node for accommodating the item, saving all nodes along the path too\n\n    var node = this._chooseSubtree(bbox, this.data, level, insertPath); // put the item into the node\n\n\n    node.children.push(item);\n    extend(node, bbox); // split on node overflow; propagate upwards if necessary\n\n    while (level >= 0) {\n      if (insertPath[level].children.length > this._maxEntries) {\n        this._split(insertPath, level);\n\n        level--;\n      } else break;\n    } // adjust bboxes along the insertion path\n\n\n    this._adjustParentBBoxes(bbox, insertPath, level);\n  },\n  // split overflowed node into two\n  _split: function _split(insertPath, level) {\n    var node = insertPath[level],\n        M = node.children.length,\n        m = this._minEntries;\n\n    this._chooseSplitAxis(node, m, M);\n\n    var splitIndex = this._chooseSplitIndex(node, m, M);\n\n    var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n    if (level) insertPath[level - 1].children.push(newNode);else this._splitRoot(node, newNode);\n  },\n  _splitRoot: function _splitRoot(node, newNode) {\n    // split root node\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n  },\n  _chooseSplitIndex: function _chooseSplitIndex(node, m, M) {\n    var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n    minOverlap = minArea = Infinity;\n\n    for (i = m; i <= M - m; i++) {\n      bbox1 = distBBox(node, 0, i, this.toBBox);\n      bbox2 = distBBox(node, i, M, this.toBBox);\n      overlap = intersectionArea(bbox1, bbox2);\n      area = bboxArea(bbox1) + bboxArea(bbox2); // choose distribution with minimum overlap\n\n      if (overlap < minOverlap) {\n        minOverlap = overlap;\n        index = i;\n        minArea = area < minArea ? area : minArea;\n      } else if (overlap === minOverlap) {\n        // otherwise choose distribution with minimum area\n        if (area < minArea) {\n          minArea = area;\n          index = i;\n        }\n      }\n    }\n\n    return index;\n  },\n  // sorts node children by the best axis for split\n  _chooseSplitAxis: function _chooseSplitAxis(node, m, M) {\n    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n        compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n        xMargin = this._allDistMargin(node, m, M, compareMinX),\n        yMargin = this._allDistMargin(node, m, M, compareMinY); // if total distributions margin value is minimal for x, sort by minX,\n    // otherwise it's already sorted by minY\n\n\n    if (xMargin < yMargin) node.children.sort(compareMinX);\n  },\n  // total margin of all possible split distributions where each node is at least m full\n  _allDistMargin: function _allDistMargin(node, m, M, compare) {\n    node.children.sort(compare);\n    var toBBox = this.toBBox,\n        leftBBox = distBBox(node, 0, m, toBBox),\n        rightBBox = distBBox(node, M - m, M, toBBox),\n        margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n        i,\n        child;\n\n    for (i = m; i < M - m; i++) {\n      child = node.children[i];\n      extend(leftBBox, node.leaf ? toBBox(child) : child);\n      margin += bboxMargin(leftBBox);\n    }\n\n    for (i = M - m - 1; i >= m; i--) {\n      child = node.children[i];\n      extend(rightBBox, node.leaf ? toBBox(child) : child);\n      margin += bboxMargin(rightBBox);\n    }\n\n    return margin;\n  },\n  _adjustParentBBoxes: function _adjustParentBBoxes(bbox, path, level) {\n    // adjust bboxes along the given tree path\n    for (var i = level; i >= 0; i--) {\n      extend(path[i], bbox);\n    }\n  },\n  _condense: function _condense(path) {\n    // go through the path, removing empty nodes and updating bboxes\n    for (var i = path.length - 1, siblings; i >= 0; i--) {\n      if (path[i].children.length === 0) {\n        if (i > 0) {\n          siblings = path[i - 1].children;\n          siblings.splice(siblings.indexOf(path[i]), 1);\n        } else this.clear();\n      } else calcBBox(path[i], this.toBBox);\n    }\n  },\n  _initFormat: function _initFormat(format) {\n    // data format (minX, minY, maxX, maxY accessors)\n    // uses eval-type function compilation instead of just accepting a toBBox function\n    // because the algorithms are very sensitive to sorting functions performance,\n    // so they should be dead simple and without inner calls\n    var compareArr = ['return a', ' - b', ';'];\n    this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n    this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n    this.toBBox = new Function('a', 'return {minX: a' + format[0] + ', minY: a' + format[1] + ', maxX: a' + format[2] + ', maxY: a' + format[3] + '};');\n  }\n};\n\nfunction findItem(item, items, equalsFn) {\n  if (!equalsFn) return items.indexOf(item);\n\n  for (var i = 0; i < items.length; i++) {\n    if (equalsFn(item, items[i])) return i;\n  }\n\n  return -1;\n} // calculate node's bbox from bboxes of its children\n\n\nfunction calcBBox(node, toBBox) {\n  distBBox(node, 0, node.children.length, toBBox, node);\n} // min bounding rectangle of node children from k to p-1\n\n\nfunction distBBox(node, k, p, toBBox, destNode) {\n  if (!destNode) destNode = createNode(null);\n  destNode.minX = Infinity;\n  destNode.minY = Infinity;\n  destNode.maxX = -Infinity;\n  destNode.maxY = -Infinity;\n\n  for (var i = k, child; i < p; i++) {\n    child = node.children[i];\n    extend(destNode, node.leaf ? toBBox(child) : child);\n  }\n\n  return destNode;\n}\n\nfunction extend(a, b) {\n  a.minX = Math.min(a.minX, b.minX);\n  a.minY = Math.min(a.minY, b.minY);\n  a.maxX = Math.max(a.maxX, b.maxX);\n  a.maxY = Math.max(a.maxY, b.maxY);\n  return a;\n}\n\nfunction compareNodeMinX(a, b) {\n  return a.minX - b.minX;\n}\n\nfunction compareNodeMinY(a, b) {\n  return a.minY - b.minY;\n}\n\nfunction bboxArea(a) {\n  return (a.maxX - a.minX) * (a.maxY - a.minY);\n}\n\nfunction bboxMargin(a) {\n  return a.maxX - a.minX + (a.maxY - a.minY);\n}\n\nfunction enlargedArea(a, b) {\n  return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) * (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n  var minX = Math.max(a.minX, b.minX),\n      minY = Math.max(a.minY, b.minY),\n      maxX = Math.min(a.maxX, b.maxX),\n      maxY = Math.min(a.maxY, b.maxY);\n  return Math.max(0, maxX - minX) * Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n  return a.minX <= b.minX && a.minY <= b.minY && b.maxX <= a.maxX && b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n  return b.minX <= a.maxX && b.minY <= a.maxY && b.maxX >= a.minX && b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n  return {\n    children: children,\n    height: 1,\n    leaf: true,\n    minX: Infinity,\n    minY: Infinity,\n    maxX: -Infinity,\n    maxY: -Infinity\n  };\n} // sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\n\nfunction multiSelect(arr, left, right, n, compare) {\n  var stack = [left, right],\n      mid;\n\n  while (stack.length) {\n    right = stack.pop();\n    left = stack.pop();\n    if (right - left <= n) continue;\n    mid = left + Math.ceil((right - left) / n / 2) * n;\n    quickselect(arr, mid, left, right, compare);\n    stack.push(left, mid, mid, right);\n  }\n}","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\n\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n\n  return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\n\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n\n  return area;\n}","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\n\nexport var DEFAULT_TILE_SIZE = 256;","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\n\nexport var ENABLE_RASTER_REPROJECTION = true;","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\n\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\n\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\n\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\n\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}","/**\n * @module ol/interaction/Select\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { extend, includes } from '../array.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\nimport { TRUE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { clear } from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @enum {string}\n */\n\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\n\nvar SelectEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n    this.selected = selected;\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n    this.deselected = deselected;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n\n  if (Event) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create(Event && Event.prototype);\n  SelectEvent.prototype.constructor = SelectEvent;\n  return SelectEvent;\n}(Event);\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\n\n\nvar Select =\n/*@__PURE__*/\nfunction (Interaction) {\n  function Select(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : singleClick;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.multi_ = options.multi ? options.multi : false;\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n\n    this.filter_ = options.filter ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * @private\n     * @type {VectorLayer}\n     */\n\n    this.featureOverlay_ = featureOverlay;\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n\n    var layerFilter;\n\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n\n        layerFilter = function layerFilter(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n\n\n    this.layerFilter_ = layerFilter;\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n\n    this.featureLayerAssociation_ = {};\n    var features = this.getFeatures();\n    listen(features, CollectionEventType.ADD, this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE, this.removeFeature_, this);\n  }\n\n  if (Interaction) Select.__proto__ = Interaction;\n  Select.prototype = Object.create(Interaction && Interaction.prototype);\n  Select.prototype.constructor = Select;\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n\n\n  Select.prototype.getFeatures = function getFeatures() {\n    return (\n      /** @type {VectorSource} */\n      this.featureOverlay_.getSource().getFeaturesCollection()\n    );\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Select.prototype.getHitTolerance = function getHitTolerance() {\n    return this.hitTolerance_;\n  };\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {VectorLayer} Layer.\n   * @api\n   */\n\n\n  Select.prototype.getLayer = function getLayer(feature) {\n    return (\n      /** @type {VectorLayer} */\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  };\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n\n\n  Select.prototype.getOverlay = function getOverlay() {\n    return this.featureOverlay_;\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Select.prototype.setHitTolerance = function setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n\n\n  Select.prototype.setMap = function setMap(map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.getFeatures();\n\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Select.prototype.addFeature_ = function addFeature_(evt) {\n    var map = this.getMap();\n\n    if (map) {\n      map.skipFeature(\n      /** @type {import(\"../Feature.js\").default} */\n      evt.element);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Select.prototype.removeFeature_ = function removeFeature_(evt) {\n    var map = this.getMap();\n\n    if (map) {\n      map.unskipFeature(\n      /** @type {import(\"../Feature.js\").default} */\n      evt.element);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n\n\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n\n  return Select;\n}(Interaction);\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\n\n\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.getFeatures();\n  var deselected = [];\n  var selected = [];\n\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {boolean|undefined} Continue to iterate over the features.\n     */\n    function (feature, layer) {\n      if (this.filter_(feature, layer)) {\n        selected.push(feature);\n        this.addFeatureLayerAssociation_(feature, layer);\n        return !this.multi_;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {boolean|undefined} Continue to iterate over the features.\n     */\n    function (feature, layer) {\n      if (this.filter_(feature, layer)) {\n        if ((add || toggle) && !includes(features.getArray(), feature)) {\n          selected.push(feature);\n          this.addFeatureLayerAssociation_(feature, layer);\n        } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n          deselected.push(feature);\n          this.removeFeatureLayerAssociation_(feature);\n        }\n\n        return !this.multi_;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n\n    features.extend(selected);\n  }\n\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n  }\n\n  return pointerMove(mapBrowserEvent);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\n\n\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n  return function (feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n})), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n})), 'ArrowForward');\n\nexports.default = _default;","export { default } from './SvgIcon';","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _setStatic = _interopRequireDefault(require(\"./setStatic\"));\n\nvar setDisplayName = function setDisplayName(displayName) {\n  return (0, _setStatic.default)('displayName', displayName);\n};\n\nvar _default = setDisplayName;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _getDisplayName = _interopRequireDefault(require(\"./getDisplayName\"));\n\nvar wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {\n  return hocName + \"(\" + (0, _getDisplayName.default)(BaseComponent) + \")\";\n};\n\nvar _default = wrapDisplayName;\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? 'false' : 'true',\n    role: titleAccess ? 'img' : 'presentation',\n    ref: ref\n  }, other), children, titleAccess ? React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\n\nvar AssertionError =\n/*@__PURE__*/\nfunction (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path + '/doc/errors/#' + code + ' for details.';\n    Error.call(this, message);\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n\n    this.code = code;\n    /**\n     * @type {string}\n     */\n\n    this.name = 'AssertionError'; // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n\n    this.message = message;\n  }\n\n  if (Error) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create(Error && Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  return AssertionError;\n}(Error);\n\nexport default AssertionError;","/**\n * @module ol/style/Fill\n */\nimport { getUid } from '../util.js';\nimport { asString } from '../color.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\n\nvar Fill = function Fill(opt_options) {\n  var options = opt_options || {};\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n\n  this.color_ = options.color !== undefined ? options.color : null;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.checksum_ = undefined;\n};\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\n\n\nFill.prototype.clone = function clone() {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\n\n\nFill.prototype.getColor = function getColor() {\n  return this.color_;\n};\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\n\n\nFill.prototype.setColor = function setColor(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n/**\n * @return {string} The checksum.\n */\n\n\nFill.prototype.getChecksum = function getChecksum() {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(\n        /** @type {import(\"../color.js\").Color|string} */\n        color);\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\n\nvar LRUCache =\n/*@__PURE__*/\nfunction (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n    EventTarget.call(this);\n    /**\n     * @type {number}\n     */\n\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.count_ = 0;\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n\n    this.entries_ = {};\n    /**\n     * @private\n     * @type {?Entry}\n     */\n\n    this.oldest_ = null;\n    /**\n     * @private\n     * @type {?Entry}\n     */\n\n    this.newest_ = null;\n  }\n\n  if (EventTarget) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create(EventTarget && EventTarget.prototype);\n  LRUCache.prototype.constructor = LRUCache;\n  /**\n   * @return {boolean} Can expire cache.\n   */\n\n  LRUCache.prototype.canExpireCache = function canExpireCache() {\n    return this.getCount() > this.highWaterMark;\n  };\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  LRUCache.prototype.clear = function clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n\n\n  LRUCache.prototype.containsKey = function containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n\n\n  LRUCache.prototype.forEach = function forEach(f, opt_this) {\n    var entry = this.oldest_;\n\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n\n\n  LRUCache.prototype.get = function get(key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ =\n      /** @type {Entry} */\n      this.oldest_.newer;\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n\n\n  LRUCache.prototype.remove = function remove(key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n\n    if (entry === this.newest_) {\n      this.newest_ =\n      /** @type {Entry} */\n      entry.older;\n\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ =\n      /** @type {Entry} */\n      entry.newer;\n\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n  /**\n   * @return {number} Count.\n   */\n\n\n  LRUCache.prototype.getCount = function getCount() {\n    return this.count_;\n  };\n  /**\n   * @return {Array<string>} Keys.\n   */\n\n\n  LRUCache.prototype.getKeys = function getKeys() {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n\n    return keys;\n  };\n  /**\n   * @return {Array<T>} Values.\n   */\n\n\n  LRUCache.prototype.getValues = function getValues() {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n\n    return values;\n  };\n  /**\n   * @return {T} Last value.\n   */\n\n\n  LRUCache.prototype.peekLast = function peekLast() {\n    return this.oldest_.value_;\n  };\n  /**\n   * @return {string} Last key.\n   */\n\n\n  LRUCache.prototype.peekLastKey = function peekLastKey() {\n    return this.oldest_.key_;\n  };\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n\n\n  LRUCache.prototype.peekFirstKey = function peekFirstKey() {\n    return this.newest_.key_;\n  };\n  /**\n   * @return {T} value Value.\n   */\n\n\n  LRUCache.prototype.pop = function pop() {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n\n    this.oldest_ =\n    /** @type {Entry} */\n    entry.newer;\n\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n\n    --this.count_;\n    return entry.value_;\n  };\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n\n\n  LRUCache.prototype.replace = function replace(key, value) {\n    this.get(key); // update `newest_`\n\n    this.entries_[key].value_ = value;\n  };\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n\n\n  LRUCache.prototype.set = function set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n\n    var entry =\n    /** @type {Entry} */\n    {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    };\n\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n\n\n  LRUCache.prototype.setSize = function setSize(size) {\n    this.highWaterMark = size;\n  };\n  /**\n   * Prune the cache.\n   */\n\n\n  LRUCache.prototype.prune = function prune() {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget);\n\nexport default LRUCache;","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};","/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\n\nvar Observable =\n/*@__PURE__*/\nfunction (EventTarget) {\n  function Observable() {\n    EventTarget.call(this);\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.revision_ = 0;\n  }\n\n  if (EventTarget) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create(EventTarget && EventTarget.prototype);\n  Observable.prototype.constructor = Observable;\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n\n  Observable.prototype.changed = function changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n\n\n  Observable.prototype.getRevision = function getRevision() {\n    return this.revision_;\n  };\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n\n\n  Observable.prototype.on = function on(type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n\n      return keys;\n    } else {\n      return listen(this,\n      /** @type {string} */\n      type, listener);\n    }\n  };\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n\n\n  Observable.prototype.once = function once(type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n\n      return keys;\n    } else {\n      return listenOnce(this,\n      /** @type {string} */\n      type, listener);\n    }\n  };\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n\n\n  Observable.prototype.un = function un(type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n\n      return;\n    } else {\n      unlisten(this,\n      /** @type {string} */\n      type, listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget);\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\n\n\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(\n    /** @type {import(\"./events.js\").EventsKey} */\n    key);\n  }\n}\nexport default Observable;","/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\n\nvar Source =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function Source(options) {\n    BaseObject.call(this);\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n\n    this.projection_ = getProjection(options.projection);\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n\n    this.attributions_ = adaptAttributions(options.attributions);\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ? options.attributionsCollapsible : true;\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n\n    this.loading = false;\n    /**\n     * @private\n     * @type {SourceState}\n     */\n\n    this.state_ = options.state !== undefined ? options.state : SourceState.READY;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  if (BaseObject) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create(BaseObject && BaseObject.prototype);\n  Source.prototype.constructor = Source;\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n\n  Source.prototype.getAttributions = function getAttributions() {\n    return this.attributions_;\n  };\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n\n\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  };\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n\n\n  Source.prototype.getProjection = function getProjection() {\n    return this.projection_;\n  };\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n\n\n  Source.prototype.getResolutions = function getResolutions() {\n    return abstract();\n  };\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n\n\n  Source.prototype.getState = function getState() {\n    return this.state_;\n  };\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n\n\n  Source.prototype.getWrapX = function getWrapX() {\n    return this.wrapX_;\n  };\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n\n\n  Source.prototype.refresh = function refresh() {\n    this.changed();\n  };\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n\n\n  Source.prototype.setAttributions = function setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n\n\n  Source.prototype.setState = function setState(state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject);\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\n\n\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\n\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\n\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) + Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) * Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\n\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n\n  return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\n\n\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      {\n        break;\n      }\n\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING:\n      {\n        coordinates =\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        geometry.getCoordinates();\n        length = getLengthInternal(coordinates, radius);\n        break;\n      }\n\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON:\n      {\n        coordinates =\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        geometry.getCoordinates();\n\n        for (i = 0, ii = coordinates.length; i < ii; ++i) {\n          length += getLengthInternal(coordinates[i], radius);\n        }\n\n        break;\n      }\n\n    case GeometryType.MULTI_POLYGON:\n      {\n        coordinates =\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        geometry.getCoordinates();\n\n        for (i = 0, ii = coordinates.length; i < ii; ++i) {\n          coords = coordinates[i];\n\n          for (j = 0, jj = coords.length; j < jj; ++j) {\n            length += getLengthInternal(coords[j], radius);\n          }\n        }\n\n        break;\n      }\n\n    case GeometryType.GEOMETRY_COLLECTION:\n      {\n        var geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */\n        geometry.getGeometries();\n\n        for (i = 0, ii = geometries.length; i < ii; ++i) {\n          length += getLength(geometries[i], opt_options);\n        }\n\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unsupported geometry type: ' + type);\n      }\n  }\n\n  return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\n\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) * (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\n\n\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING:\n      {\n        break;\n      }\n\n    case GeometryType.POLYGON:\n      {\n        coordinates =\n        /** @type {import(\"./geom/Polygon.js\").default} */\n        geometry.getCoordinates();\n        area = Math.abs(getAreaInternal(coordinates[0], radius));\n\n        for (i = 1, ii = coordinates.length; i < ii; ++i) {\n          area -= Math.abs(getAreaInternal(coordinates[i], radius));\n        }\n\n        break;\n      }\n\n    case GeometryType.MULTI_POLYGON:\n      {\n        coordinates =\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        geometry.getCoordinates();\n\n        for (i = 0, ii = coordinates.length; i < ii; ++i) {\n          coords = coordinates[i];\n          area += Math.abs(getAreaInternal(coords[0], radius));\n\n          for (j = 1, jj = coords.length; j < jj; ++j) {\n            area -= Math.abs(getAreaInternal(coords[j], radius));\n          }\n        }\n\n        break;\n      }\n\n    case GeometryType.GEOMETRY_COLLECTION:\n      {\n        var geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */\n        geometry.getGeometries();\n\n        for (i = 0, ii = geometries.length; i < ii; ++i) {\n          area += getArea(geometries[i], opt_options);\n        }\n\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unsupported geometry type: ' + type);\n      }\n  }\n\n  return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\n\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) + Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}","/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\n\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\n\nvar Geometry =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function Geometry() {\n    BaseObject.call(this);\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n\n    this.extent_ = createEmpty();\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.extentRevision_ = -1;\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n\n    this.simplifiedGeometryCache = {};\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.simplifiedGeometryRevision = 0;\n  }\n\n  if (BaseObject) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create(BaseObject && BaseObject.prototype);\n  Geometry.prototype.constructor = Geometry;\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n\n  Geometry.prototype.clone = function clone() {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n\n\n  Geometry.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n\n\n  Geometry.prototype.containsXY = function containsXY(x, y) {\n    return false;\n  };\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n\n\n  Geometry.prototype.getClosestPoint = function getClosestPoint(point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n\n\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n\n\n  Geometry.prototype.computeExtent = function computeExtent(extent) {\n    return abstract();\n  };\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n\n\n  Geometry.prototype.getExtent = function getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n\n\n  Geometry.prototype.rotate = function rotate(angle, anchor) {\n    abstract();\n  };\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n\n\n  Geometry.prototype.scale = function scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n\n\n  Geometry.prototype.simplify = function simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n\n\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  };\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n\n\n  Geometry.prototype.getType = function getType() {\n    return abstract();\n  };\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n\n\n  Geometry.prototype.applyTransform = function applyTransform(transformFn) {\n    abstract();\n  };\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n\n\n  Geometry.prototype.intersectsExtent = function intersectsExtent(extent) {\n    return abstract();\n  };\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n\n\n  Geometry.prototype.translate = function translate(deltaX, deltaY) {\n    abstract();\n  };\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n\n\n  Geometry.prototype.transform = function transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ? function (inCoordinates, outCoordinates, stride) {\n      var pixelExtent = sourceProj.getExtent();\n      var projectedExtent = sourceProj.getWorldExtent();\n      var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n      return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n    } : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject);\n\nexport default Geometry;","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n\n    if (ret) {\n      return ret;\n    }\n\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n\n  return false;\n}","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\n\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n\n  var intersections = []; // Calculate intersections with the horizontal line\n\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n\n      if (y <= y1 && y2 <= y || y1 <= y && y <= y2) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n\n      x1 = x2;\n      y1 = y2;\n    }\n  } // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n\n\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n\n    x1 = x2;\n  }\n\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n\n  return interiorPoints;\n}","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\n\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\n\nvar VectorLayer =\n/*@__PURE__*/\nfunction (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ? opt_options :\n    /** @type {Options} */\n    {};\n    var baseOptions = assign({}, options);\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n    /**\n    * @private\n    * @type {boolean}\n    */\n\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n    /**\n    * @type {number}\n    * @private\n    */\n\n    this.renderBuffer_ = options.renderBuffer !== undefined ? options.renderBuffer : 100;\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n\n    this.style_ = null;\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n\n    this.styleFunction_ = undefined;\n    this.setStyle(options.style);\n    /**\n    * @type {boolean}\n    * @private\n    */\n\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ? options.updateWhileAnimating : false;\n    /**\n    * @type {boolean}\n    * @private\n    */\n\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ? options.updateWhileInteracting : false;\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n\n    this.type = LayerType.VECTOR;\n  }\n\n  if (Layer) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create(Layer && Layer.prototype);\n  VectorLayer.prototype.constructor = VectorLayer;\n  /**\n  * @return {boolean} Declutter.\n  */\n\n  VectorLayer.prototype.getDeclutter = function getDeclutter() {\n    return this.declutter_;\n  };\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n\n\n  VectorLayer.prototype.setDeclutter = function setDeclutter(declutter) {\n    this.declutter_ = declutter;\n  };\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n\n\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer() {\n    return this.renderBuffer_;\n  };\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n\n\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder() {\n    return (\n      /** @type {import(\"../render.js\").OrderFunction|null|undefined} */\n      this.get(Property.RENDER_ORDER)\n    );\n  };\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n\n\n  VectorLayer.prototype.getStyle = function getStyle() {\n    return this.style_;\n  };\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n\n\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction() {\n    return this.styleFunction_;\n  };\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n\n\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  };\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n\n\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  };\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n\n\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n\n\n  VectorLayer.prototype.setStyle = function setStyle(style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n\n\n  VectorLayer.prototype.getRenderMode = function getRenderMode() {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer);\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\n\n\nVectorLayer.prototype.getSource;\nexport default VectorLayer;","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};","/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\n\nvar BaseLayer =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function BaseLayer(options) {\n    BaseObject.call(this);\n    /**\n     * @type {Object<string, *>}\n     */\n\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] = options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] = options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] = options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] = options.minResolution !== undefined ? options.minResolution : 0;\n    this.setProperties(properties);\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n\n    this.state_ = null;\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n\n    this.type;\n  }\n\n  if (BaseObject) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create(BaseObject && BaseObject.prototype);\n  BaseLayer.prototype.constructor = BaseLayer;\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n\n  BaseLayer.prototype.getType = function getType() {\n    return this.type;\n  };\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n\n\n  BaseLayer.prototype.getLayerState = function getLayerState() {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ ||\n    /** @type {?} */\n    {\n      layer: this,\n      managed: true\n    };\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n    return state;\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n\n\n  BaseLayer.prototype.getLayersArray = function getLayersArray(opt_array) {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n\n\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray(opt_states) {\n    return abstract();\n  };\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getExtent = function getExtent() {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */\n      this.get(LayerProperty.EXTENT)\n    );\n  };\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution() {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.MAX_RESOLUTION)\n    );\n  };\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMinResolution = function getMinResolution() {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.MIN_RESOLUTION)\n    );\n  };\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getOpacity = function getOpacity() {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.OPACITY)\n    );\n  };\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n\n\n  BaseLayer.prototype.getSourceState = function getSourceState() {\n    return abstract();\n  };\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getVisible = function getVisible() {\n    return (\n      /** @type {boolean} */\n      this.get(LayerProperty.VISIBLE)\n    );\n  };\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getZIndex = function getZIndex() {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.Z_INDEX)\n    );\n  };\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setExtent = function setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMinResolution = function setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setOpacity = function setOpacity(opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setVisible = function setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setZIndex = function setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject);\n\nexport default BaseLayer;","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n  /**\n   * @type {number}\n   */\n\n  this.maxX = maxX;\n  /**\n   * @type {number}\n   */\n\n  this.minY = minY;\n  /**\n   * @type {number}\n   */\n\n  this.maxY = maxY;\n};\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\n\n\nTileRange.prototype.contains = function contains(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\n\n\nTileRange.prototype.containsTileRange = function containsTileRange(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX && this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\n\n\nTileRange.prototype.containsXY = function containsXY(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\n\n\nTileRange.prototype.equals = function equals(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY && this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n/**\n * @param {TileRange} tileRange Tile range.\n */\n\n\nTileRange.prototype.extend = function extend(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n/**\n * @return {number} Height.\n */\n\n\nTileRange.prototype.getHeight = function getHeight() {\n  return this.maxY - this.minY + 1;\n};\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\n\n\nTileRange.prototype.getSize = function getSize() {\n  return [this.getWidth(), this.getHeight()];\n};\n/**\n * @return {number} Width.\n */\n\n\nTileRange.prototype.getWidth = function getWidth() {\n  return this.maxX - this.minX + 1;\n};\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\n\n\nTileRange.prototype.intersects = function intersects(tileRange) {\n  return this.minX <= tileRange.maxX && this.maxX >= tileRange.minX && this.minY <= tileRange.maxY && this.maxY >= tileRange.minY;\n};\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\n\n\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\nexport default TileRange;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\n\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n\n\n      xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n\n          var source;\n\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source =\n            /** @type {ArrayBuffer} */\n            xhr.response;\n          }\n\n          if (source) {\n            success.call(this, format.readFeatures(source, {\n              featureProjection: projection\n            }), format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n\n\n      xhr.onerror = function () {\n        failure.call(this);\n      }.bind(this);\n\n      xhr.send();\n    }\n  );\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\n\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n  /**\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n   * projection.\n   * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n   */\n  function (features, dataProjection) {\n    var sourceOrTile =\n    /** @type {?} */\n    this;\n\n    if (typeof sourceOrTile.addFeatures === 'function') {\n      /** @type {import(\"./source/Vector\").default} */\n      sourceOrTile.addFeatures(features);\n    }\n  },\n  /* FIXME handle error */\n  VOID);\n}","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\n\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\n\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n\n      var tileCoord = [z, 0, 0];\n\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n\n      return extents;\n    }\n  );\n}","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\n\nvar RBush = function RBush(opt_maxEntries) {\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n\n  this.items_ = {};\n};\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\n\n\nRBush.prototype.insert = function insert(extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\n\n\nRBush.prototype.load = function load(extents, values) {\n  var items = new Array(values.length);\n\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n    /** @type {Entry} */\n\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n\n  this.rbush_.load(items);\n};\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\n\n\nRBush.prototype.remove = function remove(value) {\n  var uid = getUid(value); // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\n\n\nRBush.prototype.update = function update(extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\n\n\nRBush.prototype.getAll = function getAll() {\n  var items = this.rbush_.all();\n  return items.map(function (item) {\n    return item.value;\n  });\n};\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\n\n\nRBush.prototype.getInExtent = function getInExtent(extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function (item) {\n    return item.value;\n  });\n};\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\n\n\nRBush.prototype.forEach = function forEach(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\n\n\nRBush.prototype.forEachInExtent = function forEachInExtent(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\n\n\nRBush.prototype.forEach_ = function forEach_(values, callback, opt_this) {\n  var result;\n\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n\n    if (result) {\n      return result;\n    }\n  }\n\n  return result;\n};\n/**\n * @return {boolean} Is empty.\n */\n\n\nRBush.prototype.isEmpty = function isEmpty$1() {\n  return isEmpty(this.items_);\n};\n/**\n * Remove all values from the RBush.\n */\n\n\nRBush.prototype.clear = function clear() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\n\n\nRBush.prototype.getExtent = function getExtent(opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n/**\n * @param {RBush} rbush R-Tree.\n */\n\n\nRBush.prototype.concat = function concat(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\nexport default RBush;","/**\n * @module ol/source/Vector\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\n\nexport var VectorSourceEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n    Event.call(this, type);\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n\n    this.feature = opt_feature;\n  }\n\n  if (Event) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create(Event && Event.prototype);\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n  return VectorSourceEvent;\n}(Event);\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\n\nvar VectorSource =\n/*@__PURE__*/\nfunction (Source) {\n  function VectorSource(opt_options) {\n    var options = opt_options || {};\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n\n    this.loader_ = VOID;\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n\n    this.format_ = options.format;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n\n      this.loader_ = xhr(this.url_,\n      /** @type {import(\"../format/Feature.js\").default} */\n      this.format_);\n    }\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n\n\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n    var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n\n    this.loadedExtentsRtree_ = new RBush();\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n\n    this.nullGeometryFeatures_ = {};\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n\n    this.idIndex_ = {};\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n\n    this.undefIdIndex_ = {};\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n\n    this.featureChangeKeys_ = {};\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n\n    this.featuresCollection_ = null;\n    var collection, features;\n\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  if (Source) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create(Source && Source.prototype);\n  VectorSource.prototype.constructor = VectorSource;\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n\n  VectorSource.prototype.addFeature = function addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n\n\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal(feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n    var geometry = feature.getGeometry();\n\n    if (geometry) {\n      var extent = geometry.getExtent();\n\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n\n\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [listen(feature, EventType.CHANGE, this.handleFeatureChange_, this), listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)];\n  };\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n\n\n  VectorSource.prototype.addToIndex_ = function addToIndex_(featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n\n      this.undefIdIndex_[featureKey] = feature;\n    }\n\n    return valid;\n  };\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n\n\n  VectorSource.prototype.addFeatures = function addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n\n\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal(features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n      var geometry = feature$1.getGeometry();\n\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n\n\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_(collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n    /**\n     * @param {VectorSourceEvent} evt The vector source event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n    listen(this, VectorEventType.REMOVEFEATURE,\n    /**\n     * @param {VectorSourceEvent} evt The vector source event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n    listen(collection, CollectionEventType.ADD,\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(\n        /** @type {import(\"../Feature.js\").default} */\n        evt.element);\n        modifyingCollection = false;\n      }\n    }, this);\n    listen(collection, CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(\n        /** @type {import(\"../Feature.js\").default} */\n        evt.element);\n        modifyingCollection = false;\n      }\n    }, this);\n    this.featuresCollection_ = collection;\n  };\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n\n\n  VectorSource.prototype.clear = function clear(opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeature = function forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n\n\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      var geometry = feature.getGeometry();\n\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     */\n    function (feature) {\n      var geometry = feature.getGeometry();\n\n      if (geometry.intersectsExtent(extent)) {\n        var result = callback(feature);\n\n        if (result) {\n          return result;\n        }\n      }\n    });\n  };\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection() {\n    return this.featuresCollection_;\n  };\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeatures = function getFeatures() {\n    var features;\n\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      features\n    );\n  };\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate(coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent(extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n\n\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    function (feature) {\n      if (filter(feature)) {\n        var geometry = feature.getGeometry();\n        var previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature; // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n\n          var minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n    return closestFeature;\n  };\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n\n\n  VectorSource.prototype.getExtent = function getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeatureById = function getFeatureById(id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFormat = function getFormat() {\n    return this.format_;\n  };\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n\n\n  VectorSource.prototype.getOverlaps = function getOverlaps() {\n    return this.overlaps_;\n  };\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n\n\n  VectorSource.prototype.getUrl = function getUrl() {\n    return this.url_;\n  };\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n\n\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_(event) {\n    var feature =\n    /** @type {import(\"../Feature.js\").default} */\n    event.target;\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      var sid = id.toString();\n\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n  };\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n\n\n  VectorSource.prototype.hasFeature = function hasFeature(feature) {\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n  /**\n   * @return {boolean} Is empty.\n   */\n\n\n  VectorSource.prototype.isEmpty = function isEmpty$1() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n\n\n  VectorSource.prototype.loadFeatures = function loadFeatures(extent, resolution, projection) {\n    var this$1 = this;\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n\n    var loop = function loop(i, ii) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function (object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {\n          extent: extentToLoad.slice()\n        });\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      loop(i, ii);\n    }\n  };\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n\n\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent(extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n\n\n  VectorSource.prototype.removeFeature = function removeFeature(feature) {\n    var featureKey = getUid(feature);\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n\n\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal(feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n  };\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n\n\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_(feature) {\n    var removed = false;\n\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n\n    return removed;\n  };\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n\n\n  VectorSource.prototype.setLoader = function setLoader(loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source);\n\nexport default VectorSource;","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\n\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center) {\n      if (center) {\n        return [clamp(center[0], extent[0], extent[2]), clamp(center[1], extent[1], extent[3])];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\n\nexport function none(center) {\n  return center;\n}","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};","/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\n\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\n\nvar View =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n    var options = assign({}, opt_options);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.hints_ = [0, 0];\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n\n    this.animations_ = [];\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.updateAnimationKey_;\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n    this.applyOptions_(options);\n  }\n\n  if (BaseObject) View.__proto__ = BaseObject;\n  View.prototype = Object.create(BaseObject && BaseObject.prototype);\n  View.prototype.constructor = View;\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n\n  View.prototype.applyOptions_ = function applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ? options.center : null;\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n\n    this.resolutions_ = options.resolutions;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n    /**\n     * @private\n     * @type {Constraints}\n     */\n\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) {\n        // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(Number(this.getResolution() || properties[ViewProperty.RESOLUTION]), this.minResolution_, this.maxResolution_);\n      }\n    }\n\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n\n    this.options_ = options;\n  };\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n\n\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_(newOptions) {\n    var options = assign({}, this.options_); // preserve resolution (or zoom)\n\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    } // preserve center\n\n\n    options.center = this.getCenter(); // preserve rotation\n\n    options.rotation = this.getRotation();\n    return assign({}, options, newOptions);\n  };\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n\n\n  View.prototype.animate = function animate(var_args) {\n    var arguments$1 = arguments;\n    var animationCount = arguments.length;\n    var callback;\n\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n\n      if (callback) {\n        animationCallback(callback, true);\n      }\n\n      return;\n    }\n\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n\n    for (var i = 0; i < animationCount; ++i) {\n      var options =\n      /** @type {AnimationOptions} */\n      arguments$1[i];\n      var animation =\n      /** @type {Animation} */\n      {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback; // check if animation is a no-op\n\n      if (isNoopAnimation(animation)) {\n        animation.complete = true; // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n\n      series.push(animation);\n    }\n\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n\n\n  View.prototype.getAnimating = function getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n\n\n  View.prototype.getInteracting = function getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n\n\n  View.prototype.cancelAnimations = function cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n\n    this.animations_.length = 0;\n  };\n  /**\n   * Update all animations.\n   */\n\n\n  View.prototype.updateAnimations_ = function updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n\n    if (!this.getAnimating()) {\n      return;\n    }\n\n    var now = Date.now();\n    var more = false;\n\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n\n        if (animation.complete) {\n          continue;\n        }\n\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n\n        var progress = animation.easing(fraction);\n\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ? animation.targetResolution : animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER, this.calculateCenterZoom(resolution, animation.anchor));\n          }\n\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI : animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER, this.calculateCenterRotate(rotation, animation.anchor));\n          }\n\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n\n        more = true;\n\n        if (!animation.complete) {\n          break;\n        }\n      }\n\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    } // prune completed series\n\n\n    this.animations_ = this.animations_.filter(Boolean);\n\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n\n\n  View.prototype.calculateCenterRotate = function calculateCenterRotate(rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n\n    return center;\n  };\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n\n\n  View.prototype.calculateCenterZoom = function calculateCenterZoom(resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n\n    return center;\n  };\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n\n\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_() {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n\n    return size;\n  };\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n\n\n  View.prototype.constrainCenter = function constrainCenter(center) {\n    return this.constraints_.center(center);\n  };\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n\n\n  View.prototype.constrainResolution = function constrainResolution(resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n\n\n  View.prototype.constrainRotation = function constrainRotation(rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n\n\n  View.prototype.getCenter = function getCenter() {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */\n      this.get(ViewProperty.CENTER)\n    );\n  };\n  /**\n   * @return {Constraints} Constraints.\n   */\n\n\n  View.prototype.getConstraints = function getConstraints() {\n    return this.constraints_;\n  };\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n\n\n  View.prototype.getHints = function getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n\n\n  View.prototype.calculateExtent = function calculateExtent(opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center =\n    /** @type {!import(\"./coordinate.js\").Coordinate} */\n    this.getCenter();\n    assert(center, 1); // The view center is not defined\n\n    var resolution =\n    /** @type {!number} */\n    this.getResolution();\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n\n    var rotation =\n    /** @type {!number} */\n    this.getRotation();\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n\n\n  View.prototype.getMaxResolution = function getMaxResolution() {\n    return this.maxResolution_;\n  };\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n\n\n  View.prototype.getMinResolution = function getMinResolution() {\n    return this.minResolution_;\n  };\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n\n\n  View.prototype.getMaxZoom = function getMaxZoom() {\n    return (\n      /** @type {number} */\n      this.getZoomForResolution(this.minResolution_)\n    );\n  };\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n\n\n  View.prototype.setMaxZoom = function setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({\n      maxZoom: zoom\n    }));\n  };\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n\n\n  View.prototype.getMinZoom = function getMinZoom() {\n    return (\n      /** @type {number} */\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  };\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n\n\n  View.prototype.setMinZoom = function setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({\n      minZoom: zoom\n    }));\n  };\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n\n\n  View.prototype.getProjection = function getProjection() {\n    return this.projection_;\n  };\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n\n\n  View.prototype.getResolution = function getResolution() {\n    return (\n      /** @type {number|undefined} */\n      this.get(ViewProperty.RESOLUTION)\n    );\n  };\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n\n\n  View.prototype.getResolutions = function getResolutions() {\n    return this.resolutions_;\n  };\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n\n\n  View.prototype.getResolutionForExtent = function getResolutionForExtent(extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n\n\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction(opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  };\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n\n\n  View.prototype.getRotation = function getRotation() {\n    return (\n      /** @type {number} */\n      this.get(ViewProperty.ROTATION)\n    );\n  };\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n\n\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction(opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        var value = Math.log(maxResolution / resolution) / Math.log(power) / max;\n        return value;\n      }\n    );\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n\n\n  View.prototype.getState = function getState(pixelRatio) {\n    var center =\n    /** @type {import(\"./coordinate.js\").Coordinate} */\n    this.getCenter();\n    var projection = this.getProjection();\n    var resolution =\n    /** @type {number} */\n    this.getResolution();\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */\n      {\n        center: [Math.round(center[0] / pixelResolution) * pixelResolution, Math.round(center[1] / pixelResolution) * pixelResolution],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      }\n    );\n  };\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n\n\n  View.prototype.getZoom = function getZoom() {\n    var zoom;\n    var resolution = this.getResolution();\n\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n\n    return zoom;\n  };\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n\n\n  View.prototype.getZoomForResolution = function getZoomForResolution(resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n\n\n  View.prototype.getResolutionForZoom = function getResolutionForZoom(zoom) {\n    return (\n      /** @type {number} */\n      this.constrainResolution(this.maxResolution_, zoom - this.minZoom_, 0)\n    );\n  };\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n\n\n  View.prototype.fit = function fit(geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n\n\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof\n    /** @type {?} */\n    geometryOrExtent.getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ? options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n\n    var coords = geometry.getFlatCoordinates(); // calculate rotated extent\n\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    } // calculate resolution\n\n\n    var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution : Math.max(resolution, minResolution);\n\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(constrainedResolution, -1, 0);\n      }\n\n      resolution = constrainedResolution;\n    } // calculate center\n\n\n    sinAngle = -sinAngle; // go back to original rotation\n\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n\n\n  View.prototype.centerOn = function centerOn(coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution; // go back to original angle\n\n    sinAngle = -sinAngle; // go back to original rotation\n\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    this.setCenter([centerX, centerY]);\n  };\n  /**\n   * @return {boolean} Is defined.\n   */\n\n\n  View.prototype.isDef = function isDef() {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n\n\n  View.prototype.rotate = function rotate(rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n\n    this.setRotation(rotation);\n  };\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n\n\n  View.prototype.setCenter = function setCenter(center) {\n    this.set(ViewProperty.CENTER, center);\n\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n\n\n  View.prototype.setHint = function setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n\n\n  View.prototype.setResolution = function setResolution(resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n\n\n  View.prototype.setRotation = function setRotation(rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n\n\n  View.prototype.setZoom = function setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject);\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\n\n\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\n\n\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\n\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution; // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n  var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n  var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n  var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ? resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ? // use an extent that can fit the whole world if need be\n    360 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit() : Math.max(getWidth(extent), getHeight(extent));\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n    var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM); // user provided maxResolution takes precedence\n\n    maxResolution = options.maxResolution;\n\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    } // user provided minResolution takes precedence\n\n\n    minResolution = options.minResolution;\n\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    } // given discrete zoom levels, minResolution may be different than provided\n\n\n    maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n    resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor\n  };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\n\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\n\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n\n  return true;\n}\nexport default View;","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { clamp } from './math.js';\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\n\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\n\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}","/**\n * @module ol/style/Circle\n */\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\n\nvar CircleStyle =\n/*@__PURE__*/\nfunction (RegularShape) {\n  function CircleStyle(opt_options) {\n    var options = opt_options ||\n    /** @type {Options} */\n    {};\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n  }\n\n  if (RegularShape) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create(RegularShape && RegularShape.prototype);\n  CircleStyle.prototype.constructor = CircleStyle;\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n\n  CircleStyle.prototype.clone = function clone() {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n\n\n  CircleStyle.prototype.setRadius = function setRadius(radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape);\n\nexport default CircleStyle;","/**\n * @module ol/style/RegularShape\n */\nimport { asString } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { CANVAS_LINE_DASH } from '../has.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\n\nvar RegularShape =\n/*@__PURE__*/\nfunction (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n\n    this.checksums_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    this.canvas_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    this.hitDetectionCanvas_ = null;\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.origin_ = [0, 0];\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.points_ = options.points;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.radius_ =\n    /** @type {number} */\n    options.radius !== undefined ? options.radius : options.radius1;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.radius2_ = options.radius2;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.anchor_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    this.size_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    this.imageSize_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    this.hitDetectionImageSize_ = null;\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n\n    this.atlasManager_ = options.atlasManager;\n    this.render_(this.atlasManager_);\n  }\n\n  if (ImageStyle) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create(ImageStyle && ImageStyle.prototype);\n  RegularShape.prototype.constructor = RegularShape;\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n\n  RegularShape.prototype.clone = function clone() {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  RegularShape.prototype.getAnchor = function getAnchor() {\n    return this.anchor_;\n  };\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n\n\n  RegularShape.prototype.getAngle = function getAngle() {\n    return this.angle_;\n  };\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n\n\n  RegularShape.prototype.getFill = function getFill() {\n    return this.fill_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage(pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  RegularShape.prototype.getImage = function getImage(pixelRatio) {\n    return this.canvas_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  RegularShape.prototype.getImageSize = function getImageSize() {\n    return this.imageSize_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  RegularShape.prototype.getImageState = function getImageState() {\n    return ImageState.LOADED;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  RegularShape.prototype.getOrigin = function getOrigin() {\n    return this.origin_;\n  };\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n\n\n  RegularShape.prototype.getPoints = function getPoints() {\n    return this.points_;\n  };\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n\n\n  RegularShape.prototype.getRadius = function getRadius() {\n    return this.radius_;\n  };\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n\n\n  RegularShape.prototype.getRadius2 = function getRadius2() {\n    return this.radius2_;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  RegularShape.prototype.getSize = function getSize() {\n    return this.size_;\n  };\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n\n\n  RegularShape.prototype.getStroke = function getStroke() {\n    return this.stroke_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  RegularShape.prototype.listenImageChange = function listenImageChange(listener, thisArg) {\n    return undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  RegularShape.prototype.load = function load() {};\n  /**\n   * @inheritDoc\n   */\n\n\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange(listener, thisArg) {};\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n\n\n  RegularShape.prototype.render_ = function render_(atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n\n      lineJoin = this.stroke_.getLineJoin();\n\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n\n      lineCap = this.stroke_.getLineCap();\n\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n\n      miterLimit = this.stroke_.getMiterLimit();\n\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n    /** @type {RenderOptions} */\n\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas; // canvas.width and height are rounded to the closest integer\n\n      size = this.canvas_.width;\n      imageSize = size;\n      this.draw_(renderOptions, context, 0, 0);\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback = this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(id, size, size, this.draw_.bind(this, renderOptions), renderHitDetectionCallback);\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ = [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n\n\n  RegularShape.prototype.draw_ = function draw_(renderOptions, context, x, y) {\n    var i, angle0, radiusC; // reset transform\n\n    context.setTransform(1, 0, 0, 1, 0, 0); // then move to (x, y)\n\n    context.translate(x, y);\n    context.beginPath();\n    var points = this.points_;\n\n    if (points === Infinity) {\n      context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n\n      context.lineCap =\n      /** @type {CanvasLineCap} */\n      renderOptions.lineCap;\n      context.lineJoin =\n      /** @type {CanvasLineJoin} */\n      renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n\n    context.closePath();\n  };\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n\n\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    } // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n\n\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n\n\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0); // then move to (x, y)\n\n    context.translate(x, y);\n    context.beginPath();\n    var points = this.points_;\n\n    if (points === Infinity) {\n      context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n\n      var i, radiusC, angle0;\n\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n\n      context.stroke();\n    }\n\n    context.closePath();\n  };\n  /**\n   * @return {string} The checksum.\n   */\n\n\n  RegularShape.prototype.getChecksum = function getChecksum() {\n    var strokeChecksum = this.stroke_ ? this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ? this.fill_.getChecksum() : '-';\n    var recalculate = !this.checksums_ || strokeChecksum != this.checksums_[1] || fillChecksum != this.checksums_[2] || this.radius_ != this.checksums_[3] || this.radius2_ != this.checksums_[4] || this.angle_ != this.checksums_[5] || this.points_ != this.checksums_[6];\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum + (this.radius_ !== undefined ? this.radius_.toString() : '-') + (this.radius2_ !== undefined ? this.radius2_.toString() : '-') + (this.angle_ !== undefined ? this.angle_.toString() : '-') + (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum, this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return (\n      /** @type {string} */\n      this.checksums_[0]\n    );\n  };\n\n  return RegularShape;\n}(ImageStyle);\n\nexport default RegularShape;","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\n\nvar Style = function Style(opt_options) {\n  var options = opt_options || {};\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n\n  this.geometry_ = null;\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n\n\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n\n  this.image_ = options.image !== undefined ? options.image : null;\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n\n  this.text_ = options.text !== undefined ? options.text : null;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.zIndex_ = options.zIndex;\n};\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\n\n\nStyle.prototype.clone = function clone() {\n  var geometry = this.getGeometry();\n\n  if (geometry && typeof geometry === 'object') {\n    geometry =\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    geometry.clone();\n  }\n\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\n\n\nStyle.prototype.getRenderer = function getRenderer() {\n  return this.renderer_;\n};\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\n\n\nStyle.prototype.setRenderer = function setRenderer(renderer) {\n  this.renderer_ = renderer;\n};\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\n\n\nStyle.prototype.getGeometry = function getGeometry() {\n  return this.geometry_;\n};\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\n\n\nStyle.prototype.getGeometryFunction = function getGeometryFunction() {\n  return this.geometryFunction_;\n};\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\n\n\nStyle.prototype.getFill = function getFill() {\n  return this.fill_;\n};\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\n\n\nStyle.prototype.setFill = function setFill(fill) {\n  this.fill_ = fill;\n};\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\n\n\nStyle.prototype.getImage = function getImage() {\n  return this.image_;\n};\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\n\n\nStyle.prototype.setImage = function setImage(image) {\n  this.image_ = image;\n};\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\n\n\nStyle.prototype.getStroke = function getStroke() {\n  return this.stroke_;\n};\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\n\n\nStyle.prototype.setStroke = function setStroke(stroke) {\n  this.stroke_ = stroke;\n};\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\n\n\nStyle.prototype.getText = function getText() {\n  return this.text_;\n};\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\n\n\nStyle.prototype.setText = function setText(text) {\n  this.text_ = text;\n};\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\n\n\nStyle.prototype.getZIndex = function getZIndex() {\n  return this.zIndex_;\n};\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\n\n\nStyle.prototype.setGeometry = function setGeometry(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function (feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */\n        feature.get(geometry)\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function () {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */\n        geometry\n      );\n    };\n  }\n\n  this.geometry_ = geometry;\n};\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\n\n\nStyle.prototype.setZIndex = function setZIndex(zIndex) {\n  this.zIndex_ = zIndex;\n};\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\n\n\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof\n      /** @type {?} */\n      obj.getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n\n      var style =\n      /** @type {Style} */\n      obj;\n      styles = [style];\n    }\n\n    styleFunction = function styleFunction() {\n      return styles;\n    };\n  }\n\n  return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\n\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\n\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [new Style({\n      image: new CircleStyle({\n        fill: fill,\n        stroke: stroke,\n        radius: 5\n      }),\n      fill: fill,\n      stroke: stroke\n    })];\n  }\n\n  return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\n\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [new Style({\n    fill: new Fill({\n      color: [255, 255, 255, 0.5]\n    })\n  })];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n  styles[GeometryType.LINE_STRING] = [new Style({\n    stroke: new Stroke({\n      color: white,\n      width: width + 2\n    })\n  }), new Style({\n    stroke: new Stroke({\n      color: blue,\n      width: width\n    })\n  })];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n  styles[GeometryType.POINT] = [new Style({\n    image: new CircleStyle({\n      radius: width * 2,\n      fill: new Fill({\n        color: blue\n      }),\n      stroke: new Stroke({\n        color: white,\n        width: width / 2\n      })\n    }),\n    zIndex: Infinity\n  })];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n  return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\n\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n\n    offset += stride;\n    end -= stride;\n  }\n}","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\n\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n\n  return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\n\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n\n    if (i === 0) {\n      if (right && isClockwise || !right && !isClockwise) {\n        return false;\n      }\n    } else {\n      if (right && !isClockwise || !right && isClockwise) {\n        return false;\n      }\n    }\n\n    offset = end;\n  }\n\n  return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\n\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\n\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ? right && isClockwise || !right && !isClockwise : right && !isClockwise || !right && isClockwise;\n\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n\n    offset = end;\n  }\n\n  return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\n\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n\n  return offset;\n}","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\n\nvar ImageStyle = function ImageStyle(options) {\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this.rotateWithView_ = options.rotateWithView;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.rotation_ = options.rotation;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.scale_ = options.scale;\n};\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\n\n\nImageStyle.prototype.clone = function clone() {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\n\n\nImageStyle.prototype.getOpacity = function getOpacity() {\n  return this.opacity_;\n};\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\n\n\nImageStyle.prototype.getRotateWithView = function getRotateWithView() {\n  return this.rotateWithView_;\n};\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\n\n\nImageStyle.prototype.getRotation = function getRotation() {\n  return this.rotation_;\n};\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\n\n\nImageStyle.prototype.getScale = function getScale() {\n  return this.scale_;\n};\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\n\n\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel() {\n  return false;\n};\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\n\n\nImageStyle.prototype.getAnchor = function getAnchor() {\n  return abstract();\n};\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\n\n\nImageStyle.prototype.getImage = function getImage(pixelRatio) {\n  return abstract();\n};\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\n\n\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage(pixelRatio) {\n  return abstract();\n};\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\n\n\nImageStyle.prototype.getImageState = function getImageState() {\n  return abstract();\n};\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\n\n\nImageStyle.prototype.getImageSize = function getImageSize() {\n  return abstract();\n};\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\n\n\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize() {\n  return abstract();\n};\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\n\n\nImageStyle.prototype.getOrigin = function getOrigin() {\n  return abstract();\n};\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\n\n\nImageStyle.prototype.getSize = function getSize() {\n  return abstract();\n};\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\n\n\nImageStyle.prototype.setOpacity = function setOpacity(opacity) {\n  this.opacity_ = opacity;\n};\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\n\n\nImageStyle.prototype.setRotateWithView = function setRotateWithView(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\n\n\nImageStyle.prototype.setRotation = function setRotation(rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\n\n\nImageStyle.prototype.setScale = function setScale(scale) {\n  this.scale_ = scale;\n};\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\n\n\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel(snapToPixel) {};\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\n\n\nImageStyle.prototype.listenImageChange = function listenImageChange(listener, thisArg) {\n  return abstract();\n};\n/**\n * Load not yet loaded URI.\n * @abstract\n */\n\n\nImageStyle.prototype.load = function load() {\n  abstract();\n};\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\n\n\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange(listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;","/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\n\nvar Feature =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n    BaseObject.call(this);\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n\n    this.id_ = undefined;\n    /**\n     * @type {string}\n     * @private\n     */\n\n    this.geometryName_ = 'geometry';\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n\n    this.style_ = null;\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n\n    this.styleFunction_ = undefined;\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n\n    this.geometryChangeKey_ = null;\n    listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof\n      /** @type {?} */\n      opt_geometryOrProperties.getSimplifiedGeometry === 'function') {\n        var geometry =\n        /** @type {import(\"./geom/Geometry.js\").default} */\n        opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if (BaseObject) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create(BaseObject && BaseObject.prototype);\n  Feature.prototype.constructor = Feature;\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n\n  Feature.prototype.clone = function clone() {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n\n    var style = this.getStyle();\n\n    if (style) {\n      clone.setStyle(style);\n    }\n\n    return clone;\n  };\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n\n\n  Feature.prototype.getGeometry = function getGeometry() {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */\n      this.get(this.geometryName_)\n    );\n  };\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n\n\n  Feature.prototype.getId = function getId() {\n    return this.id_;\n  };\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n\n\n  Feature.prototype.getGeometryName = function getGeometryName() {\n    return this.geometryName_;\n  };\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n\n\n  Feature.prototype.getStyle = function getStyle() {\n    return this.style_;\n  };\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n\n\n  Feature.prototype.getStyleFunction = function getStyleFunction() {\n    return this.styleFunction_;\n  };\n  /**\n   * @private\n   */\n\n\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_() {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n\n\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n\n    var geometry = this.getGeometry();\n\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n\n    this.changed();\n  };\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n\n\n  Feature.prototype.setGeometry = function setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n\n\n  Feature.prototype.setStyle = function setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n\n\n  Feature.prototype.setId = function setId(id) {\n    this.id_ = id;\n    this.changed();\n  };\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n\n\n  Feature.prototype.setGeometryName = function setGeometryName(name) {\n    unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject);\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\n\n\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof\n      /** @type {?} */\n      obj.getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n\n      var style =\n      /** @type {import(\"./style/Style.js\").default} */\n      obj;\n      styles = [style];\n    }\n\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\n\nvar IconImageCache = function IconImageCache() {\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n  /**\n  * @type {number}\n  * @private\n  */\n\n  this.cacheSize_ = 0;\n  /**\n  * @type {number}\n  * @private\n  */\n\n  this.maxCacheSize_ = 32;\n};\n/**\n* FIXME empty description for jsdoc\n*/\n\n\nIconImageCache.prototype.clear = function clear() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n/**\n* FIXME empty description for jsdoc\n*/\n\n\nIconImageCache.prototype.expire = function expire() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\n\n\nIconImageCache.prototype.get = function get(src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\n\n\nIconImageCache.prototype.set = function set(src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\n\n\nIconImageCache.prototype.setSize = function setSize(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\n\n\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\n\nexport var shared = new IconImageCache();","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import React from 'react';\nexport default React.createContext(null);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _shouldUpdate = _interopRequireDefault(require(\"./shouldUpdate\"));\n\nvar _shallowEqual = _interopRequireDefault(require(\"./shallowEqual\"));\n\nvar _setDisplayName = _interopRequireDefault(require(\"./setDisplayName\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"./wrapDisplayName\"));\n\nvar pure = function pure(BaseComponent) {\n  var hoc = (0, _shouldUpdate.default)(function (props, nextProps) {\n    return !(0, _shallowEqual.default)(props, nextProps);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'pure'))(hoc(BaseComponent));\n  }\n\n  return hoc(BaseComponent);\n};\n\nvar _default = pure;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = require(\"react\");\n\nvar _setDisplayName = _interopRequireDefault(require(\"./setDisplayName\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"./wrapDisplayName\"));\n\nvar shouldUpdate = function shouldUpdate(test) {\n  return function (BaseComponent) {\n    var factory = (0, _react.createFactory)(BaseComponent);\n\n    var ShouldUpdate =\n    /*#__PURE__*/\n    function (_Component) {\n      (0, _inheritsLoose2.default)(ShouldUpdate, _Component);\n\n      function ShouldUpdate() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = ShouldUpdate.prototype;\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return test(this.props, nextProps);\n      };\n\n      _proto.render = function render() {\n        return factory(this.props);\n      };\n\n      return ShouldUpdate;\n    }(_react.Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);\n    }\n\n    return ShouldUpdate;\n  };\n};\n\nvar _default = shouldUpdate;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar setStatic = function setStatic(key, value) {\n  return function (BaseComponent) {\n    /* eslint-disable no-param-reassign */\n    BaseComponent[key] = value;\n    /* eslint-enable no-param-reassign */\n\n    return BaseComponent;\n  };\n};\n\nvar _default = setStatic;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar getDisplayName = function getDisplayName(Component) {\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (!Component) {\n    return undefined;\n  }\n\n  return Component.displayName || Component.name || 'Component';\n};\n\nvar _default = getDisplayName;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _shallowEqual = _interopRequireDefault(require(\"fbjs/lib/shallowEqual\"));\n\nvar _default = _shallowEqual.default;\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\n\n\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","/**\n * @module ol/style/Stroke\n */\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\n\nvar Stroke = function Stroke(opt_options) {\n  var options = opt_options || {};\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n\n  this.color_ = options.color !== undefined ? options.color : null;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.lineCap_ = options.lineCap;\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.lineDashOffset_ = options.lineDashOffset;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.lineJoin_ = options.lineJoin;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.miterLimit_ = options.miterLimit;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.width_ = options.width;\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n\n  this.checksum_ = undefined;\n};\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\n\n\nStroke.prototype.clone = function clone() {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\n\n\nStroke.prototype.getColor = function getColor() {\n  return this.color_;\n};\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\n\n\nStroke.prototype.getLineCap = function getLineCap() {\n  return this.lineCap_;\n};\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\n\n\nStroke.prototype.getLineDash = function getLineDash() {\n  return this.lineDash_;\n};\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\n\n\nStroke.prototype.getLineDashOffset = function getLineDashOffset() {\n  return this.lineDashOffset_;\n};\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\n\n\nStroke.prototype.getLineJoin = function getLineJoin() {\n  return this.lineJoin_;\n};\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\n\n\nStroke.prototype.getMiterLimit = function getMiterLimit() {\n  return this.miterLimit_;\n};\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\n\n\nStroke.prototype.getWidth = function getWidth() {\n  return this.width_;\n};\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\n\n\nStroke.prototype.setColor = function setColor(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\n\n\nStroke.prototype.setLineCap = function setLineCap(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\n\n\nStroke.prototype.setLineDash = function setLineDash(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\n\n\nStroke.prototype.setLineDashOffset = function setLineDashOffset(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\n\n\nStroke.prototype.setLineJoin = function setLineJoin(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\n\n\nStroke.prototype.setMiterLimit = function setMiterLimit(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\n\n\nStroke.prototype.setWidth = function setWidth(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n/**\n * @return {string} The checksum.\n */\n\n\nStroke.prototype.getChecksum = function getChecksum() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n\n    this.checksum_ += ',' + (this.lineCap_ !== undefined ? this.lineCap_.toString() : '-') + ',' + (this.lineDash_ ? this.lineDash_.toString() : '-') + ',' + (this.lineDashOffset_ !== undefined ? this.lineDashOffset_ : '-') + ',' + (this.lineJoin_ !== undefined ? this.lineJoin_ : '-') + ',' + (this.miterLimit_ !== undefined ? this.miterLimit_.toString() : '-') + ',' + (this.width_ !== undefined ? this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.quickselect = factory();\n})(this, function () {\n  'use strict';\n\n  function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || arr.length - 1, compare || defaultCompare);\n  }\n\n  function quickselectStep(arr, k, left, right, compare) {\n    while (right > left) {\n      if (right - left > 600) {\n        var n = right - left + 1;\n        var m = k - left + 1;\n        var z = Math.log(n);\n        var s = 0.5 * Math.exp(2 * z / 3);\n        var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n        var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n        var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n        quickselectStep(arr, k, newLeft, newRight, compare);\n      }\n\n      var t = arr[k];\n      var i = left;\n      var j = right;\n      swap(arr, left, k);\n      if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n      while (i < j) {\n        swap(arr, i, j);\n        i++;\n        j--;\n\n        while (compare(arr[i], t) < 0) {\n          i++;\n        }\n\n        while (compare(arr[j], t) > 0) {\n          j--;\n        }\n      }\n\n      if (compare(arr[left], t) === 0) swap(arr, left, j);else {\n        j++;\n        swap(arr, j, right);\n      }\n      if (j <= k) left = j + 1;\n      if (k <= j) right = j - 1;\n    }\n  }\n\n  function swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n\n  function defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  return quickselect;\n});","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\n\nvar MapEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function MapEvent(type, map, opt_frameState) {\n    Event.call(this, type);\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n\n    this.map = map;\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n\n  if (Event) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create(Event && Event.prototype);\n  MapEvent.prototype.constructor = MapEvent;\n  return MapEvent;\n}(Event);\n\nexport default MapEvent;","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\n\nvar MapBrowserEvent =\n/*@__PURE__*/\nfunction (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n    MapEvent.call(this, type, map, opt_frameState);\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n\n    this.originalEvent = browserEvent;\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n\n    this.pixel = map.getEventPixel(browserEvent);\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  if (MapEvent) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create(MapEvent && MapEvent.prototype);\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n\n  MapBrowserEvent.prototype.preventDefault = function preventDefault() {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n\n\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation() {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent);\n\nexport default MapBrowserEvent;","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent =\n/*@__PURE__*/\nfunction (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n\n    this.pointerEvent = pointerEvent;\n  }\n\n  if (MapBrowserEvent) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create(MapBrowserEvent && MapBrowserEvent.prototype);\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent);\n\nexport default MapBrowserPointerEvent;","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = function EventSource(dispatcher, mapping) {\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n\n  this.mapping_ = mapping;\n};\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\n\n\nEventSource.prototype.getEvents = function getEvents() {\n  return Object.keys(this.mapping_);\n};\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\n\n\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent(eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\n\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\n\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\n\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\n\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\n\n\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\n\n\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\n\n\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\n\n\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\nvar MouseSource =\n/*@__PURE__*/\nfunction (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n\n    this.pointerMap = dispatcher.pointerMap;\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n\n    this.lastTouches = [];\n  }\n\n  if (EventSource) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create(EventSource && EventSource.prototype);\n  MouseSource.prototype.constructor = MouseSource;\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_(inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n\n    for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n\n\n  MouseSource.prototype.cancel = function cancel(inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n\n\n  MouseSource.prototype.cleanupMouse = function cleanupMouse() {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource);\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\n\n\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent); // forward mouse preventDefault\n\n  var pd = e.preventDefault;\n\n  e.preventDefault = function () {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n  return e;\n}\nexport default MouseSource;","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\n\nvar POINTER_TYPES = ['', 'unavailable', 'touch', 'pen', 'mouse'];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\n\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\n\n\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\n\n\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\n\n\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\n\n\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\n\n\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\n\n\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\n\n\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource =\n/*@__PURE__*/\nfunction (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if (EventSource) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create(EventSource && EventSource.prototype);\n  MsSource.prototype.constructor = MsSource;\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n\n  MsSource.prototype.prepareEvent_ = function prepareEvent_(inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n\n\n  MsSource.prototype.cleanup = function cleanup(pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource);\n\nexport default MsSource;","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\n\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\n\n\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\n\n\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\n\n\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\n\n\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\n\n\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\n\n\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\n\n\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource =\n/*@__PURE__*/\nfunction (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if (EventSource) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create(EventSource && EventSource.prototype);\n  NativeSource.prototype.constructor = NativeSource;\n  return NativeSource;\n}(EventSource);\n\nexport default NativeSource;","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\n\nvar HAS_BUTTONS = false;\n\nvar PointerEvent =\n/*@__PURE__*/\nfunction (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n    /**\n     * @const\n     * @type {Event}\n     */\n\n\n    this.originalEvent = originalEvent;\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n    /**\n     * @type {number}\n     */\n\n    this.buttons = getButtons(eventDict);\n    /**\n     * @type {number}\n     */\n\n    this.pressure = getPressure(eventDict, this.buttons); // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n    /**\n     * @type {boolean}\n     */\n\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n    /**\n     * @type {Object}\n     */\n\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n    /**\n     * @type {number}\n     */\n\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n    /**\n     * @type {number}\n     */\n\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n    /**\n     * @type {number}\n     */\n\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n    /**\n     * @type {number}\n     */\n\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n    /**\n     * @type {number}\n     */\n\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n    /**\n     * @type {boolean}\n     */\n\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n    /**\n     * @type {boolean}\n     */\n\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n    /**\n     * @type {boolean}\n     */\n\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n    /**\n     * @type {boolean}\n     */\n\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n    /**\n     * @type {number}\n     */\n\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n    /**\n     * @type {Node}\n     */\n\n    this.relatedTarget = 'relatedTarget' in eventDict ? eventDict['relatedTarget'] : null; // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n    /**\n     * @type {number}\n     */\n\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n    /**\n     * @type {number}\n     */\n\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n    /**\n     * @type {number}\n     */\n\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n    /**\n     * @type {number}\n     */\n\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n    /**\n     * @type {string}\n     */\n\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n    /**\n     * @type {number}\n     */\n\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n    /**\n     * @type {boolean}\n     */\n\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false; // keep the semantics of preventDefault\n\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function () {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if (_Event) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create(_Event && _Event.prototype);\n  PointerEvent.prototype.constructor = PointerEvent;\n  return PointerEvent;\n}(_Event);\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\n\n\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1:\n        buttons = 1;\n        break;\n\n      case 2:\n        buttons = 4;\n        break;\n\n      case 3:\n        buttons = 2;\n        break;\n\n      default:\n        buttons = 0;\n    }\n  }\n\n  return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\n\n\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n\n  return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n\n\n(function () {\n  try {\n    var ev = new MouseEvent('click', {\n      buttons: 1\n    });\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {// pass\n  }\n})();\n\nexport default PointerEvent;","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\n\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\n\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\n\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\n\n\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\n\n\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\n\n\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\nvar TouchSource =\n/*@__PURE__*/\nfunction (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n\n    this.pointerMap = dispatcher.pointerMap;\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n\n    this.mouseSource = mouseSource;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.firstTouchId_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.clickCount_ = 0;\n    /**\n     * @private\n     * @type {?}\n     */\n\n    this.resetId_;\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n\n    this.dedupTimeout_ = 2500;\n  }\n\n  if (EventSource) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create(EventSource && EventSource.prototype);\n  TouchSource.prototype.constructor = TouchSource;\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_(inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n\n\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_(inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n\n    if (count === 0 || count === 1 && POINTER_ID.toString() in this.pointerMap) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n\n\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_(inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_() {\n    this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n  };\n  /**\n   * @private\n   */\n\n\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_() {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n  /**\n   * @private\n   */\n\n\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_() {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n\n\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_(browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch); // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n\n    e.pointerId = inTouch.identifier + 2; // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE; // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n    return e;\n  };\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n\n\n  TouchSource.prototype.processTouches_ = function processTouches_(inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]); // forward touch preventDefaults\n\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n\n\n  TouchSource.prototype.findTouch_ = function findTouch_(touchList, searchId) {\n    var l = touchList.length;\n\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n\n\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_(inEvent) {\n    var touchList = inEvent.touches; // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n\n    if (count >= touchList.length) {\n      var d = [];\n\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key]; // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n\n\n  TouchSource.prototype.overDown_ = function overDown_(browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n\n\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_(browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId]; // a finger drifted off the screen, ignore it\n\n    if (!pointer) {\n      return;\n    }\n\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */\n\n      event.relatedTarget = outTarget; // recover from retargeting by shadow\n\n      outEvent.target = outTarget;\n\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n\n        /** @type {Object} */\n        event.target = outTarget;\n        /** @type {Object} */\n\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n\n\n  TouchSource.prototype.upOut_ = function upOut_(browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n\n\n  TouchSource.prototype.cancelOut_ = function cancelOut_(browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n\n\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_(inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n\n\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_(inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0]; // only the primary finger will synth mouse events\n\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n      setTimeout(function () {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource);\n\nexport default TouchSource;","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\n\nvar CLONE_PROPS = [// MouseEvent\n['bubbles', false], ['cancelable', false], ['view', null], ['detail', null], ['screenX', 0], ['screenY', 0], ['clientX', 0], ['clientY', 0], ['ctrlKey', false], ['altKey', false], ['shiftKey', false], ['metaKey', false], ['button', 0], ['relatedTarget', null], // DOM Level 3\n['buttons', 0], // PointerEvent\n['pointerId', 0], ['width', 0], ['height', 0], ['pressure', 0], ['tiltX', 0], ['tiltY', 0], ['pointerType', ''], ['hwTimestamp', 0], ['isPrimary', false], // event instance\n['type', ''], ['target', null], ['currentTarget', null], ['which', 0]];\n\nvar PointerEventHandler =\n/*@__PURE__*/\nfunction (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n\n    this.element_ = element;\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n\n    this.pointerMap = {};\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n\n    this.eventMap_ = {};\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n\n    this.eventSourceList_ = [];\n    this.registerSources();\n  }\n\n  if (EventTarget) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create(EventTarget && EventTarget.prototype);\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n\n  PointerEventHandler.prototype.registerSources = function registerSources() {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    } // register events on the viewport element\n\n\n    this.register_();\n  };\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n\n\n  PointerEventHandler.prototype.registerSource = function registerSource(name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function (e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n\n\n  PointerEventHandler.prototype.register_ = function register_() {\n    var l = this.eventSourceList_.length;\n\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n  /**\n   * Remove all registered events.\n   * @private\n   */\n\n\n  PointerEventHandler.prototype.unregister_ = function unregister_() {\n    var l = this.eventSourceList_.length;\n\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n\n\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_(inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n\n\n  PointerEventHandler.prototype.addEvents_ = function addEvents_(events) {\n    events.forEach(function (eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n\n\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_(events) {\n    events.forEach(function (e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n\n\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent(event, inEvent) {\n    var eventCopy = {};\n\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  }; // EVENTS\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.down = function down(data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.move = function move(data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.up = function up(data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.enter = function enter(data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.leave = function leave(data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.over = function over(data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.out = function out(data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.cancel = function cancel(data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.leaveOut = function leaveOut(data, event) {\n    this.out(data, event);\n\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.enterOver = function enterOver(data, event) {\n    this.over(data, event);\n\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n\n\n  PointerEventHandler.prototype.contains_ = function contains_(container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n\n    return container.contains(contained);\n  }; // EVENT CREATION AND TRACKING\n\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n\n\n  PointerEventHandler.prototype.makeEvent = function makeEvent(inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n\n\n  PointerEventHandler.prototype.fireEvent = function fireEvent(inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n\n\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent(event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n\n\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent(eventType, event) {\n    var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal() {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget);\n\nexport default PointerEventHandler;","/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler =\n/*@__PURE__*/\nfunction (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n    EventTarget.call(this);\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n\n    this.map_ = map;\n    /**\n     * @type {any}\n     * @private\n     */\n\n    this.clickTimeoutId_;\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    this.dragging_ = false;\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n\n    this.dragListenerKeys_ = [];\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.moveTolerance_ = moveTolerance ? moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n\n    this.down_ = null;\n    var element = this.map_.getViewport();\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.activePointers_ = 0;\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n\n    this.trackedTouches_ = {};\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n\n    this.documentPointerEventHandler_ = null;\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_, PointerEventType.POINTERDOWN, this.handlePointerDown_, this);\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_, PointerEventType.POINTERMOVE, this.relayEvent_, this);\n  }\n\n  if (EventTarget) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create(EventTarget && EventTarget.prototype);\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_(pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function () {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n\n\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_(pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP || event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n\n\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent); // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n\n\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n\n\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ = new PointerEventHandler(document);\n      this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n    }\n  };\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n\n\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n      this.dispatchEvent(newEvent);\n    } // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n\n\n    pointerEvent.preventDefault();\n  };\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n\n\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_(pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n\n\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_(pointerEvent) {\n    return this.dragging_ || Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ || Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget);\n\nexport default MapBrowserEventHandler;","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n};","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\n\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\n\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n\n  this.keyFunction_ = keyFunction;\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n\n  this.elements_ = [];\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n\n  this.priorities_ = [];\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n\n  this.queuedElements_ = {};\n};\n/**\n * FIXME empty description for jsdoc\n */\n\n\nPriorityQueue.prototype.clear = function clear$1() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\n\n\nPriorityQueue.prototype.dequeue = function dequeue() {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\n\n\nPriorityQueue.prototype.enqueue = function enqueue(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n\n  var priority = this.priorityFunction_(element);\n\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n\n  return false;\n};\n/**\n * @return {number} Count.\n */\n\n\nPriorityQueue.prototype.getCount = function getCount() {\n  return this.elements_.length;\n};\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\n\n\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_(index) {\n  return index * 2 + 1;\n};\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\n\n\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_(index) {\n  return index * 2 + 2;\n};\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\n\n\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_(index) {\n  return index - 1 >> 1;\n};\n/**\n * Make this a heap. O(N).\n * @private\n */\n\n\nPriorityQueue.prototype.heapify_ = function heapify_() {\n  var i;\n\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n/**\n * @return {boolean} Is empty.\n */\n\n\nPriorityQueue.prototype.isEmpty = function isEmpty() {\n  return this.elements_.length === 0;\n};\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\n\n\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued(key) {\n  return key in this.queuedElements_;\n};\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\n\n\nPriorityQueue.prototype.isQueued = function isQueued(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\n\n\nPriorityQueue.prototype.siftUp_ = function siftUp_(index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < count >> 1) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n    var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex] ? rIndex : lIndex;\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\n\n\nPriorityQueue.prototype.siftDown_ = function siftDown_(startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n};\n/**\n * FIXME empty description for jsdoc\n */\n\n\nPriorityQueue.prototype.reprioritize = function reprioritize() {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\nexport default PriorityQueue;","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nvar TileQueue =\n/*@__PURE__*/\nfunction (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n    PriorityQueue.call(\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    this, function (element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function (element) {\n      return (\n        /** @type {import(\"./Tile.js\").default} */\n        element[0].getKey()\n      );\n    });\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n\n    this.tileChangeCallback_ = tileChangeCallback;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.tilesLoading_ = 0;\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n\n    this.tilesLoadingKeys_ = {};\n  }\n\n  if (PriorityQueue) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create(PriorityQueue && PriorityQueue.prototype);\n  TileQueue.prototype.constructor = TileQueue;\n  /**\n   * @inheritDoc\n   */\n\n  TileQueue.prototype.enqueue = function enqueue(element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n\n    return added;\n  };\n  /**\n   * @return {number} Number of tiles loading.\n   */\n\n\n  TileQueue.prototype.getTilesLoading = function getTilesLoading() {\n    return this.tilesLoading_;\n  };\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n\n\n  TileQueue.prototype.handleTileChange = function handleTileChange(event) {\n    var tile =\n    /** @type {import(\"./Tile.js\").default} */\n    event.target;\n    var state = tile.getState();\n\n    if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n\n      this.tileChangeCallback_();\n    }\n  };\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n\n\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads && this.getCount() > 0) {\n      tile =\n      /** @type {import(\"./Tile.js\").default} */\n      this.dequeue()[0];\n      tileKey = tile.getKey();\n      state = tile.getState();\n\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue);\n\nexport default TileQueue;","/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\n\nvar Property = {\n  LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\n\nvar LayerGroup =\n/*@__PURE__*/\nfunction (BaseLayer) {\n  function LayerGroup(opt_options) {\n    var options = opt_options || {};\n    var baseOptions =\n    /** @type {Options} */\n    assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    BaseLayer.call(this, baseOptions);\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n\n    this.layersListenerKeys_ = [];\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n\n    this.listenerKeys_ = {};\n    listen(this, getChangeEventType(Property.LAYERS), this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof\n        /** @type {?} */\n        layers.getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n\n    this.setLayers(layers);\n  }\n\n  if (BaseLayer) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create(BaseLayer && BaseLayer.prototype);\n  LayerGroup.prototype.constructor = LayerGroup;\n  /**\n   * @private\n   */\n\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_() {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n\n    clear(this.listenerKeys_);\n    var layersArray = layers.getArray();\n\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    }\n\n    this.changed();\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_(collectionEvent) {\n    var layer =\n    /** @type {import(\"./Base.js\").default} */\n    collectionEvent.element;\n    this.listenerKeys_[getUid(layer)] = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    this.changed();\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n\n\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_(collectionEvent) {\n    var layer =\n    /** @type {import(\"./Base.js\").default} */\n    collectionEvent.element;\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n\n\n  LayerGroup.prototype.getLayers = function getLayers() {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */\n      this.get(Property.LAYERS)\n    );\n  };\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n\n\n  LayerGroup.prototype.setLayers = function setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getLayersArray = function getLayersArray(opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray(opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n    var pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    var ownLayerState = this.getLayerState();\n\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LayerGroup.prototype.getSourceState = function getSourceState() {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer);\n\nexport default LayerGroup;","/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport { stopPropagation } from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\n\nvar PluggableMap =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function PluggableMap(options) {\n    BaseObject.call(this);\n    var optionsInternal = createOptionsInternal(options);\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    this.loadTilesWhileAnimating_ = options.loadTilesWhileAnimating !== undefined ? options.loadTilesWhileAnimating : false;\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    this.loadTilesWhileInteracting_ = options.loadTilesWhileInteracting !== undefined ? options.loadTilesWhileInteracting : false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelRatio_ = options.pixelRatio !== undefined ? options.pixelRatio : DEVICE_PIXEL_RATIO;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.animationDelayKey_;\n    /**\n     * @private\n     */\n\n    this.animationDelay_ = function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n\n\n    this.coordinateToPixelTransform_ = createTransform();\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n\n    this.pixelToCoordinateTransform_ = createTransform();\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.frameIndex_ = 0;\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n\n    this.frameState_ = null;\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n\n    this.previousExtent_ = null;\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n\n    this.viewPropertyListenerKey_ = null;\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n\n    this.viewChangeListenerKey_ = null;\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n\n    this.layerGroupPropertyListenerKeys_ = null;\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%'; // prevent page zoom on IE >= 10 browsers\n\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [EventType.CLICK, EventType.DBLCLICK, EventType.MOUSEDOWN, EventType.TOUCHSTART, EventType.MSPOINTERDOWN, MapBrowserEventType.POINTERDOWN, EventType.MOUSEWHEEL, EventType.WHEEL];\n\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key], this.handleMapBrowserEvent, this);\n    }\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n\n\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n\n    this.keyHandlerKeys_ = null;\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n\n    this.controls = optionsInternal.controls || new Collection();\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n\n    this.interactions = optionsInternal.interactions || new Collection();\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n\n    this.overlays_ = optionsInternal.overlays;\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n\n    this.overlayIdIndex_ = {};\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n\n    this.renderer_ = this.createRenderer();\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n\n    this.handleResize_;\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n\n    this.focus_ = null;\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n\n    this.postRenderFunctions_ = [];\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n\n    this.tileQueue_ = new TileQueue(this.getTilePriority.bind(this), this.handleTileChange_.bind(this));\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n\n    this.skippedFeatureUids_ = {};\n    listen(this, getChangeEventType(MapProperty.LAYERGROUP), this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW), this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE), this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET), this.handleTargetChanged_, this); // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n\n    this.setProperties(optionsInternal.values);\n    this.controls.forEach(\n    /**\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @this {PluggableMap}\n     */\n    function (control) {\n      control.setMap(this);\n    }.bind(this));\n    listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(this);\n    }, this);\n    listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(null);\n    }, this);\n    this.interactions.forEach(\n    /**\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n     * @this {PluggableMap}\n     */\n    function (interaction) {\n      interaction.setMap(this);\n    }.bind(this));\n    listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(this);\n    }, this);\n    listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(null);\n    }, this);\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n    listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      this.addOverlayInternal_(\n      /** @type {import(\"./Overlay.js\").default} */\n      event.element);\n    }, this);\n    listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      var overlay =\n      /** @type {import(\"./Overlay.js\").default} */\n      event.element;\n      var id = overlay.getId();\n\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n\n      event.element.setMap(null);\n    }, this);\n  }\n\n  if (BaseObject) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create(BaseObject && BaseObject.prototype);\n  PluggableMap.prototype.constructor = PluggableMap;\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n\n  PluggableMap.prototype.createRenderer = function createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n\n\n  PluggableMap.prototype.addControl = function addControl(control) {\n    this.getControls().push(control);\n  };\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n\n\n  PluggableMap.prototype.addInteraction = function addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  };\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n\n\n  PluggableMap.prototype.addLayer = function addLayer(layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n\n\n  PluggableMap.prototype.addOverlay = function addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  };\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n\n\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_(overlay) {\n    var id = overlay.getId();\n\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n\n    overlay.setMap(this);\n  };\n  /**\n   *\n   * @inheritDoc\n   */\n\n\n  PluggableMap.prototype.disposeInternal = function disposeInternal() {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n\n\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n    /** @type {AtPixelOptions} */\n    {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel(pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function (feature) {\n      if (!features) {\n        features = [];\n      }\n\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n\n\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n\n    var options = opt_options ||\n    /** @type {AtPixelOptions} */\n    {};\n    var hitTolerance = options.hitTolerance !== undefined ? opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n\n\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n    /** @type {AtPixelOptions} */\n    {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getEventPixel = function getEventPixel(event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n    /** @type {TouchEvent} */\n    event.changedTouches[0] :\n    /** @type {MouseEvent} */\n    event;\n    return [eventPosition.clientX - viewportPosition.left, eventPosition.clientY - viewportPosition.top];\n  };\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.getTarget = function getTarget() {\n    return (\n      /** @type {HTMLElement|string|undefined} */\n      this.get(MapProperty.TARGET)\n    );\n  };\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getTargetElement = function getTargetElement() {\n    var target = this.getTarget();\n\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel(pixel) {\n    var frameState = this.frameState_;\n\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getControls = function getControls() {\n    return this.controls;\n  };\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getOverlays = function getOverlays() {\n    return this.overlays_;\n  };\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getOverlayById = function getOverlayById(id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getInteractions = function getInteractions() {\n    return this.interactions;\n  };\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup() {\n    return (\n      /** @type {LayerGroup} */\n      this.get(MapProperty.LAYERGROUP)\n    );\n  };\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getLayers = function getLayers() {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate(coordinate) {\n    var frameState = this.frameState_;\n\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n\n\n  PluggableMap.prototype.getRenderer = function getRenderer() {\n    return this.renderer_;\n  };\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.getSize = function getSize() {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */\n      this.get(MapProperty.SIZE)\n    );\n  };\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.getView = function getView() {\n    return (\n      /** @type {View} */\n      this.get(MapProperty.VIEW)\n    );\n  };\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getViewport = function getViewport() {\n    return this.viewport_;\n  };\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n\n\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer() {\n    return this.overlayContainer_;\n  };\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n\n\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  };\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n\n\n  PluggableMap.prototype.getTilePriority = function getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    } // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n\n\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) + Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n\n\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent(browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n\n\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n\n        if (!interaction.getActive()) {\n          continue;\n        }\n\n        var cont = interaction.handleEvent(mapBrowserEvent);\n\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  PluggableMap.prototype.handlePostRender = function handlePostRender() {\n    var frameState = this.frameState_; // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n\n    var tileQueue = this.tileQueue_;\n\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n\n      if (frameState) {\n        var hints = frameState.viewHints;\n\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate && !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n\n    postRenderFunctions.length = 0;\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_() {\n    this.render();\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n    var targetElement;\n\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      var keyboardEventTarget = !this.keyboardEventTarget_ ? targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this), listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize(); // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_() {\n    this.render();\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_() {\n    this.render();\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n\n    var view = this.getView();\n\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n    }\n\n    this.render();\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n\n    var layerGroup = this.getLayerGroup();\n\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this), listen(layerGroup, EventType.CHANGE, this.render, this)];\n    }\n\n    this.render();\n  };\n  /**\n   * @return {boolean} Is rendered.\n   */\n\n\n  PluggableMap.prototype.isRendered = function isRendered() {\n    return !!this.frameState_;\n  };\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n\n\n  PluggableMap.prototype.renderSync = function renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n\n    this.animationDelay_();\n  };\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n\n\n  PluggableMap.prototype.render = function render() {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n\n\n  PluggableMap.prototype.removeControl = function removeControl(control) {\n    return this.getControls().remove(control);\n  };\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n\n\n  PluggableMap.prototype.removeInteraction = function removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n\n\n  PluggableMap.prototype.removeLayer = function removeLayer(layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n\n\n  PluggableMap.prototype.removeOverlay = function removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n\n\n  PluggableMap.prototype.renderFrame_ = function renderFrame_(time) {\n    var viewState;\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n\n    var frameState = null;\n\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n\n      viewState = view.getState(this.pixelRatio_);\n      frameState =\n      /** @type {FrameState} */\n      {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      };\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ || !isEmpty(this.previousExtent_) && !equals(frameState.extent, this.previousExtent_);\n\n        if (moveStart) {\n          this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ && !frameState.viewHints[ViewHint.ANIMATING] && !frameState.viewHints[ViewHint.INTERACTING] && !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n    setTimeout(this.handlePostRender.bind(this), 0);\n  };\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.setSize = function setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  };\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.setTarget = function setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  };\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.setView = function setView(view) {\n    this.set(MapProperty.VIEW, view);\n  };\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n\n\n  PluggableMap.prototype.skipFeature = function skipFeature(feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n\n\n  PluggableMap.prototype.updateSize = function updateSize() {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([targetElement.offsetWidth - parseFloat(computedStyle['borderLeftWidth']) - parseFloat(computedStyle['paddingLeft']) - parseFloat(computedStyle['paddingRight']) - parseFloat(computedStyle['borderRightWidth']), targetElement.offsetHeight - parseFloat(computedStyle['borderTopWidth']) - parseFloat(computedStyle['paddingTop']) - parseFloat(computedStyle['paddingBottom']) - parseFloat(computedStyle['borderBottomWidth'])]);\n    }\n  };\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n\n\n  PluggableMap.prototype.unskipFeature = function unskipFeature(feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject);\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\n\n\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ? document.getElementById(options.keyboardEventTarget) : options.keyboardEventTarget;\n  }\n  /**\n   * @type {Object<string, *>}\n   */\n\n\n  var values = {};\n  var layerGroup = options.layers && typeof\n  /** @type {?} */\n  options.layers.getLayers === 'function' ?\n  /** @type {LayerGroup} */\n  options.layers : new LayerGroup({\n    layers:\n    /** @type {Collection} */\n    options.layers\n  });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n  values[MapProperty.TARGET] = options.target;\n  values[MapProperty.VIEW] = options.view !== undefined ? options.view : new View();\n  var controls;\n\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof\n      /** @type {?} */\n      options.controls.getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n\n      controls =\n      /** @type {Collection} */\n      options.controls;\n    }\n  }\n\n  var interactions;\n\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof\n      /** @type {?} */\n      options.interactions.getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n\n      interactions =\n      /** @type {Collection} */\n      options.interactions;\n    }\n  }\n\n  var overlays;\n\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof\n      /** @type {?} */\n      options.overlays.getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n}\n\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\n\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n\n    if (typeof\n    /** @type {?} */\n    layer.getLayers === 'function') {\n      return getLoading(\n      /** @type {LayerGroup} */\n      layer.getLayers().getArray());\n    } else {\n      var source =\n      /** @type {import(\"./layer/Layer.js\").default} */\n      layer.getSource();\n\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}","/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\n\nvar Control =\n/*@__PURE__*/\nfunction (BaseObject) {\n  function Control(options) {\n    BaseObject.call(this);\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n\n    this.element = options.element ? options.element : null;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n\n    this.target_ = null;\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n\n    this.map_ = null;\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n\n    this.listenerKeys = [];\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  if (BaseObject) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create(BaseObject && BaseObject.prototype);\n  Control.prototype.constructor = Control;\n  /**\n   * @inheritDoc\n   */\n\n  Control.prototype.disposeInternal = function disposeInternal() {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n\n\n  Control.prototype.getMap = function getMap() {\n    return this.map_;\n  };\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n\n\n  Control.prototype.setMap = function setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n\n    if (this.map_) {\n      var target = this.target_ ? this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n      }\n\n      map.render();\n    }\n  };\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n\n\n  Control.prototype.setTarget = function setTarget(target) {\n    this.target_ = typeof target === 'string' ? document.getElementById(target) : target;\n  };\n\n  return Control;\n}(BaseObject);\n\nexport default Control;","/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\n\nvar Attribution =\n/*@__PURE__*/\nfunction (Control) {\n  function Attribution(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n\n    this.ulElement_ = document.createElement('ul');\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.collapsible_ = options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : \"\\xBB\";\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n    listen(button, EventType.CLICK, this.handleClick_, this);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL + (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') + (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n\n    this.renderedAttributions_ = [];\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.renderedVisible_ = true;\n  }\n\n  if (Control) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create(Control && Control.prototype);\n  Attribution.prototype.constructor = Attribution;\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n\n    var visibleAttributions = [];\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source =\n      /** @type {import(\"../layer/Layer.js\").default} */\n      layerState.layer.getSource();\n\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n\n    return visibleAttributions;\n  };\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n\n\n  Attribution.prototype.updateElement_ = function updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n    var visible = attributions.length > 0;\n\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_); // append the attributions\n\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n\n\n  Attribution.prototype.handleClick_ = function handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n  /**\n   * @private\n   */\n\n\n  Attribution.prototype.handleToggle_ = function handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n\n    this.collapsed_ = !this.collapsed_;\n  };\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n\n\n  Attribution.prototype.getCollapsible = function getCollapsible() {\n    return this.collapsible_;\n  };\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n\n\n  Attribution.prototype.setCollapsible = function setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n\n\n  Attribution.prototype.setCollapsed = function setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n\n    this.handleToggle_();\n  };\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n\n\n  Attribution.prototype.getCollapsed = function getCollapsed() {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control);\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\n\n\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\n\nvar Rotate =\n/*@__PURE__*/\nfunction (Control) {\n  function Rotate(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n    var label = options.label !== undefined ? options.label : \"\\u21E7\";\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n    listen(button, EventType.CLICK, this.handleClick_, this);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  if (Control) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create(Control && Control.prototype);\n  Rotate.prototype.constructor = Rotate;\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n\n  Rotate.prototype.handleClick_ = function handleClick_(event) {\n    event.preventDefault();\n\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Rotate.prototype.resetNorth_ = function resetNorth_() {\n    var map = this.getMap();\n    var view = map.getView();\n\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control);\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\n\n\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n\n  if (!frameState) {\n    return;\n  }\n\n  var rotation = frameState.viewState.rotation;\n\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n\n  this.rotation_ = rotation;\n}\nexport default Rotate;","/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\n\nvar Zoom =\n/*@__PURE__*/\nfunction (Control) {\n  function Zoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n    var delta = options.delta !== undefined ? options.delta : 1;\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : \"\\u2212\";\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ? options.zoomOutTipLabel : 'Zoom out';\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  if (Control) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create(Control && Control.prototype);\n  Zoom.prototype.constructor = Zoom;\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n\n  Zoom.prototype.handleClick_ = function handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n\n\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_(delta) {\n    var map = this.getMap();\n    var view = map.getView();\n\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n\n    var currentResolution = view.getResolution();\n\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control);\n\nexport default Zoom;","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.minVelocity_ = minVelocity;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.delay_ = delay;\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n\n  this.points_ = [];\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.angle_ = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this.initialVelocity_ = 0;\n};\n/**\n * FIXME empty description for jsdoc\n */\n\n\nKinetic.prototype.begin = function begin() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\n\n\nKinetic.prototype.update = function update(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\n\n\nKinetic.prototype.end = function end() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  } // get the first point which still falls into the delay time\n\n\n  var firstIndex = lastIndex - 3;\n\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2]; // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n/**\n * @return {number} Total distance travelled (pixels).\n */\n\n\nKinetic.prototype.getDistance = function getDistance() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\n\n\nKinetic.prototype.getAngle = function getAngle() {\n  return this.angle_;\n};\n\nexport default Kinetic;","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\n\nvar DoubleClickZoom =\n/*@__PURE__*/\nfunction (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.delta_ = options.delta ? options.delta : 1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  if (Interaction) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create(Interaction && Interaction.prototype);\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n  return DoubleClickZoom;\n}(Interaction);\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\n\n\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent =\n    /** @type {MouseEvent} */\n    mapBrowserEvent.originalEvent;\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\n\nvar PointerInteraction =\n/*@__PURE__*/\nfunction (Interaction) {\n  function PointerInteraction(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Interaction.call(\n    /** @type {import(\"./Interaction.js\").InteractionOptions} */\n    this, options);\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n    /**\n     * @type {boolean}\n     * @protected\n     */\n\n\n    this.handlingDownUpSequence = false;\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n\n    this.trackedPointers_ = {};\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n\n    this.targetPointers = [];\n  }\n\n  if (Interaction) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create(Interaction && Interaction.prototype);\n  PointerInteraction.prototype.constructor = PointerInteraction;\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent(mapBrowserEvent) {\n    return false;\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n\n\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent(mapBrowserEvent) {};\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n\n\n  PointerInteraction.prototype.handleEvent = function handleEvent(mapBrowserEvent) {\n    if (!\n    /** @type {import(\"../MapBrowserPointerEvent.js\").default} */\n    mapBrowserEvent.pointerEvent) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n\n    return !stopEvent;\n  };\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n\n\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent(mapBrowserEvent) {};\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n\n\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent(mapBrowserEvent) {\n    return false;\n  };\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n\n\n  PointerInteraction.prototype.stopDown = function stopDown(handled) {\n    return handled;\n  };\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n\n\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n      var id = event.pointerId.toString();\n\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction);\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\n\n\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n\n  return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\n\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN || type === MapBrowserEventType.POINTERDRAG || type === MapBrowserEventType.POINTERUP;\n}\n\nexport default PointerInteraction;","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport { scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\n\nvar DragPan =\n/*@__PURE__*/\nfunction (PointerInteraction) {\n  function DragPan(opt_options) {\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n\n    this.kinetic_ = options.kinetic;\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n\n    this.lastCentroid = null;\n    /**\n     * @type {number}\n     */\n\n    this.lastPointersCount_;\n    /**\n     * @type {boolean}\n     */\n\n    this.panning_ = false;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.noKinetic_ = false;\n  }\n\n  if (PointerInteraction) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  DragPan.prototype.constructor = DragPan;\n  /**\n   * @inheritDoc\n   */\n\n  DragPan.prototype.handleDragEvent = function handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  DragPan.prototype.handleUpEvent = function handleUpEvent(mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center =\n        /** @type {!import(\"../coordinate.js\").Coordinate} */\n        view.getCenter();\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([centerpx[0] - distance * Math.cos(angle), centerpx[1] - distance * Math.sin(angle)]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  DragPan.prototype.handleDownEvent = function handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null; // stop any current animation\n\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      } // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n\n\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction);\n\nexport default DragPan;","/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport { rotate, rotateWithoutConstraints } from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\n\nvar DragRotate =\n/*@__PURE__*/\nfunction (PointerInteraction) {\n  function DragRotate(opt_options) {\n    var options = opt_options ? opt_options : {};\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  if (PointerInteraction) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  DragRotate.prototype.constructor = DragRotate;\n  /**\n   * @inheritDoc\n   */\n\n  DragRotate.prototype.handleDragEvent = function handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n\n    this.lastAngle_ = theta;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  DragRotate.prototype.handleUpEvent = function handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  DragRotate.prototype.handleDownEvent = function handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction);\n\nexport default DragRotate;","/**\n * @module ol/render/Box\n */\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox =\n/*@__PURE__*/\nfunction (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n\n    this.geometry_ = null;\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n\n    this.element_ =\n    /** @type {HTMLDivElement} */\n    document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n\n    this.map_ = null;\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n\n    this.startPixel_ = null;\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n\n    this.endPixel_ = null;\n  }\n\n  if (Disposable) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create(Disposable && Disposable.prototype);\n  RenderBox.prototype.constructor = RenderBox;\n  /**\n   * @inheritDoc\n   */\n\n  RenderBox.prototype.disposeInternal = function disposeInternal() {\n    this.setMap(null);\n  };\n  /**\n   * @private\n   */\n\n\n  RenderBox.prototype.render_ = function render_() {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  RenderBox.prototype.setMap = function setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n\n    this.map_ = map;\n\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n\n\n  RenderBox.prototype.setPixels = function setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n  /**\n   * Creates or updates the cached geometry.\n   */\n\n\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry() {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [startPixel, [startPixel[0], endPixel[1]], endPixel, [endPixel[0], startPixel[1]]];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_); // close the polygon\n\n    coordinates[4] = coordinates[0].slice();\n\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n\n\n  RenderBox.prototype.getGeometry = function getGeometry() {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable);\n\nexport default RenderBox;","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\n\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\n\nvar DragBoxEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n\n    this.coordinate = coordinate;\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n\n  if (Event) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create(Event && Event.prototype);\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n  return DragBoxEvent;\n}(Event);\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\n\n\nvar DragBox =\n/*@__PURE__*/\nfunction (PointerInteraction) {\n  function DragBox(opt_options) {\n    PointerInteraction.call(this);\n    var options = opt_options ? opt_options : {};\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n    /**\n    * @type {number}\n    * @private\n    */\n\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n\n    this.startPixel_ = null;\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n\n    this.condition_ = options.condition ? options.condition : always;\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n\n    this.boxEndCondition_ = options.boxEndCondition ? options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if (PointerInteraction) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  DragBox.prototype.constructor = DragBox;\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n\n\n  DragBox.prototype.getGeometry = function getGeometry() {\n    return this.box_.getGeometry();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  DragBox.prototype.handleDragEvent = function handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  DragBox.prototype.handleUpEvent = function handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n\n    return false;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  DragBox.prototype.handleDownEvent = function handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction);\n\nexport default DragBox;","/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\n\nvar DragZoom =\n/*@__PURE__*/\nfunction (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if (DragBox) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create(DragBox && DragBox.prototype);\n  DragZoom.prototype.constructor = DragZoom;\n  return DragZoom;\n}(DragBox);\n/**\n * @this {DragZoom}\n */\n\n\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view =\n  /** @type {!import(\"../View.js\").default} */\n  map.getView();\n  var size =\n  /** @type {!import(\"../size.js\").Size} */\n  map.getSize();\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([map.getPixelFromCoordinate(getBottomLeft(extent)), map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(view.getResolutionForExtent(extent, size));\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\nexport default DragZoom;","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};","/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\n\nvar KeyboardPan =\n/*@__PURE__*/\nfunction (Interaction) {\n  function KeyboardPan(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n    var options = opt_options || {};\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent);\n    };\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n\n    this.condition_ = options.condition !== undefined ? options.condition : this.defaultCondition_;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelDelta_ = options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  if (Interaction) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create(Interaction && Interaction.prototype);\n  KeyboardPan.prototype.constructor = KeyboardPan;\n  return KeyboardPan;\n}(Interaction);\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\n\n\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent =\n    /** @type {KeyboardEvent} */\n    mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n\n    if (this.condition_(mapBrowserEvent) && (keyCode == KeyCode.DOWN || keyCode == KeyCode.LEFT || keyCode == KeyCode.RIGHT || keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0,\n          deltaY = 0;\n\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n\n  return !stopEvent;\n}\n\nexport default KeyboardPan;","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\n\nvar KeyboardZoom =\n/*@__PURE__*/\nfunction (Interaction) {\n  function KeyboardZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.delta_ = options.delta ? options.delta : 1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  if (Interaction) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create(Interaction && Interaction.prototype);\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n  return KeyboardZoom;\n}(Interaction);\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\n\n\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n\n  if (mapBrowserEvent.type == EventType.KEYDOWN || mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent =\n    /** @type {KeyboardEvent} */\n    mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n\n    if (this.condition_(mapBrowserEvent) && (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport { always } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\n\nvar MAX_DELTA = 1;\n/**\n * @enum {string}\n */\n\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\n\nvar MouseWheelZoom =\n/*@__PURE__*/\nfunction (Interaction) {\n  function MouseWheelZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Interaction.call(\n    /** @type {import(\"./Interaction.js\").InteractionOptions} */\n    this, options);\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.delta_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.constrainResolution_ = options.constrainResolution || false;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : always;\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n\n    this.lastAnchor_ = null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.startTime_ = undefined;\n    /**\n     * @private\n     * @type {?}\n     */\n\n    this.timeoutId_;\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n\n    this.mode_ = undefined;\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n\n    this.trackpadEventGap_ = 400;\n    /**\n     * @type {?}\n     */\n\n    this.trackpadTimeoutId_;\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n\n    this.trackpadDeltaPerZoom_ = 300;\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n\n    this.trackpadZoomBuffer_ = 1.5;\n  }\n\n  if (Interaction) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create(Interaction && Interaction.prototype);\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n  /**\n   * @private\n   */\n\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_() {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n\n\n  MouseWheelZoom.prototype.handleEvent = function handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n\n    var type = mapBrowserEvent.type;\n\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n    var map = mapBrowserEvent.map;\n    var wheelEvent =\n    /** @type {WheelEvent} */\n    mapBrowserEvent.originalEvent;\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    } // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n\n\n    var delta;\n\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n    return false;\n  };\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_(map) {\n    var view = map.getView();\n\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n\n\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction);\n\nexport default MouseWheelZoom;","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport { FALSE } from '../functions.js';\nimport { rotate, rotateWithoutConstraints } from './Interaction.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\n\nvar PinchRotate =\n/*@__PURE__*/\nfunction (PointerInteraction) {\n  function PinchRotate(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var pointerOptions =\n    /** @type {import(\"./Pointer.js\").Options} */\n    options;\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n\n    this.anchor_ = null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.rotating_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.rotationDelta_ = 0.0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  if (PointerInteraction) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  PinchRotate.prototype.constructor = PinchRotate;\n  /**\n   * @inheritDoc\n   */\n\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent(mapBrowserEvent) {\n    var rotationDelta = 0.0;\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1]; // angle between touches\n\n    var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n\n      rotationDelta = delta;\n    }\n\n    this.lastAngle_ = angle;\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n\n    if (view.getConstraints().rotation === disable) {\n      return;\n    } // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n\n\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid); // rotate\n\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction);\n\nexport default PinchRotate;","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport { FALSE } from '../functions.js';\nimport { zoom, zoomWithoutConstraints } from './Interaction.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\n\nvar PinchZoom =\n/*@__PURE__*/\nfunction (PointerInteraction) {\n  function PinchZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var pointerOptions =\n    /** @type {import(\"./Pointer.js\").Options} */\n    options;\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.constrainResolution_ = options.constrainResolution || false;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n\n    this.anchor_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastDistance_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.lastScaleDelta_ = 1;\n  }\n\n  if (PointerInteraction) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create(PointerInteraction && PointerInteraction.prototype);\n  PinchZoom.prototype.constructor = PinchZoom;\n  /**\n   * @inheritDoc\n   */\n\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent(mapBrowserEvent) {\n    var scaleDelta = 1.0;\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY; // distance between touches\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n\n    this.lastDistance_ = distance;\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    } // scale anchor point.\n\n\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid); // scale, bypass the resolution constraint\n\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n\n      if (this.constrainResolution_ || resolution < view.getMinResolution() || resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction);\n\nexport default PinchZoom;","/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\n\nvar ImageBase =\n/*@__PURE__*/\nfunction (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n    EventTarget.call(this);\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n\n    this.extent = extent;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n\n    this.resolution = resolution;\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n\n    this.state = state;\n  }\n\n  if (EventTarget) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create(EventTarget && EventTarget.prototype);\n  ImageBase.prototype.constructor = ImageBase;\n  /**\n   * @protected\n   */\n\n  ImageBase.prototype.changed = function changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n\n\n  ImageBase.prototype.getExtent = function getExtent() {\n    return this.extent;\n  };\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n\n\n  ImageBase.prototype.getImage = function getImage() {\n    return abstract();\n  };\n  /**\n   * @return {number} PixelRatio.\n   */\n\n\n  ImageBase.prototype.getPixelRatio = function getPixelRatio() {\n    return this.pixelRatio_;\n  };\n  /**\n   * @return {number} Resolution.\n   */\n\n\n  ImageBase.prototype.getResolution = function getResolution() {\n    return (\n      /** @type {number} */\n      this.resolution\n    );\n  };\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n\n\n  ImageBase.prototype.getState = function getState() {\n    return this.state;\n  };\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n\n\n  ImageBase.prototype.load = function load() {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget);\n\nexport default ImageBase;","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\nvar ImageCanvas =\n/*@__PURE__*/\nfunction (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    this.canvas_ = canvas;\n    /**\n     * @private\n     * @type {Error}\n     */\n\n    this.error_ = null;\n  }\n\n  if (ImageBase) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create(ImageBase && ImageBase.prototype);\n  ImageCanvas.prototype.constructor = ImageCanvas;\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n\n  ImageCanvas.prototype.getError = function getError() {\n    return this.error_;\n  };\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n\n\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n\n    this.changed();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  ImageCanvas.prototype.load = function load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n\n\n  ImageCanvas.prototype.getImage = function getImage() {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase);\n\nexport default ImageCanvas;","/**\n * @module ol/render/Event\n */\nimport Event from '../events/Event.js';\n\nvar RenderEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n    Event.call(this, type);\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n\n    this.vectorContext = opt_vectorContext;\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n\n    this.frameState = opt_frameState;\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n\n    this.context = opt_context;\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n\n    this.glContext = opt_glContext;\n  }\n\n  if (Event) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create(Event && Event.prototype);\n  RenderEvent.prototype.constructor = RenderEvent;\n  return RenderEvent;\n}(Event);\n\nexport default RenderEvent;","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext() {};\n\nVectorContext.prototype.drawCustom = function drawCustom(geometry, feature, renderer) {};\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\n\n\nVectorContext.prototype.drawGeometry = function drawGeometry(geometry) {};\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\n\n\nVectorContext.prototype.setStyle = function setStyle(style) {};\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawCircle = function drawCircle(circleGeometry, feature) {};\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\n\n\nVectorContext.prototype.drawFeature = function drawFeature(feature, style) {};\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection(geometryCollectionGeometry, feature) {};\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawLineString = function drawLineString(lineStringGeometry, feature) {};\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString(multiLineStringGeometry, feature) {};\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint(multiPointGeometry, feature) {};\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon(multiPolygonGeometry, feature) {};\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawPoint = function drawPoint(pointGeometry, feature) {};\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawPolygon = function drawPolygon(polygonGeometry, feature) {};\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\n\n\nVectorContext.prototype.drawText = function drawText(geometry, feature) {};\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\n\n\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle(fillStyle, strokeStyle) {};\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\n\n\nVectorContext.prototype.setImageStyle = function setImageStyle(imageStyle, opt_declutterGroup) {};\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\n\n\nVectorContext.prototype.setTextStyle = function setTextStyle(textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { CANVAS_LINE_DASH } from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\n\nvar CanvasImmediateRenderer =\n/*@__PURE__*/\nfunction (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.context_ = context;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    this.extent_ = extent;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.transform_ = transform;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.viewRotation_ = viewRotation;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    this.contextFillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    this.contextStrokeState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n\n    this.contextTextState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    this.fillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    this.strokeState_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n\n    this.image_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageAnchorX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageAnchorY_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageHeight_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageOpacity_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageOriginX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageOriginY_ = 0;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.imageRotateWithView_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageRotation_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageScale_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.imageWidth_ = 0;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this.text_ = '';\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.textOffsetX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.textOffsetY_ = 0;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.textRotateWithView_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.textRotation_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.textScale_ = 0;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    this.textFillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    this.textStrokeState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n\n    this.textState_ = null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.pixelCoordinates_ = [];\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  if (VectorContext) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create(VectorContext && VectorContext.prototype);\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n\n    var rotation = this.imageRotation_;\n\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n    }\n\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n\n\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n\n    if (close) {\n      length -= 2;\n    }\n\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n\n    if (close) {\n      context.closePath();\n    }\n\n    return end;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_(flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n\n    return offset;\n  };\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n\n      var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n\n      if (this.fillState_) {\n        context.fill();\n      }\n\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n\n\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry(geometry) {\n    var type = geometry.getType();\n\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n        /** @type {import(\"../../geom/Point.js\").default} */\n        geometry);\n        break;\n\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n        /** @type {import(\"../../geom/LineString.js\").default} */\n        geometry);\n        break;\n\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n        /** @type {import(\"../../geom/Polygon.js\").default} */\n        geometry);\n        break;\n\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n        /** @type {import(\"../../geom/MultiPoint.js\").default} */\n        geometry);\n        break;\n\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */\n        geometry);\n        break;\n\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n        geometry);\n        break;\n\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n        /** @type {import(\"../../geom/GeometryCollection.js\").default} */\n        geometry);\n        break;\n\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n        /** @type {import(\"../../geom/Circle.js\").default} */\n        geometry);\n        break;\n\n      default:\n    }\n  };\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature(feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection(geometry) {\n    var geometries = geometry.getGeometriesArray();\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint(geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint(geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n      context.stroke();\n    }\n\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString(geometry) {\n    var geometryExtent = geometry.getExtent();\n\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends =\n      /** @type {Array<number>} */\n      geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n\n      context.stroke();\n    }\n\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(), 0,\n      /** @type {Array<number>} */\n      geometry.getEnds(), geometry.getStride());\n\n      if (this.fillState_) {\n        context.fill();\n      }\n\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n\n      if (this.fillState_) {\n        context.fill();\n      }\n\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_(fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_(strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n\n    if (!contextStrokeState) {\n      context.lineCap =\n      /** @type {CanvasLineCap} */\n      strokeState.lineCap;\n\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n\n      context.lineJoin =\n      /** @type {CanvasLineJoin} */\n      strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap =\n        /** @type {CanvasLineCap} */\n        strokeState.lineCap;\n      }\n\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin =\n        /** @type {CanvasLineJoin} */\n        strokeState.lineJoin;\n      }\n\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit = strokeState.miterLimit;\n      }\n\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n\n\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_(textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ? textState.textAlign : defaultTextAlign;\n\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign =\n      /** @type {CanvasTextAlign} */\n      textAlign;\n      context.textBaseline =\n      /** @type {CanvasTextBaseline} */\n      textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign =\n        /** @type {CanvasTextAlign} */\n        textAlign;\n      }\n\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n        /** @type {CanvasTextBaseline} */\n        textState.textBaseline;\n      }\n    }\n  };\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle)\n      };\n    }\n\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor(); // FIXME pixel ratio\n\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n\n\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle)\n        };\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ? textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ? textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ? textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ? textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ? textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ? textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ? textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ = textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ = textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ? textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext);\n\nexport default CanvasImmediateRenderer;","/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray } from '../transform.js';\n/**\n * @abstract\n */\n\nvar MapRenderer =\n/*@__PURE__*/\nfunction (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n\n    this.map_ = map;\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n\n    this.layerRenderers_ = {};\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n\n    this.layerRendererListeners_ = {};\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n\n    this.layerRendererConstructors_ = [];\n  }\n\n  if (Disposable) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create(Disposable && Disposable.prototype);\n  MapRenderer.prototype.constructor = MapRenderer;\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent(type, frameState) {\n    abstract();\n  };\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n\n\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers(constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n\n\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D(frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n    composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n    invertTransform(transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n  /**\n   * Removes all layer renderers.\n   */\n\n\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers() {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n\n\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n    var translatedCoordinate = coordinate;\n\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source =\n        /** @type {import(\"../layer/Layer.js\").default} */\n        layer.getSource();\n\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n\n        if (result) {\n          return result;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n\n\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n\n\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n    return hasFeature !== undefined;\n  };\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n\n\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer(layer) {\n    var layerKey = getUid(layer);\n\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n\n      return renderer;\n    }\n  };\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n\n\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey(layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n\n\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers() {\n    return this.layerRenderers_;\n  };\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n\n\n  MapRenderer.prototype.getMap = function getMap() {\n    return this.map_;\n  };\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n\n\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_() {\n    this.map_.render();\n  };\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n\n\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_(layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n    return layerRenderer;\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n\n\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_(map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n\n\n  MapRenderer.prototype.renderFrame = function renderFrame(frameState) {\n    abstract();\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n\n\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache(frameState) {\n    frameState.postRenderFunctions.push(\n    /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */\n    expireIconCache);\n  };\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n\n\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers(frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */\n        this.removeUnusedLayerRenderers_.bind(this));\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable);\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\n\n\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\n\n\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;","/**\n * @module ol/renderer/canvas/Map\n */\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\nimport { includes, stableSort } from '../../array.js';\nimport { CLASS_UNSELECTABLE } from '../../css.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { visibleAtResolution } from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, { sortByZIndex } from '../Map.js';\nimport SourceState from '../../source/State.js';\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\n\nexport var layerRendererConstructors = [];\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\n\nvar CanvasMapRenderer =\n/*@__PURE__*/\nfunction (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n    var container = map.getViewport();\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.context_ = createCanvasContext2D();\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    this.canvas_ = this.context_.canvas;\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.renderedVisible_ = true;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.transform_ = createTransform();\n  }\n\n  if (MapRenderer) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create(MapRenderer && MapRenderer.prototype);\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent(type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n      var transform = this.getTransform(frameState);\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio, extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext, frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n\n\n  CanvasMapRenderer.prototype.getTransform = function getTransform(frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer =\n      /** @type {import(\"./Layer.js\").default} */\n      this.getLayerRenderer(layer);\n\n      if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    var i;\n\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer =\n        /** @type {import(\"./Layer.js\").default} */\n        this.getLayerRenderer(layer);\n        result = layerRenderer.forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n\n        if (result) {\n          return result;\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers(constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer);\n\nexport default CanvasMapRenderer;","/**\n * @module ol/renderer/canvas/Layer\n */\nimport { abstract } from '../../util.js';\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { TRUE } from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\n\nvar CanvasLayerRenderer =\n/*@__PURE__*/\nfunction (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n    LayerRenderer.call(this, layer);\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.renderedResolution;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.transform_ = createTransform();\n  }\n\n  if (LayerRenderer) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create(LayerRenderer && LayerRenderer.prototype);\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n\n  CanvasLayerRenderer.prototype.clip = function clip(context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n\n\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_(type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ? opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState, context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n\n\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n\n\n  CanvasLayerRenderer.prototype.postCompose = function postCompose(context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n\n\n  CanvasLayerRenderer.prototype.preCompose = function preCompose(context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n\n\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent(context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n\n\n  CanvasLayerRenderer.prototype.getTransform = function getTransform(frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n\n\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame(frameState, layerState, context) {\n    abstract();\n  };\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n\n\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer);\n\nexport default CanvasLayerRenderer;","/**\n * @module ol/renderer/Layer\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer =\n/*@__PURE__*/\nfunction (Observable) {\n  function LayerRenderer(layer) {\n    Observable.call(this);\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n\n    this.layer_ = layer;\n  }\n\n  if (Observable) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create(Observable && Observable.prototype);\n  LayerRenderer.prototype.constructor = LayerRenderer;\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function (zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n\n\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback) {};\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n\n\n  LayerRenderer.prototype.getLayer = function getLayer() {\n    return this.layer_;\n  };\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n\n\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_(event) {\n    var image =\n    /** @type {import(\"../Image.js\").default} */\n    event.target;\n\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n\n\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate(coordinate, frameState) {\n    return false;\n  };\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n\n\n  LayerRenderer.prototype.loadImage = function loadImage(image) {\n    var imageState = image.getState();\n\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n\n    return imageState == ImageState.LOADED;\n  };\n  /**\n   * @protected\n   */\n\n\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible() {\n    var layer = this.getLayer();\n\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n\n\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function (tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n      /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */\n      postRenderFunction);\n    }\n  };\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n\n\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles(usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n\n\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback, opt_this) {\n    var tileSourceKey = getUid(tileSource);\n\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey, tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable);\n\nexport default LayerRenderer;","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport { abstract } from '../../util.js';\nimport { scale as scaleCoordinate } from '../../coordinate.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { create as createTransform, apply as applyTransform } from '../../transform.js';\n/**\n * @abstract\n */\n\nvar IntermediateCanvasRenderer =\n/*@__PURE__*/\nfunction (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n    CanvasLayerRenderer.call(this, layer);\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.coordinateToCanvasPixelTransform = createTransform();\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.hitCanvasContext_ = null;\n  }\n\n  if (CanvasLayerRenderer) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create(CanvasLayerRenderer && CanvasLayerRenderer.prototype);\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n  /**\n   * @inheritDoc\n   */\n\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame(frameState, layerState, context) {\n    this.preCompose(context, frameState);\n    var image = this.getImage();\n\n    if (image) {\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined && !containsExtent(extent, frameState.extent) && intersects(extent, frameState.extent);\n\n      if (clipped) {\n        this.clip(context, frameState,\n        /** @type {import(\"../../extent.js\").Extent} */\n        extent);\n      }\n\n      var imageTransform = this.getImageTransform(); // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity; // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n\n\n  IntermediateCanvasRenderer.prototype.getImage = function getImage() {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n\n\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform() {\n    return abstract();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer);\n\nexport default IntermediateCanvasRenderer;","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getIntersection, getWidth, isEmpty } from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport { assign } from '../../obj.js';\nimport { layerRendererConstructors } from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\n\nvar CanvasImageLayerRenderer =\n/*@__PURE__*/\nfunction (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    IntermediateCanvasRenderer.call(this, imageLayer);\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n\n    this.image_ = null;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.imageTransform_ = createTransform();\n    /**\n     * @type {!Array<string>}\n     */\n\n    this.skippedFeatures_ = [];\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ =\n          /** @type {import(\"./VectorLayer.js\").default} */\n          new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n  }\n\n  if (IntermediateCanvasRenderer) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create(IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype);\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n  /**\n   * @inheritDoc\n   */\n\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal() {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageLayerRenderer.prototype.getImage = function getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform() {\n    return this.imageTransform_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var image;\n    var imageLayer =\n    /** @type {import(\"../../layer/Image.js\").default} */\n    this.getLayer();\n    var imageSource =\n    /** @type {import(\"../../source/Image.js\").default} */\n    imageLayer.getSource();\n    var hints = frameState.viewHints;\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n\n      var skippedFeatures = this.skippedFeatures_;\n\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState =\n        /** @type {import(\"../../PluggableMap.js\").FrameState} */\n        assign({}, frameState, {\n          size: [getWidth(renderedExtent) / viewResolution, getHeight(renderedExtent) / viewResolution],\n          viewState:\n          /** @type {import(\"../../View.js\").State} */\n          assign({}, frameState.viewState, {\n            rotation: 0\n          })\n        });\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) && (vectorRenderer.replayGroupChanged || !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n      }\n\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_, pixelRatio * size[0] / 2, pixelRatio * size[1] / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform, pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5], pixelRatio / viewResolution, -pixelRatio / viewResolution, 0, -viewCenter[0], -viewCenter[1]);\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer);\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n\n\nCanvasImageLayerRenderer['handles'] = function (layer) {\n  return layer.getType() === LayerType.IMAGE || layer.getType() === LayerType.VECTOR &&\n  /** @type {import(\"../../layer/Vector.js\").default} */\n  layer.getRenderMode() === VectorRenderType.IMAGE;\n};\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\n\n\nCanvasImageLayerRenderer['create'] = function (mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(\n  /** @type {import(\"../../layer/Image.js\").default} */\n  layer);\n};\n\nexport default CanvasImageLayerRenderer;","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { containsExtent, createEmpty, equals, getIntersection, isEmpty } from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\n\nvar CanvasTileLayerRenderer =\n/*@__PURE__*/\nfunction (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n    IntermediateCanvasRenderer.call(this, tileLayer);\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.context = opt_noContext ? null : createCanvasContext2D();\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.oversampling_;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    this.renderedExtent_ = null;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.renderedRevision;\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n\n    this.renderedTiles = [];\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.newTiles_ = false;\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    this.tmpExtent = createEmpty();\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.imageTransform_ = createTransform();\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.zDirection = 0;\n  }\n\n  if (IntermediateCanvasRenderer) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create(IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype);\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_(tile) {\n    var tileLayer =\n    /** @type {import(\"../../layer/Tile.js\").default} */\n    this.getLayer();\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED || tileState == TileState.EMPTY || tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.getTile = function getTile(z, x, y, pixelRatio, projection) {\n    var tileLayer =\n    /** @type {import(\"../../layer/Tile.js\").default} */\n    this.getLayer();\n    var tileSource =\n    /** @type {import(\"../../source/Tile.js\").default} */\n    tileLayer.getSource();\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n\n    return tile;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n    var tileLayer =\n    /** @type {import(\"../../layer/Tile.js\").default} */\n    this.getLayer();\n    var tileSource =\n    /** @type {import(\"../../source/Tile.js\").default} */\n    tileLayer.getSource();\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n    var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (this.newTiles_ || !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) || this.renderedRevision != sourceRevision || oversampling != this.oversampling_ || !animatingOrInteracting && renderedResolution != this.renderedResolution)) {\n      var context = this.context;\n\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_) || this.renderedRevision != sourceRevision) {\n            context.clearRect(0, 0, width, height);\n          }\n\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function (a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_, pixelRatio * size[0] / 2, pixelRatio * size[1] / 2, scale, scale, 0, (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio, (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform, pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5], pixelRatio / viewResolution, -pixelRatio / viewResolution, 0, -viewCenter[0], -viewCenter[1]);\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n    return this.renderedTiles.length > 0;\n  };\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n\n    if (!image) {\n      return;\n    }\n\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer =\n    /** @type {import(\"../../layer/Tile.js\").default} */\n    this.getLayer();\n    var tileSource =\n    /** @type {import(\"../../source/Tile.js\").default} */\n    tileLayer.getSource();\n\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n\n    var alphaChanged = alpha !== this.context.globalAlpha;\n\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n\n    this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasTileLayerRenderer.prototype.getImage = function getImage() {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform() {\n    return this.imageTransform_;\n  };\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n\n\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage(tile) {\n    return (\n      /** @type {import(\"../../ImageTile.js\").default} */\n      tile.getImage()\n    );\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer);\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n\n\nCanvasTileLayerRenderer['handles'] = function (layer) {\n  return layer.getType() === LayerType.TILE;\n};\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\n\n\nCanvasTileLayerRenderer['create'] = function (mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(\n  /** @type {import(\"../../layer/Tile.js\").default} */\n  layer);\n};\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\n\n\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;","/**\n * @module ol/render/ReplayGroup\n */\nimport { abstract } from '../util.js';\n/**\n * Base class for replay groups.\n */\n\nvar ReplayGroup = function ReplayGroup() {};\n\nReplayGroup.prototype.getReplay = function getReplay(zIndex, replayType) {\n  return abstract();\n};\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\n\n\nReplayGroup.prototype.isEmpty = function isEmpty() {\n  return abstract();\n};\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\n\n\nReplayGroup.prototype.addDeclutter = function addDeclutter(group) {\n  return abstract();\n};\n\nexport default ReplayGroup;","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\n\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = []; // Keep text upright\n\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n  var numChars = text.length;\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += delta > Math.PI ? -2 * Math.PI : delta < -Math.PI ? 2 * Math.PI : 0;\n\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n\n      previousAngle = angle;\n    }\n\n    startM += charLength;\n  }\n\n  return result;\n}","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\n\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\n\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\n\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\n\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n/**\n * @const\n * @type {Array<ReplayType>}\n */\n\nexport var ORDER = [ReplayType.POLYGON, ReplayType.CIRCLE, ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT];\n/**\n * @const\n * @enum {number}\n */\n\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;","/**\n * @module ol/render/canvas/Replay\n */\nimport { getUid } from '../../util.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship, createEmpty, createOrUpdate, createOrUpdateEmpty, extend, extendCoordinate, intersects } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { CANVAS_LINE_DASH } from '../../has.js';\nimport { isEmpty } from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport { drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from '../replay.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\n\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\n\nvar tmpTransform = createTransform();\n\nvar CanvasReplay =\n/*@__PURE__*/\nfunction (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n    /**\n     * @type {?}\n     */\n\n    this.declutterTree = declutterTree;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.tolerance = tolerance;\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    this.maxExtent = maxExtent;\n    /**\n     * @protected\n     * @type {boolean}\n     */\n\n    this.overlaps = overlaps;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.pixelRatio = pixelRatio;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    this.maxLineWidth = 0;\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n\n    this.resolution = resolution;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.alignFill_;\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n\n    this.beginGeometryInstruction1_ = null;\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n\n    this.beginGeometryInstruction2_ = null;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    this.bufferedMaxExtent_ = null;\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n\n    this.instructions = [];\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n\n    this.coordinates = [];\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n\n    this.coordinateCache_ = {};\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n\n    this.renderedTransform_ = createTransform();\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n\n    this.hitDetectionInstructions = [];\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.pixelCoordinates_ = null;\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n\n    this.state =\n    /** @type {import(\"../canvas.js\").FillStrokeState} */\n    {};\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.viewRotation_ = 0;\n  }\n\n  if (VectorContext) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create(VectorContext && VectorContext.prototype);\n  CanvasReplay.prototype.constructor = CanvasReplay;\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n\n    if (fillInstruction) {\n      this.alignFill_ =\n      /** @type {boolean} */\n      fillInstruction[2];\n      this.fill_(context);\n    }\n\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context,\n      /** @type {Array<*>} */\n      strokeInstruction);\n      context.stroke();\n    }\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n\n\n  CanvasReplay.prototype.replayImage_ = function replayImage_(context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n    var w = width + originX > image.width ? image.width - originX : width;\n    var h = height + originY > image.height ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n\n    var p4;\n\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? strokeInstruction[2] * scale / 2 : 0;\n    var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 && tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ? [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] : null;\n\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array<*>} */\n        fillInstruction,\n        /** @type {Array<*>} */\n        strokeInstruction);\n      }\n\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n\n\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio(dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n      return dash * pixelRatio;\n    });\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n\n\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n\n    if (skipFirst) {\n      offset += stride;\n    }\n\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n    var i, lastRel, nextRel;\n\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    } // Last coordinate equals first or only one point to append:\n\n\n    if (closed && skipped || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n\n    return myEnd;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n\n\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_(flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n\n    return offset;\n  };\n  /**\n   * @inheritDoc.\n   */\n\n\n  CanvasReplay.prototype.drawCustom = function drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry =\n      /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n      geometry;\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n\n      this.instructions.push([CanvasInstruction.CUSTOM, replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = type == GeometryType.POLYGON ?\n      /** @type {import(\"../../geom/Polygon.js\").default} */\n      geometry.getOrientedFlatCoordinates() : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */\n      geometry.getEnds(), stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM, replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM, replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM, replayBegin, replayEnd, geometry, renderer]);\n    }\n\n    this.endGeometry(geometry, feature);\n  };\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n\n\n  CanvasReplay.prototype.beginGeometry = function beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  CanvasReplay.prototype.finish = function finish() {};\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n\n\n  CanvasReplay.prototype.fill_ = function fill_(context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n\n    context.fill();\n\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n\n\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n    /** @type {import(\"../../colorlike.js\").ColorLike} */\n    instruction[1];\n    context.lineWidth =\n    /** @type {number} */\n    instruction[2];\n    context.lineCap =\n    /** @type {CanvasLineCap} */\n    instruction[3];\n    context.lineJoin =\n    /** @type {CanvasLineJoin} */\n    instruction[4];\n    context.miterLimit =\n    /** @type {number} */\n    instruction[5];\n\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset =\n      /** @type {number} */\n      instruction[7];\n      context.setLineDash(\n      /** @type {Array<number>} */\n      instruction[6]);\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n\n\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_(declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX:\n          /** @type {number} */\n          declutterGroup[0],\n          minY:\n          /** @type {number} */\n          declutterGroup[1],\n          maxX:\n          /** @type {number} */\n          declutterGroup[2],\n          maxY:\n          /** @type {number} */\n          declutterGroup[3],\n          value: feature\n        };\n\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData =\n            /** @type {Array} */\n            declutterGroup[j];\n\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n              }\n\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n\n\n  CanvasReplay.prototype.replay_ = function replay_(context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n\n      pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n\n    var ii = instructions.length; // end of instructions\n\n    var d = 0; // data index\n\n    var dd; // end of per-instruction data\n\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n    var state =\n    /** @type {import(\"../../render.js\").State} */\n    {\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    }; // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var\n    /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */\n    feature;\n    var x, y;\n\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type =\n      /** @type {CanvasInstruction} */\n      instruction[0];\n\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature =\n          /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */\n          instruction[1];\n\n          if (skipFeatures && skippedFeaturesHash[getUid(feature)] || !feature.getGeometry()) {\n            i =\n            /** @type {number} */\n            instruction[2];\n          } else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n            i =\n            /** @type {number} */\n            instruction[2] + 1;\n          } else {\n            ++i;\n          }\n\n          break;\n\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n\n          ++i;\n          break;\n\n        case CanvasInstruction.CIRCLE:\n          d =\n          /** @type {number} */\n          instruction[1];\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n\n        case CanvasInstruction.CUSTOM:\n          d =\n          /** @type {number} */\n          instruction[1];\n          dd = instruction[2];\n          var geometry =\n          /** @type {import(\"../../geom/SimpleGeometry.js\").default} */\n          instruction[3];\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n\n          var coords = coordinateCache[i];\n\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n\n          renderer(coords, state);\n          ++i;\n          break;\n\n        case CanvasInstruction.DRAW_IMAGE:\n          d =\n          /** @type {number} */\n          instruction[1];\n          dd =\n          /** @type {number} */\n          instruction[2];\n          image =\n          /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n          instruction[3]; // Remaining arguments in DRAW_IMAGE are in alphabetical order\n\n          anchorX =\n          /** @type {number} */\n          instruction[4];\n          anchorY =\n          /** @type {number} */\n          instruction[5];\n          declutterGroup = featureCallback ? null :\n          /** @type {import(\"../canvas.js\").DeclutterGroup} */\n          instruction[6];\n          var height =\n          /** @type {number} */\n          instruction[7];\n          var opacity =\n          /** @type {number} */\n          instruction[8];\n          var originX =\n          /** @type {number} */\n          instruction[9];\n          var originY =\n          /** @type {number} */\n          instruction[10];\n          var rotateWithView =\n          /** @type {boolean} */\n          instruction[11];\n          var rotation =\n          /** @type {number} */\n          instruction[12];\n          var scale =\n          /** @type {number} */\n          instruction[13];\n          var width =\n          /** @type {number} */\n          instruction[14];\n          var padding = void 0,\n              backgroundFill = void 0,\n              backgroundStroke = void 0;\n\n          if (instruction.length > 16) {\n            padding =\n            /** @type {Array<number>} */\n            instruction[15];\n            backgroundFill =\n            /** @type {boolean} */\n            instruction[16];\n            backgroundStroke =\n            /** @type {boolean} */\n            instruction[17];\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n\n          for (; d < dd; d += 2) {\n            this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ?\n            /** @type {Array<*>} */\n            lastFillInstruction : null, backgroundStroke ?\n            /** @type {Array<*>} */\n            lastStrokeInstruction : null);\n          }\n\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n\n        case CanvasInstruction.DRAW_CHARS:\n          var begin =\n          /** @type {number} */\n          instruction[1];\n          var end =\n          /** @type {number} */\n          instruction[2];\n          var baseline =\n          /** @type {number} */\n          instruction[3];\n          declutterGroup = featureCallback ? null :\n          /** @type {import(\"../canvas.js\").DeclutterGroup} */\n          instruction[4];\n          var overflow =\n          /** @type {number} */\n          instruction[5];\n          var fillKey =\n          /** @type {string} */\n          instruction[6];\n          var maxAngle =\n          /** @type {number} */\n          instruction[7];\n          var measure =\n          /** @type {function(string):number} */\n          instruction[8];\n          var offsetY =\n          /** @type {number} */\n          instruction[9];\n          var strokeKey =\n          /** @type {string} */\n          instruction[10];\n          var strokeWidth =\n          /** @type {number} */\n          instruction[11];\n          var text =\n          /** @type {string} */\n          instruction[12];\n          var textKey =\n          /** @type {string} */\n          instruction[13];\n          var textScale =\n          /** @type {number} */\n          instruction[14];\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay =\n            /** @type {?} */\n            this;\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n\n            if (parts) {\n              var c = void 0,\n                  cc = void 0,\n                  chars = void 0,\n                  label = void 0,\n                  part = void 0;\n\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n\n                  chars =\n                  /** @type {string} */\n                  part[4];\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX =\n                  /** @type {number} */\n                  part[2] + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                  /** @type {number} */\n                  part[0],\n                  /** @type {number} */\n                  part[1], label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */\n                  part[3], textScale, false, label.width, defaultPadding, null, null);\n                }\n              }\n\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n\n                  chars =\n                  /** @type {string} */\n                  part[4];\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX =\n                  /** @type {number} */\n                  part[2];\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                  /** @type {number} */\n                  part[0],\n                  /** @type {number} */\n                  part[1], label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */\n                  part[3], textScale, false, label.width, defaultPadding, null, null);\n                }\n              }\n            }\n          }\n\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature =\n            /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */\n            instruction[1];\n            var result = featureCallback(feature);\n\n            if (result) {\n              return result;\n            }\n          }\n\n          ++i;\n          break;\n\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n\n          ++i;\n          break;\n\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d =\n          /** @type {number} */\n          instruction[1];\n          dd =\n          /** @type {number} */\n          instruction[2];\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = x + 0.5 | 0;\n          roundY = y + 0.5 | 0;\n\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = x + 0.5 | 0;\n            roundY = y + 0.5 | 0;\n\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n\n          ++i;\n          break;\n\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          instruction[1];\n          ++i;\n          break;\n\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n\n          this.setStrokeStyle_(context,\n          /** @type {Array<*>} */\n          instruction);\n          ++i;\n          break;\n\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n\n          ++i;\n          break;\n\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n\n          break;\n      }\n    }\n\n    if (pendingFill) {\n      this.fill_(context);\n    }\n\n    if (pendingStroke) {\n      context.stroke();\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n\n\n  CanvasReplay.prototype.replay = function replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n\n\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection(context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n  /**\n   * Reverse the hit detection instructions.\n   */\n\n\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions() {\n    var hitDetectionInstructions = this.hitDetectionInstructions; // step 1 - reverse array\n\n    hitDetectionInstructions.reverse(); // step 2 - reverse instructions within geometry blocks\n\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type =\n      /** @type {CanvasInstruction} */\n      instruction[0];\n\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle(fillStyle, strokeStyle) {\n    var state = this.state;\n\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ? strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth; // invalidate the buffered max extent cache\n\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n\n\n  CanvasReplay.prototype.createFill = function createFill(state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n\n    return fillInstruction;\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n\n\n  CanvasReplay.prototype.applyStroke = function applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n\n\n  CanvasReplay.prototype.createStroke = function createStroke(state) {\n    return [CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap, state.lineJoin, state.miterLimit, this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio];\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n\n\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle(state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n\n      state.currentFillStyle = fillStyle;\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n\n\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle(state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n\n    if (state.currentStrokeStyle != strokeStyle || state.currentLineCap != lineCap || lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash) || state.currentLineDashOffset != lineDashOffset || state.currentLineJoin != lineJoin || state.currentLineWidth != lineWidth || state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n\n\n  CanvasReplay.prototype.endGeometry = function endGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n\n\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext);\n\nexport default CanvasReplay;","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay =\n/*@__PURE__*/\nfunction (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n\n    this.declutterGroup_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n\n    this.hitDetectionImage_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n\n    this.image_ = null;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.anchorX_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.anchorY_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.height_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.opacity_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.originX_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.originY_ = undefined;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n\n    this.rotateWithView_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.rotation_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.scale_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.width_ = undefined;\n  }\n\n  if (CanvasReplay) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create(CanvasReplay && CanvasReplay.prototype);\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_(flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageReplay.prototype.drawPoint = function drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_, // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_, this.originX_, this.originY_, this.rotateWithView_, this.rotation_, this.scale_ * this.pixelRatio, this.width_]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_, // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_, this.originX_, this.originY_, this.rotateWithView_, this.rotation_, this.scale_, this.width_]);\n    this.endGeometry(pointGeometry, feature);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_, // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_, this.originX_, this.originY_, this.rotateWithView_, this.rotation_, this.scale_ * this.pixelRatio, this.width_]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_, // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_, this.originX_, this.originY_, this.rotateWithView_, this.rotation_, this.scale_, this.width_]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageReplay.prototype.finish = function finish() {\n    this.reverseHitDetectionInstructions(); // FIXME this doesn't really protect us against further calls to draw*Geometry\n\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle(imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ =\n    /** @type {import(\"../canvas.js\").DeclutterGroup} */\n    declutterGroup;\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay);\n\nexport default CanvasImageReplay;","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay =\n/*@__PURE__*/\nfunction (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if (CanvasReplay) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create(CanvasReplay && CanvasReplay.prototype);\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString(lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString(multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasLineStringReplay.prototype.finish = function finish() {\n    var state = this.state;\n\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n  /**\n   * @inheritDoc.\n   */\n\n\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke(state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay);\n\nexport default CanvasLineStringReplay;","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport { asString } from '../../color.js';\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasPolygonReplay =\n/*@__PURE__*/\nfunction (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if (CanvasReplay) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create(CanvasReplay && CanvasReplay.prototype);\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n\n      offset = end;\n    }\n\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n\n    return offset;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle(circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, asString(defaultFillStyle)]);\n    }\n\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n\n    this.endGeometry(circleGeometry, feature);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon(polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, asString(defaultFillStyle)]);\n    }\n\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon(multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_FILL_STYLE, asString(defaultFillStyle)]);\n    }\n\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset]);\n    }\n\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasPolygonReplay.prototype.finish = function finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null; // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n\n    var tolerance = this.tolerance;\n\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n\n\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_(geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay);\n\nexport default CanvasPolygonReplay;","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n\n          m = 0;\n          start = i - stride;\n        }\n      }\n\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n\n    x1 = x2;\n    y1 = y2;\n  }\n\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}","/**\n * @module ol/render/canvas/TextReplay\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { CANVAS_LINE_DASH } from '../../has.js';\nimport { labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport { TEXT_ALIGN } from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay =\n/*@__PURE__*/\nfunction (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n\n    this.declutterGroup_;\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n\n    this.labels_ = null;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this.text_ = '';\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.textOffsetX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.textOffsetY_ = 0;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n\n    this.textRotateWithView_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.textRotation_ = 0;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n\n    this.textFillState_ = null;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n\n    this.fillStates = {};\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n\n    this.textStrokeState_ = null;\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n\n    this.strokeStates = {};\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n\n    this.textState_ =\n    /** @type {import(\"../canvas.js\").TextState} */\n    {};\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n\n    this.textStates = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this.textKey_ = '';\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this.fillKey_ = '';\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this.strokeKey_ = '';\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n\n    this.widths_ = {};\n    labelCache.prune();\n  }\n\n  if (CanvasReplay) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create(CanvasReplay && CanvasReplay.prototype);\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n  /**\n   * @inheritDoc\n   */\n\n  CanvasTextReplay.prototype.drawText = function drawText(geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n\n    if (this.text_ === '' || !textState || !fillState && !strokeState) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n\n      this.endGeometry(geometry, feature);\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n          /** @type {import(\"../../geom/LineString.js\").default} */\n          geometry.getFlatMidpoint();\n          break;\n\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n          /** @type {import(\"../../geom/Circle.js\").default} */\n          geometry.getCenter();\n          break;\n\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */\n          geometry.getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n\n        case GeometryType.POLYGON:\n          flatCoordinates =\n          /** @type {import(\"../../geom/Polygon.js\").default} */\n          geometry.getFlatInteriorPoint();\n\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n\n          stride = 3;\n          break;\n\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n          geometry.getFlatInteriorPoints();\n          flatCoordinates = [];\n\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n\n          end = flatCoordinates.length;\n\n          if (end == 0) {\n            return;\n          }\n\n          break;\n\n        default:\n      }\n\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n\n\n  CanvasTextReplay.prototype.getImage = function getImage(text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = width + strokeWidth;\n      var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n\n      context.font = textState.font;\n\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap =\n        /** @type {CanvasLineCap} */\n        strokeState.lineCap;\n        context.lineJoin =\n        /** @type {CanvasLineJoin} */\n        strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = 0.5 - align;\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n\n    return labelCache.get(key);\n  };\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n\n\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_(label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end, label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio, this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_, 1, label.width, textState.padding == defaultPadding ? defaultPadding : textState.padding.map(function (p) {\n      return p * pixelRatio;\n    }), !!textState.backgroundFill, !!textState.backgroundStroke]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end, label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio, this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_, 1 / pixelRatio, label.width, textState.padding, !!textState.backgroundFill, !!textState.backgroundStroke]);\n  };\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n\n\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_(begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n    var strokeKey = this.strokeKey_;\n\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] =\n        /** @type {import(\"../canvas.js\").StrokeState} */\n        {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        };\n      }\n    }\n\n    var textKey = this.textKey_;\n\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] =\n      /** @type {import(\"../canvas.js\").TextState} */\n      {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      };\n    }\n\n    var fillKey = this.fillKey_;\n\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] =\n        /** @type {import(\"../canvas.js\").FillState} */\n        {\n          fillStyle: fillState.fillStyle\n        };\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n\n    this.instructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, declutterGroup, textState.overflow, fillKey, textState.maxAngle, function (text) {\n      var width = widths[text];\n\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n\n      return width * textScale * pixelRatio;\n    }, offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, declutterGroup, textState.overflow, fillKey, textState.maxAngle, function (text) {\n      var width = widths[text];\n\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n\n      return width * textScale;\n    }, offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio]);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle(textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ =\n      /** @type {import(\"../canvas.js\").DeclutterGroup} */\n      declutterGroup;\n      var textFillStyle = textStyle.getFill();\n\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n\n        if (!fillState) {\n          fillState = this.textFillState_ =\n          /** @type {import(\"../canvas.js\").FillState} */\n          {};\n        }\n\n        fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ =\n          /** @type {import(\"../canvas.js\").StrokeState} */\n          {};\n        }\n\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset = lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth = lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit = miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n      this.strokeKey_ = strokeState ? (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) + strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth + strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' : '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ? typeof fillState.fillStyle == 'string' ? fillState.fillStyle : '|' + getUid(fillState.fillStyle) : '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay);\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\n\n\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n\n  return width;\n}\nexport default CanvasTextReplay;","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport { ORDER } from '../replay.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\n\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\nvar CanvasReplayGroup =\n/*@__PURE__*/\nfunction (ReplayGroup) {\n  function CanvasReplayGroup(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n    ReplayGroup.call(this);\n    /**\n     * Declutter tree.\n     * @private\n     */\n\n    this.declutterTree_ = declutterTree;\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n\n    this.declutterGroup_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.tolerance_ = tolerance;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    this.maxExtent_ = maxExtent;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.overlaps_ = overlaps;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.resolution_ = resolution;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.renderBuffer_ = opt_renderBuffer;\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n\n    this.replaysByZIndex_ = {};\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if (ReplayGroup) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create(ReplayGroup && ReplayGroup.prototype);\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n  /**\n   * @inheritDoc\n   */\n\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter(group) {\n    var declutter = null;\n\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */\n\n        declutter[4]++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n\n    return declutter;\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n\n\n  CanvasReplayGroup.prototype.clip = function clip(context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n\n\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays(replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  CanvasReplayGroup.prototype.finish = function finish() {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n\n\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n\n    var hitExtent;\n\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = void 0;\n\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) || declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n    /** @type {Array<number>} */\n\n\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    var i, j, replays, replay, result;\n\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n\n        if (replay !== undefined) {\n          if (declutterReplays && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n\n\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords(transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasReplayGroup.prototype.getReplay = function getReplay(zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n\n    var replay = replays[replayType];\n\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n\n    return replay;\n  };\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n\n\n  CanvasReplayGroup.prototype.getReplays = function getReplays() {\n    return this.replaysByZIndex_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1() {\n    return isEmpty(this.replaysByZIndex_);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n\n\n  CanvasReplayGroup.prototype.replay = function replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_replayTypes, opt_declutterReplays) {\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction); // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n\n    context.save();\n    this.clip(context, transform);\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n\n        if (replay !== undefined) {\n          if (opt_declutterReplays && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup);\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\n\n\nvar circleArrayCache = {\n  0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\n\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\n\n\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n    y++;\n    error += 1 + 2 * y;\n\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\n\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\nexport default CanvasReplayGroup;","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\n\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\n\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\n\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\n\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\n\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\n\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\n\n\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n  return loading;\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\n\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n\n  if (!geometry) {\n    return;\n  }\n\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries =\n    /** @type {import(\"../geom/GeometryCollection.js\").default} */\n    geometry.getGeometries();\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n\n    return;\n  }\n\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(\n  /** @type {import(\"../geom/SimpleGeometry.js\").default} */\n  geometry, feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\n\n\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\n\n\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n\n  var textStyle = style.getText();\n\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { labelCache, rotateAtOffset } from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\n\nvar CanvasVectorLayerRenderer =\n/*@__PURE__*/\nfunction (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n    CanvasLayerRenderer.call(this, vectorLayer);\n    /**\n     * Declutter tree.\n     * @private\n     */\n\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.dirty_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.renderedRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.renderedResolution_ = NaN;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    this.renderedExtent_ = createEmpty();\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n\n    this.renderedRenderOrder_ = null;\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n\n    this.replayGroup_ = null;\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n\n    this.replayGroupChanged = true;\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.context = createCanvasContext2D();\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  }\n\n  if (CanvasLayerRenderer) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create(CanvasLayerRenderer && CanvasLayerRenderer.prototype);\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n  /**\n   * @inheritDoc\n   */\n\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal() {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.compose = function compose(context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource =\n    /** @type {import(\"../../source/Vector.js\").default} */\n    this.getLayer().getSource();\n    var transform = this.getTransform(frameState, 0); // clipped rendering if layer extent is set\n\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n\n    if (clipped) {\n      this.clip(context, frameState,\n      /** @type {import(\"../../extent.js\").Extent} */\n      clipExtent);\n    }\n\n    var replayGroup = this.replayGroup_;\n\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n\n      var layer =\n      /** @type {import(\"../../layer/Vector.js\").default} */\n      this.getLayer();\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        } // resize and clear\n\n\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation, width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n\n      if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n\n        world = 0;\n        startX = extent[2];\n\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n\n      rotateAtOffset(replayContext, rotation, width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame(frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer =\n      /** @type {import(\"../../layer/Vector.js\").default} */\n      this.getLayer();\n      /** @type {!Object<string, boolean>} */\n\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @return {?} Callback result.\n       */\n      function (feature) {\n        var key = getUid(feature);\n\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n      return result;\n    }\n  };\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_(event) {\n    var layer = this.getLayer();\n\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {\n    var vectorLayer =\n    /** @type {import(\"../../layer/Vector.js\").default} */\n    this.getLayer();\n    var vectorSource =\n    /** @type {import(\"../../source/Vector.js\").default} */\n    vectorLayer.getSource();\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && !updateWhileAnimating && animating || !updateWhileInteracting && interacting) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() && !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ && this.renderedResolution_ == resolution && this.renderedRevision_ == vectorLayerRevision && this.renderedRenderOrder_ == vectorLayerRenderOrder && containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n    this.dirty_ = false;\n    var replayGroup = new CanvasReplayGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n\n    var render = function (feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n\n      if (styles) {\n        var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      function (feature) {\n        features.push(feature);\n      });\n      features.sort(vectorLayerRenderOrder);\n\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n\n    replayGroup.finish();\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n    this.replayGroupChanged = true;\n    return true;\n  };\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n\n\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1(feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n\n    var loading = false;\n\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(replayGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(replayGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n    }\n\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer);\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n\n\nCanvasVectorLayerRenderer['handles'] = function (layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\n\n\nCanvasVectorLayerRenderer['create'] = function (mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(\n  /** @type {import(\"../../layer/Vector.js\").default} */\n  layer);\n};\n\nexport default CanvasVectorLayerRenderer;","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport { getUid } from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects } from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport { equivalent as equivalentProjection } from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport { labelCache, rotateAtOffset } from '../../render/canvas.js';\nimport CanvasReplayGroup, { replayDeclutter } from '../../render/canvas/ReplayGroup.js';\nimport { ORDER } from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { create as createTransform, compose as composeTransform, reset as resetTransform, scale as scaleTransform, translate as translateTransform } from '../../transform.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\n\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE, ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\n\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\n\nvar CanvasVectorTileLayerRenderer =\n/*@__PURE__*/\nfunction (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n    CanvasTileLayerRenderer.call(this, layer, true);\n    /**\n     * Declutter tree.\n     * @private\n     */\n\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.dirty_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.renderedLayerRevision_;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.tmpTransform_ = createTransform();\n    var renderMode = layer.getRenderMode(); // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  }\n\n  if (CanvasTileLayerRenderer) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create(CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype);\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n  /**\n   * @inheritDoc\n   */\n\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal() {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile(z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(\n      /** @type {import(\"../../VectorImageTile.js\").default} */\n      tile, pixelRatio, projection);\n\n      if (this.context) {\n        this.renderTileImage_(\n        /** @type {import(\"../../VectorImageTile.js\").default} */\n        tile, pixelRatio, projection);\n      }\n    }\n\n    return tile;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage(tile) {\n    var tileLayer =\n    /** @type {import(\"../../layer/Tile.js\").default} */\n    this.getLayer();\n    return (\n      /** @type {import(\"../../VectorImageTile.js\").default} */\n      tile.getImage(tileLayer)\n    );\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame(frameState, layerState) {\n    var layer =\n    /** @type {import(\"../../layer/Vector.js\").default} */\n    this.getLayer();\n    var layerRevision = layer.getRevision();\n\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_(tile, pixelRatio, projection) {\n    var this$1 = this;\n    var layer =\n    /** @type {import(\"../../layer/Vector.js\").default} */\n    this.getLayer();\n    var revision = layer.getRevision();\n    var renderOrder =\n    /** @type {import(\"../../render.js\").OrderFunction} */\n    layer.getRenderOrder() || null;\n    var replayState = tile.getReplayState(layer);\n\n    if (!replayState.dirty && replayState.renderedRevision == revision && replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source =\n    /** @type {import(\"../../source/VectorTile.js\").default} */\n    layer.getSource();\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function loop(t, tt) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null : buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution, pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n\n      var render = function render(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent); // tile extent in tile pixel space\n\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      loop(t, tt);\n    }\n\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n\n    var features = {};\n    var renderedTiles =\n    /** @type {Array<import(\"../../VectorImageTile.js\").default>} */\n    this.renderedTiles;\n    var bufferedExtent, found;\n    var i, ii;\n\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n\n        var replayGroup =\n        /** @type {CanvasReplayGroup} */\n        sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function (feature) {\n          var key = getUid(feature);\n\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      }\n    }\n\n    return found;\n  };\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_(tile, frameState) {\n    var layer = this.getLayer();\n    var source =\n    /** @type {import(\"../../source/VectorTile.js\").default} */\n    layer.getSource();\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_, offsetX, offsetY, tileResolution / renderResolution, tileResolution / renderResolution, viewState.rotation, (origin[0] - center[0]) / tileResolution, (center[1] - origin[1]) / tileResolution);\n  };\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_(event) {\n    var layer = this.getLayer();\n\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose(context, frameState, layerState) {\n    var layer =\n    /** @type {import(\"../../layer/Vector.js\").default} */\n    this.getLayer();\n    var renderMode = layer.getRenderMode();\n\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source =\n      /** @type {import(\"../../source/VectorTile.js\").default} */\n      layer.getSource();\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile =\n        /** @type {import(\"../../VectorImageTile.js\").default} */\n        tiles[i];\n\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n\n          var replayGroup =\n          /** @type {CanvasReplayGroup} */\n          sourceTile.getReplayGroup(layer, tileCoord.toString());\n\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity; // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n\n            if (currentZ < zs[j]) {\n              context.beginPath(); // counter-clockwise (outer ring) for current tile\n\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]); // clockwise (inner ring) for higher resolution tile\n\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n        /** @type {number} */\n        offsetX,\n        /** @type {number} */\n        offsetY);\n      }\n    }\n\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1(feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n\n    var loading = false;\n\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(replayGroup, feature, styles[i], squaredTolerance, this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(replayGroup, feature, styles, squaredTolerance, this.handleStyleImageChange_, this);\n    }\n\n    return loading;\n  };\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n\n\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_(tile, pixelRatio, projection) {\n    var layer =\n    /** @type {import(\"../../layer/Vector.js\").default} */\n    this.getLayer();\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source =\n      /** @type {import(\"../../source/VectorTile.js\").default} */\n      layer.getSource();\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup =\n        /** @type {CanvasReplayGroup} */\n        sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer);\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\n\n\nCanvasVectorTileLayerRenderer['handles'] = function (layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\n\n\nCanvasVectorTileLayerRenderer['create'] = function (mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(\n  /** @type {import(\"../../layer/VectorTile.js\").default} */\n  layer);\n};\n\nexport default CanvasVectorTileLayerRenderer;","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\n\nvar Map =\n/*@__PURE__*/\nfunction (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if (PluggableMap) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create(PluggableMap && PluggableMap.prototype);\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer() {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([CanvasImageLayerRenderer, CanvasTileLayerRenderer, CanvasVectorLayerRenderer, CanvasVectorTileLayerRenderer]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap);\n\nexport default Map;","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\n\nexport function defaults(opt_options) {\n  var options = opt_options ? opt_options : {};\n  var controls = new Collection();\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ? options.attribution : true;\n\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\n\nexport function defaults(opt_options) {\n  var options = opt_options ? opt_options : {};\n  var interactions = new Collection();\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ? options.altShiftDragRotate : true;\n\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n}","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\n\nvar Tile =\n/*@__PURE__*/\nfunction (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n    var options = opt_options ? opt_options : {};\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n\n    this.tileCoord = tileCoord;\n    /**\n     * @protected\n     * @type {TileState}\n     */\n\n    this.state = state;\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n\n    this.interimTile = null;\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n\n    this.key = '';\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n\n    this.transitionStarts_ = {};\n  }\n\n  if (EventTarget) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create(EventTarget && EventTarget.prototype);\n  Tile.prototype.constructor = Tile;\n  /**\n   * @protected\n   */\n\n  Tile.prototype.changed = function changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n  /**\n   * @return {string} Key.\n   */\n\n\n  Tile.prototype.getKey = function getKey() {\n    return this.key + '/' + this.tileCoord;\n  };\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n\n\n  Tile.prototype.getInterimTile = function getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n\n    var tile = this.interimTile; // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n\n      tile = tile.interimTile;\n    } while (tile); // we can not find a better tile\n\n\n    return this;\n  };\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n\n\n  Tile.prototype.refreshInterimChain = function refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev =\n    /** @type {Tile} */\n    this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n\n      tile = prev.interimTile;\n    } while (tile);\n  };\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n\n\n  Tile.prototype.getTileCoord = function getTileCoord() {\n    return this.tileCoord;\n  };\n  /**\n   * @return {TileState} State.\n   */\n\n\n  Tile.prototype.getState = function getState() {\n    return this.state;\n  };\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n\n\n  Tile.prototype.setState = function setState(state) {\n    this.state = state;\n    this.changed();\n  };\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n\n\n  Tile.prototype.load = function load() {};\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n\n\n  Tile.prototype.getAlpha = function getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + 1000 / 60; // avoid rendering at 0\n\n    if (delta >= this.transition_) {\n      return 1;\n    }\n\n    return easeIn(delta / this.transition_);\n  };\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n\n\n  Tile.prototype.inTransition = function inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n\n    return this.transitionStarts_[id] !== -1;\n  };\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n\n\n  Tile.prototype.endTransition = function endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget);\n\nexport default Tile;","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\n\nvar ImageTile =\n/*@__PURE__*/\nfunction (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n    Tile.call(this, tileCoord, state, opt_options);\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    this.crossOrigin_ = crossOrigin;\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n\n    this.src_ = src;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    this.image_ = new Image();\n\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n\n\n    this.imageListenerKeys_ = null;\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  if (Tile) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create(Tile && Tile.prototype);\n  ImageTile.prototype.constructor = ImageTile;\n  /**\n   * @inheritDoc\n   */\n\n  ImageTile.prototype.disposeInternal = function disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n\n\n  ImageTile.prototype.getImage = function getImage() {\n    return this.image_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  ImageTile.prototype.getKey = function getKey() {\n    return this.src_;\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n\n\n  ImageTile.prototype.handleImageError_ = function handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n\n\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_() {\n    var image =\n    /** @type {HTMLImageElement} */\n    this.image_;\n\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  ImageTile.prototype.load = function load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this), listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile);\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\n\n\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\n\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\n\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\n\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\n\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\n\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << z - 1;\n  var i, charCode;\n\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n\n  return digits.join('');\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\n\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n\n  var extent = tileGrid.getExtent();\n  var tileRange;\n\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\n\nvar TileCache =\n/*@__PURE__*/\nfunction (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n    LRUCache.call(this, opt_highWaterMark);\n  }\n\n  if (LRUCache) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create(LRUCache && LRUCache.prototype);\n  TileCache.prototype.constructor = TileCache;\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n\n  TileCache.prototype.expireCache = function expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n\n\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache);\n\nexport default TileCache;","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\n\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj); // calculate the ideal resolution of the source data\n\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  } // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n\n  var sourceExtent = sourceProj.getExtent();\n\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) / sourceResolution;\n\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\n\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\n\n\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n  var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n  var stitchScale = pixelRatio / sourceResolution;\n  sources.forEach(function (src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n    stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n  var targetTopLeft = getTopLeft(targetExtent);\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0],\n        y0 = source[0][1];\n    var x1 = source[1][0],\n        y1 = source[1][1];\n    var x2 = source[2][0],\n        y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution; // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n    var augmentedMatrix = [[x1, y1, 0, 0, u1 - u0], [x2, y2, 0, 0, u2 - u0], [0, 0, x1, y1, v1 - v0], [0, 0, x2, y2, v2 - v0]];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n    context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n    context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n    context.restore();\n  }\n\n  return context.canvas;\n}","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\n\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\n\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\n\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n\n  this.targetProj_ = targetProj;\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n\n  this.transformInv_ = function (c) {\n    var key = c[0] + '/' + c[1];\n\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n\n    return transformInvCache[key];\n  };\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n\n\n  this.maxSourceExtent_ = maxSourceExtent;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n\n  this.triangles_ = [];\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n\n  this.wrapsXInSource_ = false;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() && !!maxSourceExtent && !!this.sourceProj_.getExtent() && getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n  /**\n   * @type {?number}\n   * @private\n   */\n\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ? getWidth(this.sourceProj_.getExtent()) : null;\n  /**\n   * @type {?number}\n   * @private\n   */\n\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ? getWidth(this.targetProj_.getExtent()) : null;\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n  this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function (triangle, i, arr) {\n      leftBound = Math.min(leftBound, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    }); // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n\n    this.triangles_.forEach(function (triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]], [triangle.source[1][0], triangle.source[1][1]], [triangle.source[2][0], triangle.source[2][1]]];\n\n        if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n\n        if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n\n        if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        } // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n\n\n        var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n\n        if (maxX - minX < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\n\n\nTriangulation.prototype.addTriangle_ = function addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\n\n\nTriangulation.prototype.addQuad_ = function addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth =\n  /** @type {number} */\n  this.sourceWorldWidth_; // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n\n  var wrapsX = this.sourceProj_.canWrapX() && sourceCoverageX > 0.5 && sourceCoverageX < 1;\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n    }\n\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) || !isFinite(bSrc[0]) || !isFinite(bSrc[1]) || !isFinite(cSrc[0]) || !isFinite(cSrc[1]) || !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n      var dx;\n\n      if (wrapsX) {\n        var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) + modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n        this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n        this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\n\n\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent() {\n  var extent = createEmpty();\n  this.triangles_.forEach(function (triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n  return extent;\n};\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\n\n\nTriangulation.prototype.getTriangles = function getTriangles() {\n  return this.triangles_;\n};\n\nexport default Triangulation;","/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\n\nvar ReprojTile =\n/*@__PURE__*/\nfunction (Tile) {\n  function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.gutter_ = gutter;\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    this.canvas_ = null;\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n\n    this.sourceTileGrid_ = sourceTileGrid;\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n\n    this.targetTileGrid_ = targetTileGrid;\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n\n    this.sourceTiles_ = [];\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n\n    this.sourcesListenerKeys_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.sourceZ_ = 0;\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n    var limitedTargetExtent = maxTargetExtent ? getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(this.wrappedTileCoord_[0]);\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n\n    this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if (Tile) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create(Tile && Tile.prototype);\n  ReprojTile.prototype.constructor = ReprojTile;\n  /**\n   * @inheritDoc\n   */\n\n  ReprojTile.prototype.disposeInternal = function disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n\n    Tile.prototype.disposeInternal.call(this);\n  };\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n\n\n  ReprojTile.prototype.getImage = function getImage() {\n    return this.canvas_;\n  };\n  /**\n   * @private\n   */\n\n\n  ReprojTile.prototype.reproject_ = function reproject_() {\n    var sources = [];\n    this.sourceTiles_.forEach(function (tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n      this.state = TileState.LOADED;\n    }\n\n    this.changed();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  ReprojTile.prototype.load = function load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      var leftToLoad = 0;\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        var state = tile.getState();\n\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n          var sourceListenKey = listen(tile, EventType.CHANGE, function (e) {\n            var state = tile.getState();\n\n            if (state == TileState.LOADED || state == TileState.ERROR || state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        var state = tile.getState();\n\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile);\n\nexport default ReprojTile;","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString()).replace(xRegEx, tileCoord[1].toString()).replace(yRegEx, function () {\n          var y = -tileCoord[2] - 1;\n          return y.toString();\n        }).replace(dashYRegEx, function () {\n          var z = tileCoord[0];\n          var range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n\n          var y = range.getHeight() + tileCoord[2];\n          return y.toString();\n        });\n      }\n    }\n  );\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\n\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\n\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n\n    return urls;\n  }\n\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n\n    return urls;\n  }\n\n  urls.push(url);\n  return urls;\n}","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\n\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\n\nvar TileGrid = function TileGrid(options) {\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function (a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n  // check if we've got a consistent zoom factor and origin\n\n  var zoomFactor;\n\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n\n  this.zoomFactor_ = zoomFactor;\n  /**\n   * @protected\n   * @type {number}\n   */\n\n  this.maxZoom = this.resolutions_.length - 1;\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n\n  this.origins_ = null;\n\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined && !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(!this.origin_ && this.origins_ || this.origin_ && !this.origins_, 18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n\n  this.tileSizes_ = null;\n\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n\n\n  this.tileSize_ = options.tileSize !== undefined ? options.tileSize : !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(!this.tileSize_ && this.tileSizes_ || this.tileSize_ && !this.tileSizes_, 22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n\n  this.extent_ = extent !== undefined ? extent : null;\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n\n  this.fullTileRanges_ = null;\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function (size, z) {\n      var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n};\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\n\n\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord(extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\n\n\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n\n    --z;\n  }\n\n  return false;\n};\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\n\n\nTileGrid.prototype.getExtent = function getExtent() {\n  return this.extent_;\n};\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\n\n\nTileGrid.prototype.getMaxZoom = function getMaxZoom() {\n  return this.maxZoom;\n};\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\n\n\nTileGrid.prototype.getMinZoom = function getMinZoom() {\n  return this.minZoom;\n};\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\n\n\nTileGrid.prototype.getOrigin = function getOrigin(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\n\n\nTileGrid.prototype.getResolution = function getResolution(z) {\n  return this.resolutions_[z];\n};\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\n\n\nTileGrid.prototype.getResolutions = function getResolutions() {\n  return this.resolutions_;\n};\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\n\n\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n\n  return null;\n};\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\n\n\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent(z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\n\n\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\n\n\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter(tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution, origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution];\n};\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\n\n\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent(tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\n\n\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\n\n\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_(x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\n\n\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\n\n\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\n\n\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\n\n\nTileGrid.prototype.getTileSize = function getTileSize(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\n\n\nTileGrid.prototype.getFullTileRange = function getFullTileRange(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\n\n\nTileGrid.prototype.getZForResolution = function getZForResolution(resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\n\n\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_(extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n\n  this.fullTileRanges_ = fullTileRanges;\n};\n\nexport default TileGrid;","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\n\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n\n  return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\n\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\n\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\n\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n  };\n  return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\n\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n  var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n\n  return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\n\n\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\n\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n\n  return extent;\n}","/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\n\nvar TileSource =\n/*@__PURE__*/\nfunction (Source) {\n  function TileSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n\n    this.tileCache = new TileCache(options.cacheSize);\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n\n    this.tmpSize = [0, 0];\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this.key_ = options.key || '';\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n\n    this.tileOptions = {\n      transition: options.transition\n    };\n  }\n\n  if (Source) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create(Source && Source.prototype);\n  TileSource.prototype.constructor = TileSource;\n  /**\n   * @return {boolean} Can expire cache.\n   */\n\n  TileSource.prototype.canExpireCache = function canExpireCache() {\n    return this.tileCache.canExpireCache();\n  };\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n\n\n  TileSource.prototype.expireCache = function expireCache(projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n\n\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile(projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile =\n          /** @type {!import(\"../Tile.js\").default} */\n          tileCache.get(tileCoordKey);\n          loaded = tile.getState() === TileState.LOADED;\n\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n\n    return covered;\n  };\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n\n\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection(projection) {\n    return 0;\n  };\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n\n\n  TileSource.prototype.getKey = function getKey() {\n    return this.key_;\n  };\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n\n\n  TileSource.prototype.setKey = function setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n\n\n  TileSource.prototype.getOpaque = function getOpaque(projection) {\n    return this.opaque_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TileSource.prototype.getResolutions = function getResolutions() {\n    return this.tileGrid.getResolutions();\n  };\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n\n\n  TileSource.prototype.getTile = function getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n\n\n  TileSource.prototype.getTileGrid = function getTileGrid() {\n    return this.tileGrid;\n  };\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n\n\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n\n\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection(projection) {\n    var thisProj = this.getProjection();\n\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n\n\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n\n\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize(z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n\n\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TileSource.prototype.refresh = function refresh() {\n    this.tileCache.clear();\n    this.changed();\n  };\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n\n\n  TileSource.prototype.useTile = function useTile(z, x, y, projection) {};\n\n  return TileSource;\n}(Source);\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\n\n\nexport var TileSourceEvent =\n/*@__PURE__*/\nfunction (Event) {\n  function TileSourceEvent(type, tile) {\n    Event.call(this, type);\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n\n    this.tile = tile;\n  }\n\n  if (Event) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create(Event && Event.prototype);\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n  return TileSourceEvent;\n}(Event);\nexport default TileSource;","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n};","/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\n\nvar TileImage =\n/*@__PURE__*/\nfunction (UrlTile) {\n  function TileImage(options) {\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n    /**\n     * @protected\n     * @type {?string}\n     */\n\n    this.crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n\n    this.tileClass = options.tileClass !== undefined ? options.tileClass : ImageTile;\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n\n    this.tileCacheForProjection = {};\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n\n    this.tileGridForProjection = {};\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if (UrlTile) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create(UrlTile && UrlTile.prototype);\n  TileImage.prototype.constructor = TileImage;\n  /**\n   * @inheritDoc\n   */\n\n  TileImage.prototype.canExpireCache = function canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TileImage.prototype.expireCache = function expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n\n    var usedTileCache = this.getTileCacheForProjection(projection);\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection(projection) {\n    if (ENABLE_RASTER_REPROJECTION && this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n  /**\n   * @return {number} Gutter.\n   */\n\n\n  TileImage.prototype.getGutter = function getGutter() {\n    return 0;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TileImage.prototype.getOpaque = function getOpaque(projection) {\n    if (ENABLE_RASTER_REPROJECTION && this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n\n    var thisProj = this.getProjection();\n\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */\n        this.tileGridForProjection[projKey]\n      );\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n\n    var thisProj = this.getProjection();\n\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n\n\n  TileImage.prototype.createTile_ = function createTile_(z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    var tileUrl = urlTileCoord ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    return tile;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TileImage.prototype.getTile = function getTile(z, x, y, pixelRatio, projection) {\n    var sourceProjection =\n    /** @type {!import(\"../proj/Projection.js\").default} */\n    this.getProjection();\n\n    if (!ENABLE_RASTER_REPROJECTION || !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n\n      if (cache.containsKey(tileCoordKey)) {\n        tile =\n        /** @type {!import(\"../Tile.js\").default} */\n        cache.get(tileCoordKey);\n      }\n\n      var key = this.getKey();\n\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n\n        return newTile;\n      }\n    }\n  };\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n\n\n  TileImage.prototype.getTileInternal = function getTileInternal(z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key); //make the new tile the head of the list,\n\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n\n    return tile;\n  };\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n\n\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges(render) {\n    if (!ENABLE_RASTER_REPROJECTION || this.renderReprojectionEdges_ == render) {\n      return;\n    }\n\n    this.renderReprojectionEdges_ = render;\n\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n\n    this.changed();\n  };\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n\n\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n\n      if (proj) {\n        var projKey = getUid(proj);\n\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile);\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\n\n\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;","/**\n * @module ol/source/XYZ\n */\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\n\nvar XYZ =\n/*@__PURE__*/\nfunction (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid : createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n  }\n\n  if (TileImage) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create(TileImage && TileImage.prototype);\n  XYZ.prototype.constructor = XYZ;\n  return XYZ;\n}(TileImage);\n\nexport default XYZ;","/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\n\nvar UrlTile =\n/*@__PURE__*/\nfunction (TileSource) {\n  function UrlTile(options) {\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n\n    this.tileLoadFunction = options.tileLoadFunction;\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n\n\n    this.tileLoadingKeys_ = {};\n  }\n\n  if (TileSource) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create(TileSource && TileSource.prototype);\n  UrlTile.prototype.constructor = UrlTile;\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction() {\n    return this.tileLoadFunction;\n  };\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n\n\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction() {\n    return this.tileUrlFunction;\n  };\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n\n\n  UrlTile.prototype.getUrls = function getUrls() {\n    return this.urls;\n  };\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n\n\n  UrlTile.prototype.handleTileChange = function handleTileChange(event) {\n    var tile =\n    /** @type {import(\"../Tile.js\").default} */\n    event.target;\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR : tileState == TileState.LOADED || tileState == TileState.ABORT ? TileEventType.TILELOADEND : undefined;\n    }\n\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n\n\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n\n\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n\n\n  UrlTile.prototype.setUrl = function setUrl(url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n\n\n  UrlTile.prototype.setUrls = function setUrls(urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  UrlTile.prototype.useTile = function useTile(z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource);\n\nexport default UrlTile;","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\n\nvar FeatureFormat = function FeatureFormat() {\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n\n  this.defaultFeatureProjection = null;\n};\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\n\n\nFeatureFormat.prototype.getReadOptions = function getReadOptions(source, opt_options) {\n  var options;\n\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ? opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n\n  return this.adaptOptions(options);\n};\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\n\n\nFeatureFormat.prototype.adaptOptions = function adaptOptions(options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\n\n\nFeatureFormat.prototype.getLastExtent = function getLastExtent() {\n  return null;\n};\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\n\n\nFeatureFormat.prototype.getType = function getType() {\n  return abstract();\n};\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\n\n\nFeatureFormat.prototype.readFeature = function readFeature(source, opt_options) {\n  return abstract();\n};\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\n\n\nFeatureFormat.prototype.readFeatures = function readFeatures(source, opt_options) {\n  return abstract();\n};\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\n\n\nFeatureFormat.prototype.readGeometry = function readGeometry(source, opt_options) {\n  return abstract();\n};\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\n\n\nFeatureFormat.prototype.readProjection = function readProjection(source) {\n  return abstract();\n};\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n\n\nFeatureFormat.prototype.writeFeature = function writeFeature(feature, opt_options) {\n  return abstract();\n};\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n\n\nFeatureFormat.prototype.writeFeatures = function writeFeatures(features, opt_options) {\n  return abstract();\n};\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n\n\nFeatureFormat.prototype.writeGeometry = function writeGeometry(geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\n\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n\n  var transformed;\n\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(geometry, dataProjection, featureProjection);\n    } else {\n      transformed = (write ?\n      /** @type {import(\"../geom/Geometry\").default} */\n      geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n\n  if (write && opt_options &&\n  /** @type {WriteOptions} */\n  opt_options.decimals !== undefined && !Array.isArray(transformed)) {\n    var power = Math.pow(10,\n    /** @type {WriteOptions} */\n    opt_options.decimals); // if decimals option on write, round each coordinate appropriately\n\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n\n    var transform = function transform(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n\n      return coordinates;\n    };\n\n    if (transformed === geometry) {\n      transformed =\n      /** @type {import(\"../geom/Geometry\").default} */\n      geometry.clone();\n    }\n\n    transformed.applyTransform(transform);\n  }\n\n  return transformed;\n}","/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\n\nvar JSONFeature =\n/*@__PURE__*/\nfunction (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if (FeatureFormat) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create(FeatureFormat && FeatureFormat.prototype);\n  JSONFeature.prototype.constructor = JSONFeature;\n  /**\n   * @inheritDoc\n   */\n\n  JSONFeature.prototype.getType = function getType() {\n    return FormatType.JSON;\n  };\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n\n\n  JSONFeature.prototype.readFeature = function readFeature(source, opt_options) {\n    return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n  };\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n\n\n  JSONFeature.prototype.readFeatures = function readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n  };\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n\n\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject(object, opt_options) {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  };\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n\n\n  JSONFeature.prototype.readGeometry = function readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n  };\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n\n\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject(object, opt_options) {\n    return abstract();\n  };\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n\n\n  JSONFeature.prototype.readProjection = function readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n\n\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject(object) {\n    return abstract();\n  };\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n\n\n  JSONFeature.prototype.writeFeature = function writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n\n\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject(feature, opt_options) {\n    return abstract();\n  };\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n\n\n  JSONFeature.prototype.writeFeatures = function writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n\n\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject(features, opt_options) {\n    return abstract();\n  };\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n\n\n  JSONFeature.prototype.writeGeometry = function writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n\n\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat);\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\n\n\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ?\n    /** @type {Object} */\n    object : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;","/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\n\nvar GeometryCollection =\n/*@__PURE__*/\nfunction (Geometry) {\n  function GeometryCollection(opt_geometries) {\n    Geometry.call(this);\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n    this.listenGeometriesChange_();\n  }\n\n  if (Geometry) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create(Geometry && Geometry.prototype);\n  GeometryCollection.prototype.constructor = GeometryCollection;\n  /**\n   * @private\n   */\n\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n    }\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n\n\n  GeometryCollection.prototype.clone = function clone() {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GeometryCollection.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n\n    var geometries = this.geometries_;\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n    }\n\n    return minSquaredDistance;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GeometryCollection.prototype.containsXY = function containsXY(x, y) {\n    var geometries = this.geometries_;\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GeometryCollection.prototype.computeExtent = function computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n\n    return extent;\n  };\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n\n\n  GeometryCollection.prototype.getGeometries = function getGeometries() {\n    return cloneGeometries(this.geometries_);\n  };\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n\n\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray() {\n    return this.geometries_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n\n    if (squaredTolerance < 0 || this.simplifiedGeometryMaxMinSquaredTolerance !== 0 && squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance) {\n      return this;\n    }\n\n    var key = squaredTolerance.toString();\n\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  GeometryCollection.prototype.getType = function getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent(extent) {\n    var geometries = this.geometries_;\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @return {boolean} Is empty.\n   */\n\n\n  GeometryCollection.prototype.isEmpty = function isEmpty() {\n    return this.geometries_.length === 0;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  GeometryCollection.prototype.rotate = function rotate(angle, anchor) {\n    var geometries = this.geometries_;\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n\n    this.changed();\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  GeometryCollection.prototype.scale = function scale(sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n\n    var geometries = this.geometries_;\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n\n    this.changed();\n  };\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n\n\n  GeometryCollection.prototype.setGeometries = function setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n\n\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  GeometryCollection.prototype.applyTransform = function applyTransform(transformFn) {\n    var geometries = this.geometries_;\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n\n    this.changed();\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  GeometryCollection.prototype.translate = function translate(deltaX, deltaY) {\n    var geometries = this.geometries_;\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n\n    this.changed();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GeometryCollection.prototype.disposeInternal = function disposeInternal() {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry);\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\n\n\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\n\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] + fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] + fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) / (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\n\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n\n  var coordinate;\n\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } // FIXME use O(1) search\n\n\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n\n  var lo = offset / stride;\n  var hi = end / stride;\n\n  while (lo < hi) {\n    var mid = lo + hi >> 1;\n\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n\n  var m0 = flatCoordinates[lo * stride - 1];\n\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n  }\n\n  coordinate.push(m);\n  return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\n\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n\n  var coordinate;\n\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n\n    if (offset == end) {\n      continue;\n    }\n\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n    }\n\n    offset = end;\n  }\n\n  return null;\n}","/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\n\nvar LineString =\n/*@__PURE__*/\nfunction (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n\n    this.flatMidpoint_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.flatMidpointRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout,\n      /** @type {Array<number>} */\n      coordinates);\n    } else {\n      this.setCoordinates(\n      /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n      coordinates, opt_layout);\n    }\n  }\n\n  if (SimpleGeometry) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create(SimpleGeometry && SimpleGeometry.prototype);\n  LineString.prototype.constructor = LineString;\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n\n  LineString.prototype.appendCoordinate = function appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n\n\n  LineString.prototype.clone = function clone() {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LineString.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n\n    return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n\n\n  LineString.prototype.forEachSegment = function forEachSegment$1(callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n\n\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM(m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM && this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n\n\n  LineString.prototype.getCoordinates = function getCoordinates() {\n    return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n\n\n  LineString.prototype.getCoordinateAt = function getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n  };\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n\n\n  LineString.prototype.getLength = function getLength() {\n    return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n\n\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n\n    return this.flatMidpoint_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal(squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  LineString.prototype.getType = function getType() {\n    return GeometryType.LINE_STRING;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  LineString.prototype.intersectsExtent = function intersectsExtent(extent) {\n    return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n  };\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n\n\n  LineString.prototype.setCoordinates = function setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n\n    this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry);\n\nexport default LineString;","/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\n\nvar MultiLineString =\n/*@__PURE__*/\nfunction (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n    SimpleGeometry.call(this);\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n\n    this.ends_ = [];\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n      /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */\n      coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout,\n      /** @type {Array<number>} */\n      coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings =\n      /** @type {Array<LineString>} */\n      coordinates;\n      var flatCoordinates = [];\n      var ends = [];\n\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  if (SimpleGeometry) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create(SimpleGeometry && SimpleGeometry.prototype);\n  MultiLineString.prototype.constructor = MultiLineString;\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n\n  MultiLineString.prototype.appendLineString = function appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n\n\n  MultiLineString.prototype.clone = function clone() {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  MultiLineString.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n\n    return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n\n\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (this.layout != GeometryLayout.XYM && this.layout != GeometryLayout.XYZM || this.flatCoordinates.length === 0) {\n      return null;\n    }\n\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n\n\n  MultiLineString.prototype.getCoordinates = function getCoordinates() {\n    return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n  /**\n   * @return {Array<number>} Ends.\n   */\n\n\n  MultiLineString.prototype.getEnds = function getEnds() {\n    return this.ends_;\n  };\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n\n\n  MultiLineString.prototype.getLineString = function getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n\n    return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n\n\n  MultiLineString.prototype.getLineStrings = function getLineStrings() {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n\n    var lineStrings = [];\n    var offset = 0;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n\n    return lineStrings;\n  };\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n\n\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints() {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n\n    return midpoints;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal(squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  MultiLineString.prototype.getType = function getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent(extent) {\n    return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n\n\n  MultiLineString.prototype.setCoordinates = function setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n\n    var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry);\n\nexport default MultiLineString;","/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\n\nvar MultiPoint =\n/*@__PURE__*/\nfunction (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout,\n      /** @type {Array<number>} */\n      coordinates);\n    } else {\n      this.setCoordinates(\n      /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n      coordinates, opt_layout);\n    }\n  }\n\n  if (SimpleGeometry) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create(SimpleGeometry && SimpleGeometry.prototype);\n  MultiPoint.prototype.constructor = MultiPoint;\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n\n  MultiPoint.prototype.appendPoint = function appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n\n\n  MultiPoint.prototype.clone = function clone() {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  MultiPoint.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n\n        closestPoint.length = stride;\n      }\n    }\n\n    return minSquaredDistance;\n  };\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n\n\n  MultiPoint.prototype.getCoordinates = function getCoordinates() {\n    return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n\n\n  MultiPoint.prototype.getPoint = function getPoint(index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n\n    if (index < 0 || n <= index) {\n      return null;\n    }\n\n    return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n\n\n  MultiPoint.prototype.getPoints = function getPoints() {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n\n    var points = [];\n\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n\n    return points;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  MultiPoint.prototype.getType = function getType() {\n    return GeometryType.MULTI_POINT;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent(extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n\n\n  MultiPoint.prototype.setCoordinates = function setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n\n    this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry);\n\nexport default MultiPoint;","/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\n\nvar MultiPolygon =\n/*@__PURE__*/\nfunction (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n    SimpleGeometry.call(this);\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n\n    this.endss_ = [];\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.flatInteriorPointsRevision_ = -1;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.flatInteriorPoints_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDelta_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.maxDeltaRevision_ = -1;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.orientedRevision_ = -1;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons =\n      /** @type {Array<Polygon>} */\n      coordinates;\n      var flatCoordinates = [];\n      var endss = [];\n\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout,\n      /** @type {Array<number>} */\n      coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n      /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */\n      coordinates, opt_layout);\n    }\n  }\n\n  if (SimpleGeometry) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create(SimpleGeometry && SimpleGeometry.prototype);\n  MultiPolygon.prototype.constructor = MultiPolygon;\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n\n  MultiPolygon.prototype.appendPolygon = function appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    var ends;\n\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n\n    this.endss_.push(ends);\n    this.changed();\n  };\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n\n\n  MultiPolygon.prototype.clone = function clone() {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  MultiPolygon.prototype.closestPointXY = function closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n\n    return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  MultiPolygon.prototype.containsXY = function containsXY(x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n\n\n  MultiPolygon.prototype.getArea = function getArea() {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n\n\n  MultiPolygon.prototype.getCoordinates = function getCoordinates(opt_right) {\n    var flatCoordinates;\n\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n  };\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n\n\n  MultiPolygon.prototype.getEndss = function getEndss() {\n    return this.endss_;\n  };\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n\n\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n\n    return this.flatInteriorPoints_;\n  };\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n\n\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n\n\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n\n      if (linearRingsAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n\n      this.orientedRevision_ = this.getRevision();\n    }\n\n    return this.orientedFlatCoordinates_;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal(squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n\n\n  MultiPolygon.prototype.getPolygon = function getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n\n    var offset;\n\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n\n\n  MultiPolygon.prototype.getPolygons = function getPolygons() {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n\n    return polygons;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  MultiPolygon.prototype.getType = function getType() {\n    return GeometryType.MULTI_POLYGON;\n  };\n  /**\n   * @inheritDoc\n   * @api\n   */\n\n\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n\n\n  MultiPolygon.prototype.setCoordinates = function setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n\n    var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry);\n\nexport default MultiPolygon;","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\n\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n\n  return flatCenters;\n}","/**\n * @module ol/format/GeoJSON\n */\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\n\nvar GeoJSON =\n/*@__PURE__*/\nfunction (JSONFeature) {\n  function GeoJSON(opt_options) {\n    var options = opt_options ? opt_options : {};\n    JSONFeature.call(this);\n    /**\n     * @inheritDoc\n     */\n\n    this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n\n\n    this.geometryName_ = options.geometryName;\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n\n    this.extractGeometryName_ = options.extractGeometryName;\n  }\n\n  if (JSONFeature) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create(JSONFeature && JSONFeature.prototype);\n  GeoJSON.prototype.constructor = GeoJSON;\n  /**\n   * @inheritDoc\n   */\n\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n\n    if (object['type'] === 'Feature') {\n      geoJSONFeature =\n      /** @type {GeoJSONFeature} */\n      object;\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry':\n        /** @type {GeoJSONGeometry} */\n        object,\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n\n    return feature;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject(object, opt_options) {\n    var geoJSONObject =\n    /** @type {GeoJSONObject} */\n    object;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n\n    var features = null;\n\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection =\n      /** @type {GeoJSONFeatureCollection} */\n      object;\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n\n    return features;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject(object, opt_options) {\n    return readGeometry(\n    /** @type {GeoJSONGeometry} */\n    object, opt_options);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject(object) {\n    var crs = object['crs'];\n    var projection;\n\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */\n      projection\n    );\n  };\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n\n\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    /** @type {GeoJSONFeature} */\n\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  };\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n\n\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n\n\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature);\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\n\n\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n\n\n  var geometry;\n\n  switch (object['type']) {\n    case GeometryType.POINT:\n      {\n        geometry = readPointGeometry(\n        /** @type {GeoJSONPoint} */\n        object);\n        break;\n      }\n\n    case GeometryType.LINE_STRING:\n      {\n        geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */\n        object);\n        break;\n      }\n\n    case GeometryType.POLYGON:\n      {\n        geometry = readPolygonGeometry(\n        /** @type {GeoJSONPolygon} */\n        object);\n        break;\n      }\n\n    case GeometryType.MULTI_POINT:\n      {\n        geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */\n        object);\n        break;\n      }\n\n    case GeometryType.MULTI_LINE_STRING:\n      {\n        geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */\n        object);\n        break;\n      }\n\n    case GeometryType.MULTI_POLYGON:\n      {\n        geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */\n        object);\n        break;\n      }\n\n    case GeometryType.GEOMETRY_COLLECTION:\n      {\n        geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */\n        object);\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unsupported GeoJSON type: ' + object.type);\n      }\n  }\n\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    transformWithOptions(geometry, false, opt_options)\n  );\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\n\n\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n  /**\n   * @param {GeoJSONGeometry} geometry Geometry.\n   * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   */\n  function (geometry) {\n    return readGeometry(geometry, opt_options);\n  });\n  return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\n\n\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\n\n\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\n\n\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\n\n\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\n\n\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\n\n\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n\n\nfunction writeGeometry(geometry, opt_options) {\n  geometry =\n  /** @type {import(\"../geom/Geometry.js\").default} */\n  transformWithOptions(geometry, true, opt_options);\n  var type = geometry.getType();\n  /** @type {GeoJSONGeometry} */\n\n  var geoJSON;\n\n  switch (type) {\n    case GeometryType.POINT:\n      {\n        geoJSON = writePointGeometry(\n        /** @type {Point} */\n        geometry, opt_options);\n        break;\n      }\n\n    case GeometryType.LINE_STRING:\n      {\n        geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */\n        geometry, opt_options);\n        break;\n      }\n\n    case GeometryType.POLYGON:\n      {\n        geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */\n        geometry, opt_options);\n        break;\n      }\n\n    case GeometryType.MULTI_POINT:\n      {\n        geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */\n        geometry, opt_options);\n        break;\n      }\n\n    case GeometryType.MULTI_LINE_STRING:\n      {\n        geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */\n        geometry, opt_options);\n        break;\n      }\n\n    case GeometryType.MULTI_POLYGON:\n      {\n        geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */\n        geometry, opt_options);\n        break;\n      }\n\n    case GeometryType.GEOMETRY_COLLECTION:\n      {\n        geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */\n        geometry, opt_options);\n        break;\n      }\n\n    case GeometryType.CIRCLE:\n      {\n        geoJSON = {\n          type: 'GeometryCollection',\n          geometries: []\n        };\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unsupported geometry type: ' + type);\n      }\n  }\n\n  return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\n\n\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function (geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n\n\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n\n\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n\n\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n\n\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n\n\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n\n\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\nexport default GeoJSON;","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\n\nvar TileLayer =\n/*@__PURE__*/\nfunction (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var baseOptions = assign({}, options);\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ? options.useInterimTilesOnError : true);\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n\n    this.type = LayerType.TILE;\n  }\n\n  if (Layer) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create(Layer && Layer.prototype);\n  TileLayer.prototype.constructor = TileLayer;\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n\n  TileLayer.prototype.getPreload = function getPreload() {\n    return (\n      /** @type {number} */\n      this.get(TileProperty.PRELOAD)\n    );\n  };\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n\n\n  TileLayer.prototype.setPreload = function setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n\n\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError() {\n    return (\n      /** @type {boolean} */\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  };\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n\n\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer);\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\n\n\nTileLayer.prototype.getSource;\nexport default TileLayer;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createBreakpoints;\nexports.keys = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\")); // Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\n\n\nvar keys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.\n\nexports.keys = keys;\n\nfunction createBreakpoints(breakpoints) {\n  var _breakpoints$values = breakpoints.values,\n      values = _breakpoints$values === void 0 ? {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920\n  } : _breakpoints$values,\n      _breakpoints$unit = breakpoints.unit,\n      unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit,\n      _breakpoints$step = breakpoints.step,\n      step = _breakpoints$step === void 0 ? 5 : _breakpoints$step,\n      other = (0, _objectWithoutProperties2.default)(breakpoints, [\"values\", \"unit\", \"step\"]);\n\n  function up(key) {\n    var value = typeof values[key] === 'number' ? values[key] : key;\n    return \"@media (min-width:\".concat(value).concat(unit, \")\");\n  }\n\n  function down(key) {\n    var endIndex = keys.indexOf(key) + 1;\n    var upperbound = values[keys[endIndex]];\n\n    if (endIndex === keys.length) {\n      // xl down applies to all sizes\n      return up('xs');\n    }\n\n    var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;\n    return \"@media (max-width:\".concat(value - step / 100).concat(unit, \")\");\n  }\n\n  function between(start, end) {\n    var endIndex = keys.indexOf(end) + 1;\n\n    if (endIndex === keys.length) {\n      return up(start);\n    }\n\n    return \"@media (min-width:\".concat(values[start]).concat(unit, \") and \") + \"(max-width:\".concat(values[keys[endIndex]] - step / 100).concat(unit, \")\");\n  }\n\n  function only(key) {\n    return between(key, key);\n  }\n\n  function width(key) {\n    return values[key];\n  }\n\n  return (0, _extends2.default)({\n    keys: keys,\n    values: values,\n    up: up,\n    down: down,\n    between: between,\n    only: only,\n    width: width\n  }, other);\n}","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\n\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\n\nvar Text = function Text(opt_options) {\n  var options = opt_options || {};\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n\n  this.font_ = options.font;\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n\n  this.rotation_ = options.rotation;\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n\n  this.rotateWithView_ = options.rotateWithView;\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n\n  this.scale_ = options.scale;\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n\n  this.text_ = options.text;\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n\n  this.textAlign_ = options.textAlign;\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n\n  this.textBaseline_ = options.textBaseline;\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n\n  this.fill_ = options.fill !== undefined ? options.fill : new Fill({\n    color: DEFAULT_FILL_COLOR\n  });\n  /**\n  * @private\n  * @type {number}\n  */\n\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n  /**\n  * @private\n  * @type {boolean}\n  */\n\n  this.overflow_ = !!options.overflow;\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n  /**\n  * @private\n  * @type {number}\n  */\n\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n  /**\n  * @private\n  * @type {number}\n  */\n\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\n\n\nText.prototype.clone = function clone() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\n\n\nText.prototype.getOverflow = function getOverflow() {\n  return this.overflow_;\n};\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\n\n\nText.prototype.getFont = function getFont() {\n  return this.font_;\n};\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\n\n\nText.prototype.getMaxAngle = function getMaxAngle() {\n  return this.maxAngle_;\n};\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\n\n\nText.prototype.getPlacement = function getPlacement() {\n  return this.placement_;\n};\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\n\n\nText.prototype.getOffsetX = function getOffsetX() {\n  return this.offsetX_;\n};\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\n\n\nText.prototype.getOffsetY = function getOffsetY() {\n  return this.offsetY_;\n};\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\n\n\nText.prototype.getFill = function getFill() {\n  return this.fill_;\n};\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\n\n\nText.prototype.getRotateWithView = function getRotateWithView() {\n  return this.rotateWithView_;\n};\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\n\n\nText.prototype.getRotation = function getRotation() {\n  return this.rotation_;\n};\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\n\n\nText.prototype.getScale = function getScale() {\n  return this.scale_;\n};\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\n\n\nText.prototype.getStroke = function getStroke() {\n  return this.stroke_;\n};\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\n\n\nText.prototype.getText = function getText() {\n  return this.text_;\n};\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\n\n\nText.prototype.getTextAlign = function getTextAlign() {\n  return this.textAlign_;\n};\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\n\n\nText.prototype.getTextBaseline = function getTextBaseline() {\n  return this.textBaseline_;\n};\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\n\n\nText.prototype.getBackgroundFill = function getBackgroundFill() {\n  return this.backgroundFill_;\n};\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\n\n\nText.prototype.getBackgroundStroke = function getBackgroundStroke() {\n  return this.backgroundStroke_;\n};\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\n\n\nText.prototype.getPadding = function getPadding() {\n  return this.padding_;\n};\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\n\n\nText.prototype.setOverflow = function setOverflow(overflow) {\n  this.overflow_ = overflow;\n};\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\n\n\nText.prototype.setFont = function setFont(font) {\n  this.font_ = font;\n};\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\n\n\nText.prototype.setMaxAngle = function setMaxAngle(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\n\n\nText.prototype.setOffsetX = function setOffsetX(offsetX) {\n  this.offsetX_ = offsetX;\n};\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\n\n\nText.prototype.setOffsetY = function setOffsetY(offsetY) {\n  this.offsetY_ = offsetY;\n};\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\n\n\nText.prototype.setPlacement = function setPlacement(placement) {\n  this.placement_ = placement;\n};\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\n\n\nText.prototype.setFill = function setFill(fill) {\n  this.fill_ = fill;\n};\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\n\n\nText.prototype.setRotation = function setRotation(rotation) {\n  this.rotation_ = rotation;\n};\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\n\n\nText.prototype.setScale = function setScale(scale) {\n  this.scale_ = scale;\n};\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\n\n\nText.prototype.setStroke = function setStroke(stroke) {\n  this.stroke_ = stroke;\n};\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\n\n\nText.prototype.setText = function setText(text) {\n  this.text_ = text;\n};\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\n\n\nText.prototype.setTextAlign = function setTextAlign(textAlign) {\n  this.textAlign_ = textAlign;\n};\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\n\n\nText.prototype.setTextBaseline = function setTextBaseline(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\n\n\nText.prototype.setBackgroundFill = function setBackgroundFill(fill) {\n  this.backgroundFill_ = fill;\n};\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\n\n\nText.prototype.setBackgroundStroke = function setBackgroundStroke(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\n\n\nText.prototype.setPadding = function setPadding(padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _createBreakpoints = _interopRequireDefault(require(\"./createBreakpoints\"));\n\nvar _createMixins = _interopRequireDefault(require(\"./createMixins\"));\n\nvar _createPalette = _interopRequireDefault(require(\"./createPalette\"));\n\nvar _createTypography = _interopRequireDefault(require(\"./createTypography\"));\n\nvar _shadows = _interopRequireDefault(require(\"./shadows\"));\n\nvar _shape = _interopRequireDefault(require(\"./shape\"));\n\nvar _createSpacing = _interopRequireDefault(require(\"./createSpacing\"));\n\nvar _transitions = _interopRequireDefault(require(\"./transitions\"));\n\nvar _zIndex = _interopRequireDefault(require(\"./zIndex\"));\n\nfunction createMuiTheme() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,\n      _options$mixins = options.mixins,\n      mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,\n      _options$palette = options.palette,\n      paletteInput = _options$palette === void 0 ? {} : _options$palette,\n      shadowsInput = options.shadows,\n      spacingInput = options.spacing,\n      _options$typography = options.typography,\n      typographyInput = _options$typography === void 0 ? {} : _options$typography,\n      other = (0, _objectWithoutProperties2.default)(options, [\"breakpoints\", \"mixins\", \"palette\", \"shadows\", \"spacing\", \"typography\"]);\n  var palette = (0, _createPalette.default)(paletteInput);\n  var breakpoints = (0, _createBreakpoints.default)(breakpointsInput);\n  var spacing = (0, _createSpacing.default)(spacingInput);\n  var muiTheme = (0, _extends2.default)({\n    breakpoints: breakpoints,\n    direction: 'ltr',\n    mixins: (0, _createMixins.default)(breakpoints, spacing, mixinsInput),\n    overrides: {},\n    // Inject custom styles\n    palette: palette,\n    props: {},\n    // Inject custom props\n    shadows: shadowsInput || _shadows.default,\n    typography: (0, _createTypography.default)(palette, typographyInput),\n    spacing: spacing\n  }, (0, _utils.deepmerge)({\n    shape: _shape.default,\n    transitions: _transitions.default,\n    zIndex: _zIndex.default\n  }, other));\n\n  if (process.env.NODE_ENV !== 'production') {\n    var pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected'];\n\n    var traverse = function traverse(node, parentKey) {\n      var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var key; // eslint-disable-next-line guard-for-in, no-restricted-syntax\n\n      for (key in node) {\n        var child = node[key];\n\n        if (depth === 1) {\n          if (key.indexOf('Mui') === 0 && child) {\n            traverse(child, key, depth + 1);\n          }\n        } else if (pseudoClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error([\"Material-UI: the `\".concat(parentKey, \"` component increases \") + \"the CSS specificity of the `\".concat(key, \"` internal state.\"), 'You can not override it like this: ', JSON.stringify(node, null, 2), '', 'Instead, you need to use the $ruleName syntax:', JSON.stringify({\n              root: (0, _defineProperty2.default)({}, \"&$\".concat(key), child)\n            }, null, 2), '', 'https://material-ui.com/r/pseudo-classes-guide'].join('\\n'));\n          } // Remove the style to prevent global conflicts.\n\n\n          node[key] = {};\n        }\n      }\n    };\n\n    traverse(muiTheme.overrides);\n  }\n\n  return muiTheme;\n}\n\nvar _default = createMuiTheme;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createMixins;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends3 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nfunction createMixins(breakpoints, spacing, mixins) {\n  var _toolbar;\n\n  return (0, _extends3.default)({\n    gutters: function gutters() {\n      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // To deprecate in v4.1\n      //       warning(\n      //         false,\n      //         [\n      //           'Material-UI: theme.mixins.gutters() is deprecated.',\n      //           'You can use the source of the mixin directly:',\n      //           `\n      // paddingLeft: theme.spacing(2),\n      // paddingRight: theme.spacing(2),\n      // [theme.breakpoints.up('sm')]: {\n      //   paddingLeft: theme.spacing(3),\n      //   paddingRight: theme.spacing(3),\n      // },\n      // `,\n      //         ].join('\\n'),\n      //       );\n\n      return (0, _extends3.default)({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles, (0, _defineProperty2.default)({}, breakpoints.up('sm'), (0, _extends3.default)({\n        paddingLeft: spacing(3),\n        paddingRight: spacing(3)\n      }, styles[breakpoints.up('sm')])));\n    },\n    toolbar: (_toolbar = {\n      minHeight: 56\n    }, (0, _defineProperty2.default)(_toolbar, \"\".concat(breakpoints.up('xs'), \" and (orientation: landscape)\"), {\n      minHeight: 48\n    }), (0, _defineProperty2.default)(_toolbar, breakpoints.up('sm'), {\n      minHeight: 64\n    }), _toolbar)\n  }, mixins);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createPalette;\nexports.dark = exports.light = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _indigo = _interopRequireDefault(require(\"../colors/indigo\"));\n\nvar _pink = _interopRequireDefault(require(\"../colors/pink\"));\n\nvar _grey = _interopRequireDefault(require(\"../colors/grey\"));\n\nvar _red = _interopRequireDefault(require(\"../colors/red\"));\n\nvar _common = _interopRequireDefault(require(\"../colors/common\"));\n\nvar _colorManipulator = require(\"./colorManipulator\");\n\nvar light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.54)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)',\n    // Text hints.\n    hint: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: _common.default.white,\n    default: _grey.default[50]\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.08)',\n    hoverOpacity: 0.08,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.14)',\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)'\n  }\n};\nexports.light = light;\nvar dark = {\n  text: {\n    primary: _common.default.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    hint: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: _grey.default[800],\n    default: '#303030'\n  },\n  action: {\n    active: _common.default.white,\n    hover: 'rgba(255, 255, 255, 0.1)',\n    hoverOpacity: 0.1,\n    selected: 'rgba(255, 255, 255, 0.2)',\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)'\n  }\n};\nexports.dark = dark;\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = (0, _colorManipulator.lighten)(intent.main, tonalOffset);\n    } else if (direction === 'dark') {\n      intent.dark = (0, _colorManipulator.darken)(intent.main, tonalOffset * 1.5);\n    }\n  }\n}\n\nfunction createPalette(palette) {\n  var _palette$primary = palette.primary,\n      primary = _palette$primary === void 0 ? {\n    light: _indigo.default[300],\n    main: _indigo.default[500],\n    dark: _indigo.default[700]\n  } : _palette$primary,\n      _palette$secondary = palette.secondary,\n      secondary = _palette$secondary === void 0 ? {\n    light: _pink.default.A200,\n    main: _pink.default.A400,\n    dark: _pink.default.A700\n  } : _palette$secondary,\n      _palette$error = palette.error,\n      error = _palette$error === void 0 ? {\n    light: _red.default[300],\n    main: _red.default[500],\n    dark: _red.default[700]\n  } : _palette$error,\n      _palette$type = palette.type,\n      type = _palette$type === void 0 ? 'light' : _palette$type,\n      _palette$contrastThre = palette.contrastThreshold,\n      contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,\n      _palette$tonalOffset = palette.tonalOffset,\n      tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,\n      other = (0, _objectWithoutProperties2.default)(palette, [\"primary\", \"secondary\", \"error\", \"type\", \"contrastThreshold\", \"tonalOffset\"]); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n  function getContrastText(background) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!background) {\n        console.error(\"Material-UI: missing background argument in getContrastText(\".concat(background, \").\"));\n      }\n    }\n\n    var contrastText = (0, _colorManipulator.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var contrast = (0, _colorManipulator.getContrastRatio)(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([\"Material-UI: the contrast ratio of \".concat(contrast, \":1 for \").concat(contrastText, \" on \").concat(background), 'falls below the WACG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  function augmentColor(color) {\n    var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n    var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;\n    color = (0, _extends2.default)({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!color.main) {\n        throw new Error(['Material-UI: the color provided to augmentColor(color) is invalid.', \"The color object needs to have a `main` property or a `\".concat(mainShade, \"` property.\")].join('\\n'));\n      }\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  }\n\n  var types = {\n    dark: dark,\n    light: light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!types[type]) {\n      console.error(\"Material-UI: the palette type `\".concat(type, \"` is not supported.\"));\n    }\n  }\n\n  var paletteOutput = (0, _utils.deepmerge)((0, _extends2.default)({\n    // A collection of common colors.\n    common: _common.default,\n    // The palette type, can be light or dark.\n    type: type,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor(primary),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor(error),\n    // The grey colors.\n    grey: _grey.default,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: contrastThreshold,\n    // Take a background color and return the color of the text to maximize the contrast.\n    getContrastText: getContrastText,\n    // Generate a rich color object.\n    augmentColor: augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: tonalOffset\n  }, types[type]), other, {\n    clone: false // No need to clone deep\n\n  });\n  return paletteOutput;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar indigo = {\n  50: '#e8eaf6',\n  100: '#c5cae9',\n  200: '#9fa8da',\n  300: '#7986cb',\n  400: '#5c6bc0',\n  500: '#3f51b5',\n  600: '#3949ab',\n  700: '#303f9f',\n  800: '#283593',\n  900: '#1a237e',\n  A100: '#8c9eff',\n  A200: '#536dfe',\n  A400: '#3d5afe',\n  A700: '#304ffe'\n};\nvar _default = indigo;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nvar _default = pink;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#d5d5d5',\n  A200: '#aaaaaa',\n  A400: '#303030',\n  A700: '#616161'\n};\nvar _default = grey;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nvar _default = red;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar common = {\n  black: '#000',\n  white: '#fff'\n};\nvar _default = common;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToRgb = hexToRgb;\nexports.rgbToHex = rgbToHex;\nexports.hslToRgb = hslToRgb;\nexports.decomposeColor = decomposeColor;\nexports.recomposeColor = recomposeColor;\nexports.getContrastRatio = getContrastRatio;\nexports.getLuminance = getLuminance;\nexports.emphasize = emphasize;\nexports.fade = fade;\nexports.darken = darken;\nexports.lighten = lighten;\n/* eslint-disable no-use-before-define */\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\n\nfunction clamp(value) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(\"Material-UI: the value provided \".concat(value, \" is out of range [\").concat(min, \", \").concat(max, \"].\"));\n    }\n  }\n\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n *\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\n\n\nfunction hexToRgb(color) {\n  color = color.substr(1);\n  var re = new RegExp(\".{1,\".concat(color.length / 3, \"}\"), 'g');\n  var colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(function (n) {\n      return n + n;\n    });\n  }\n\n  return colors ? \"rgb(\".concat(colors.map(function (n) {\n    return parseInt(n, 16);\n  }).join(', '), \")\") : '';\n}\n\nfunction intToHex(int) {\n  var hex = int.toString(16);\n  return hex.length === 1 ? \"0\".concat(hex) : hex;\n}\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n *\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\n\n\nfunction rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n\n  var _decomposeColor = decomposeColor(color),\n      values = _decomposeColor.values;\n\n  return \"#\".concat(values.map(function (n) {\n    return intToHex(n);\n  }).join(''));\n}\n/**\n * Converts a color from hsl format to rgb format.\n *\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\n\n\nfunction hslToRgb(color) {\n  color = decomposeColor(color);\n  var _color = color,\n      values = _color.values;\n  var h = values[0];\n  var s = values[1] / 100;\n  var l = values[2] / 100;\n  var a = s * Math.min(l, 1 - l);\n\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  };\n\n  var type = 'rgb';\n  var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n\n  return recomposeColor({\n    type: type,\n    values: rgb\n  });\n}\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\n\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n\n  var marker = color.indexOf('(');\n  var type = color.substring(0, marker);\n\n  if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n    throw new Error([\"Material-UI: unsupported `\".concat(color, \"` color.\"), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\\n'));\n  }\n\n  var values = color.substring(marker + 1, color.length - 1).split(',');\n  values = values.map(function (value) {\n    return parseFloat(value);\n  });\n  return {\n    type: type,\n    values: values\n  };\n}\n/**\n * Converts a color object with type and values to a string.\n *\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\n\n\nfunction recomposeColor(color) {\n  var type = color.type;\n  var values = color.values;\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map(function (n, i) {\n      return i < 3 ? parseInt(n, 10) : n;\n    });\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = \"\".concat(values[1], \"%\");\n    values[2] = \"\".concat(values[2], \"%\");\n  }\n\n  return \"\".concat(type, \"(\").concat(values.join(', '), \")\");\n}\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\n\n\nfunction getContrastRatio(foreground, background) {\n  var lumA = getLuminance(foreground);\n  var lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\n\n\nfunction getLuminance(color) {\n  color = decomposeColor(color);\n  var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(function (val) {\n    val /= 255; // normalized\n\n    return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);\n  }); // Truncate at 3 digits\n\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction emphasize(color) {\n  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0 -1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction fade(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n\n  color.values[3] = value;\n  return recomposeColor(color);\n}\n/**\n * Darkens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Lightens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTypography;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nvar caseAllCaps = {\n  textTransform: 'uppercase'\n};\nvar defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nfunction createTypography(palette, typography) {\n  var _ref = typeof typography === 'function' ? typography(palette) : typography,\n      _ref$fontFamily = _ref.fontFamily,\n      fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,\n      _ref$fontWeightLight = _ref.fontWeightLight,\n      fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,\n      _ref$fontWeightRegula = _ref.fontWeightRegular,\n      fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,\n      _ref$fontWeightMedium = _ref.fontWeightMedium,\n      fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,\n      _ref$fontWeightBold = _ref.fontWeightBold,\n      fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold,\n      _ref$htmlFontSize = _ref.htmlFontSize,\n      htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,\n      allVariants = _ref.allVariants,\n      pxToRem2 = _ref.pxToRem,\n      other = (0, _objectWithoutProperties2.default)(_ref, [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error(\"Material-UI: 'fontSize' is required to be a number.\");\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error(\"Material-UI: 'htmlFontSize' is required to be a number.\");\n    }\n  }\n\n  var coef = fontSize / 14;\n\n  var pxToRem = pxToRem2 || function (size) {\n    return \"\".concat(size / htmlFontSize * coef, \"rem\");\n  };\n\n  var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {\n    return (0, _extends2.default)({\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      fontSize: pxToRem(size),\n      // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n      lineHeight: lineHeight\n    }, fontFamily === defaultFontFamily ? {\n      letterSpacing: \"\".concat(round(letterSpacing / size), \"em\")\n    } : {}, {}, casing, {}, allVariants);\n  };\n\n  var variants = {\n    h1: buildVariant(fontWeightLight, 96, 1, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.04, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.17, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.33, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return (0, _utils.deepmerge)((0, _extends2.default)({\n    htmlFontSize: htmlFontSize,\n    pxToRem: pxToRem,\n    round: round,\n    // TODO To remove in v5?\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fontWeightLight: fontWeightLight,\n    fontWeightRegular: fontWeightRegular,\n    fontWeightMedium: fontWeightMedium,\n    fontWeightBold: fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar shadowKeyUmbraOpacity = 0.2;\nvar shadowKeyPenumbraOpacity = 0.14;\nvar shadowAmbientShadowOpacity = 0.12;\n\nfunction createShadow() {\n  return [\"\".concat(arguments.length <= 0 ? undefined : arguments[0], \"px \").concat(arguments.length <= 1 ? undefined : arguments[1], \"px \").concat(arguments.length <= 2 ? undefined : arguments[2], \"px \").concat(arguments.length <= 3 ? undefined : arguments[3], \"px rgba(0,0,0,\").concat(shadowKeyUmbraOpacity, \")\"), \"\".concat(arguments.length <= 4 ? undefined : arguments[4], \"px \").concat(arguments.length <= 5 ? undefined : arguments[5], \"px \").concat(arguments.length <= 6 ? undefined : arguments[6], \"px \").concat(arguments.length <= 7 ? undefined : arguments[7], \"px rgba(0,0,0,\").concat(shadowKeyPenumbraOpacity, \")\"), \"\".concat(arguments.length <= 8 ? undefined : arguments[8], \"px \").concat(arguments.length <= 9 ? undefined : arguments[9], \"px \").concat(arguments.length <= 10 ? undefined : arguments[10], \"px \").concat(arguments.length <= 11 ? undefined : arguments[11], \"px rgba(0,0,0,\").concat(shadowAmbientShadowOpacity, \")\")].join(',');\n} // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\n\n\nvar shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\nvar _default = shadows;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar shape = {\n  borderRadius: 4\n};\nvar _default = shape;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSpacing;\nvar warnOnce;\n\nfunction createSpacing() {\n  var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8; // Already transformed.\n\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.\n  // https://material.io/design/layout/understanding-layout.html#pixel-density\n\n\n  var transform;\n\n  if (typeof spacingInput === 'function') {\n    transform = spacingInput;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof spacingInput !== 'number') {\n        console.error([\"Material-UI: the `theme.spacing` value (\".concat(spacingInput, \") is invalid.\"), 'It should be a number or a function.'].join('\\n'));\n      }\n    }\n\n    transform = function transform(factor) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof factor !== 'number') {\n          console.error(\"Expected spacing argument to be a number, got \".concat(factor));\n        }\n      }\n\n      return spacingInput * factor;\n    };\n  }\n\n  var spacing = function spacing() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(\"Material-UI: Too many arguments provided, expected between 0 and 4, got \".concat(args.length));\n      }\n    }\n\n    if (args.length === 0) {\n      return transform(1);\n    }\n\n    if (args.length === 1) {\n      return transform(args[0]);\n    }\n\n    return args.map(function (factor) {\n      var output = transform(factor);\n      return typeof output === 'number' ? \"\".concat(output, \"px\") : output;\n    }).join(' ');\n  }; // Backward compatibility, to remove in v5.\n\n\n  Object.defineProperty(spacing, 'unit', {\n    get: function get() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnOnce || process.env.NODE_ENV === 'test') {\n          console.error(['Material-UI: theme.spacing.unit usage has been deprecated.', 'It will be removed in v5.', 'You can replace `theme.spacing.unit * y` with `theme.spacing(y)`.', '', 'You can use the `https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api` migration helper to make the process smoother.'].join('\\n'));\n        }\n\n        warnOnce = true;\n      }\n\n      return spacingInput;\n    }\n  });\n  spacing.mui = true;\n  return spacing;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.isNumber = exports.isString = exports.formatMs = exports.duration = exports.easing = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\")); // Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\n\n\nvar easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexports.easing = easing;\nvar duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nexports.duration = duration;\n\nvar formatMs = function formatMs(milliseconds) {\n  return \"\".concat(Math.round(milliseconds), \"ms\");\n};\n\nexports.formatMs = formatMs;\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nexports.isString = isString;\n\nvar isNumber = function isNumber(value) {\n  return !isNaN(parseFloat(value));\n};\n/**\n * @param {string|Array} props\n * @param {object} param\n * @param {string} param.prop\n * @param {number} param.duration\n * @param {string} param.easing\n * @param {number} param.delay\n */\n\n\nexports.isNumber = isNumber;\nvar _default = {\n  easing: easing,\n  duration: duration,\n  create: function create() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$duration = options.duration,\n        durationOption = _options$duration === void 0 ? duration.standard : _options$duration,\n        _options$easing = options.easing,\n        easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing,\n        _options$delay = options.delay,\n        delay = _options$delay === void 0 ? 0 : _options$delay,\n        other = (0, _objectWithoutProperties2.default)(options, [\"duration\", \"easing\", \"delay\"]);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('Material-UI: argument \"props\" must be a string or Array.');\n      }\n\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(\"Material-UI: argument \\\"duration\\\" must be a number or a string but found \".concat(durationOption, \".\"));\n      }\n\n      if (!isString(easingOption)) {\n        console.error('Material-UI: argument \"easing\" must be a string.');\n      }\n\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('Material-UI: argument \"delay\" must be a number or a string.');\n      }\n\n      if (Object.keys(other).length !== 0) {\n        console.error(\"Material-UI: unrecognized argument(s) [\".concat(Object.keys(other).join(','), \"]\"));\n      }\n    }\n\n    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {\n      return \"\".concat(animatedProp, \" \").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), \" \").concat(easingOption, \" \").concat(typeof delay === 'string' ? delay : formatMs(delay));\n    }).join(',');\n  },\n  getAutoHeightDuration: function getAutoHeightDuration(height) {\n    if (!height) {\n      return 0;\n    }\n\n    var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0; // We need to centralize the zIndex definitions as they work\n// like global values in the browser.\n\nvar zIndex = {\n  mobileStepper: 1000,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500\n};\nvar _default = zIndex;\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, light && classes.light, {\n      vertical: classes.vertical\n    }[orientation]),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"],"sourceRoot":""}