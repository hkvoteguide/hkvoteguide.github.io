{"version":3,"sources":["components/atoms/Link.js","components/organisms/LanguageSwitcher.js","components/organisms/MobileAppBar.js"],"names":["UnstyledLink","styled","Link","_templateObject","UnstyledNavLink","NavLink","_templateObject2","DefaultLink","_templateObject3","COLORS","main","primary","RightIconButton","IconButton","LanguageSwitcher","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleButtonClose","changeLanguage","lng","path","window","location","pathname","includes","replace","concat","fireEvent","ca","ac","lb","t","useTranslation","react_default","a","createElement","Fragment","color","component","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Translate_default","Menu_Menu","id","keepMounted","open","Boolean","onClose","MenuItem","StyledAppBar","AppBar","MobileAppBar_templateObject","AppBarTitle","MobileAppBar","dispatch","useContext","ContextStore","drawer","position","Toolbar","disableGutters","to","Typography","variant","align","role","type","DRAWER_OPEN","Menu_default","organisms_LanguageSwitcher"],"mappings":"6oBAKO,IAAMA,EAAeC,YAAOC,IAAPD,CAAHE,KAOZC,EAAkBH,YAAOI,IAAPJ,CAAHK,KAMfC,EAAcN,YAAOD,EAAPC,CAAHO,IACbC,IAAOC,KAAKC,iWCVvB,IAAMC,EAAkBX,YAAOY,IAAPZ,CAAHE,KAyENW,MAlEf,SAA0BC,GAAO,IAAAC,EACCC,IAAMC,SAAS,MADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACxBM,EADwBH,EAAA,GACdI,EADcJ,EAAA,GAOzBK,EAAoB,WACxBD,EAAY,OAGRE,EAAiB,SAAAC,GACrB,IAAIC,EAAOC,OAAOC,SAASC,SACvBH,EAAKI,SAAS,SAAmB,OAARL,GAC3BC,EAAOA,EAAKK,QAAQ,OAAQ,QAC5BJ,OAAOC,SAASC,SAAWH,GAClBA,EAAKI,SAAS,SAAmB,OAARL,GAClCC,EAAOA,EAAKK,QAAQ,OAAQ,QAC5BJ,OAAOC,SAASC,SAAWH,GACjBA,EAAKI,SAAS,SAAYJ,EAAKI,SAAS,QAIlDP,KAHAG,EAAI,GAAAM,OAAMP,GAANO,OAAYN,GAChBC,OAAOC,SAASC,SAAWH,GAI7BO,YAAU,CACRC,GAAI,WACJC,GAAI,QACJC,GAAE,aAAAJ,OAAeP,MAIbY,EAAMC,cAAND,EAER,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC9B,EAAD,CACEgC,MAAM,UACNC,UAAU,OACVC,aAAW,oBACXC,gBAAc,YACdC,gBAAc,OACdC,QAvCoB,SAAAC,GACxB3B,EAAY2B,EAAMC,iBAwCdX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,OAEFD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,GAAG,YACHhC,SAAUA,EACViC,aAAW,EACXC,KAAMC,QAAQnC,GACdoC,QAASlC,GAETgB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAUV,QAAS,kBAAMxB,EAAe,QAErCa,EAAE,YAELE,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAUV,QAAS,kBAAMxB,EAAe,QAErCa,EAAE,sUC9Db,IAAMsB,EAAe3D,YAAO4D,IAAP5D,CAAH6D,KAQZC,EAAc9D,YAAOG,IAAPH,CAAHK,KAuDF0D,UA9Cf,SAAsBjD,GAAO,IAEfkD,EACRhD,IAAMiD,WAAWC,KADnBC,OAAUH,SAGZ,OACEzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACkB,EAAD,CAAcS,SAAS,UACrB7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAASC,gBAAc,GACrB/B,EAAAC,EAAAC,cAACqB,EAAD,CAAaS,GAAI,KACfhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAC7BnC,EAAAC,EAAAC,cAAA,QAAMkC,KAAK,MAAM9B,aAAW,iDAA5B,mDAKJN,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CACE+B,MAAM,UACNC,UAAU,OACVC,aAAW,SACXG,QAAS,WACPgB,EAAS,CAAEY,KAAMC,MACjB5C,YAAU,CACRC,GAAI,UACJC,GAAI,QACJC,GAAI,kBAIRG,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,OAEFD,EAAAC,EAAAC,cAACsC,EAAD,CACE/B,QAAS,kBACPf,YAAU,CACRC,GAAI,UACJC,GAAI,QACJC,GAAI","file":"static/js/30.07143fc8.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { COLORS } from 'ui/theme'\n\nexport const UnstyledLink = styled(Link)`\n  text-decoration: unset;\n  color: black;\n  font-style: unset;\n  cursor: pointer;\n`\n\nexport const UnstyledNavLink = styled(NavLink)`\n  text-decoration: unset;\n  color: unset;\n  font-style: unset;\n  cursor: pointer;\n`\nexport const DefaultLink = styled(UnstyledLink)`\n  color: ${COLORS.main.primary};\n  font-weight: 500;\n`\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport styled from 'styled-components'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TranslateIcon from '@material-ui/icons/Translate'\nimport { useTranslation } from 'react-i18next'\nimport { fireEvent } from 'utils/ga_fireevent'\n\nconst RightIconButton = styled(IconButton)`\n  && {\n    position: absolute;\n    right: 0;\n  }\n`\n\nfunction LanguageSwitcher(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleButtonClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleButtonClose = () => {\n    setAnchorEl(null)\n  }\n\n  const changeLanguage = lng => {\n    var path = window.location.pathname\n    if (path.includes('/en/') && lng === 'zh') {\n      path = path.replace('/en/', '/zh/')\n      window.location.pathname = path\n    } else if (path.includes('/zh/') && lng === 'en') {\n      path = path.replace('/zh/', '/en/')\n      window.location.pathname = path\n    } else if (!path.includes('/en/') && !path.includes('/zh/')) {\n      path = `${lng}${path}`\n      window.location.pathname = path\n    } else {\n      handleButtonClose()\n    }\n    fireEvent({\n      ca: 'language',\n      ac: 'click',\n      lb: `switch_to_${lng}`,\n    })\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <RightIconButton\n        color=\"inherit\"\n        component=\"span\"\n        aria-label=\"Language Switcher\"\n        aria-controls=\"lang-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleButtonClick}\n      >\n        <TranslateIcon />\n      </RightIconButton>\n      <Menu\n        id=\"lang-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleButtonClose}\n      >\n        <MenuItem onClick={() => changeLanguage('zh')}>\n          {/* ‰∏≠Êñá */}\n          {t('lang.zh')}\n        </MenuItem>\n        <MenuItem onClick={() => changeLanguage('en')}>\n          {/* English */}\n          {t('lang.en')}\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default LanguageSwitcher\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport ContextStore from 'ContextStore'\nimport { DRAWER_OPEN } from '../../reducers/drawer'\nimport { UnstyledNavLink } from '../atoms/Link'\nimport LanguageSwitcher from './LanguageSwitcher'\nimport { fireEvent } from 'utils/ga_fireevent'\n\nconst StyledAppBar = styled(AppBar)`\n  && {\n    background: white;\n    width: 100%;\n    box-shadow: none;\n  }\n`\n\nconst AppBarTitle = styled(UnstyledNavLink)`\n  && {\n    left: auto;\n    right: auto;\n    width: 100%;\n    position: absolute;\n  }\n`\n\nfunction MobileAppBar(props) {\n  const {\n    drawer: { dispatch },\n  } = React.useContext(ContextStore)\n\n  return (\n    <>\n      <StyledAppBar position=\"sticky\">\n        <Toolbar disableGutters>\n          <AppBarTitle to={'/'}>\n            <Typography variant=\"h1\" align=\"center\">\n              <span role=\"img\" aria-label=\"Vote4.hk ‚úãüèªüíú‚ö°\">\n                Vote4.hk ‚úãüèªüíú‚ö°\n              </span>\n            </Typography>\n          </AppBarTitle>\n          <IconButton\n            color=\"inherit\"\n            component=\"span\"\n            aria-label=\"Search\"\n            onClick={() => {\n              dispatch({ type: DRAWER_OPEN })\n              fireEvent({\n                ca: 'general',\n                ac: 'click',\n                lb: 'menu_drawer',\n              })\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <LanguageSwitcher\n            onClick={() =>\n              fireEvent({\n                ca: 'general',\n                ac: 'click',\n                lb: 'lang_switcher_button', //TODO: do we need that?\n              })\n            }\n          />\n        </Toolbar>\n      </StyledAppBar>\n    </>\n  )\n}\n\nexport default MobileAppBar\n"],"sourceRoot":""}